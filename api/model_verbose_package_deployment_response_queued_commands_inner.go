/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the VerbosePackageDeploymentResponseQueuedCommandsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerbosePackageDeploymentResponseQueuedCommandsInner{}

// VerbosePackageDeploymentResponseQueuedCommandsInner struct for VerbosePackageDeploymentResponseQueuedCommandsInner
type VerbosePackageDeploymentResponseQueuedCommandsInner struct {
	Device *int32 `json:"device,omitempty"`
	CommandUuid *string `json:"commandUuid,omitempty"`
}

// NewVerbosePackageDeploymentResponseQueuedCommandsInner instantiates a new VerbosePackageDeploymentResponseQueuedCommandsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerbosePackageDeploymentResponseQueuedCommandsInner() *VerbosePackageDeploymentResponseQueuedCommandsInner {
	this := VerbosePackageDeploymentResponseQueuedCommandsInner{}
	return &this
}

// NewVerbosePackageDeploymentResponseQueuedCommandsInnerWithDefaults instantiates a new VerbosePackageDeploymentResponseQueuedCommandsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerbosePackageDeploymentResponseQueuedCommandsInnerWithDefaults() *VerbosePackageDeploymentResponseQueuedCommandsInner {
	this := VerbosePackageDeploymentResponseQueuedCommandsInner{}
	return &this
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *VerbosePackageDeploymentResponseQueuedCommandsInner) GetDevice() int32 {
	if o == nil || IsNil(o.Device) {
		var ret int32
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerbosePackageDeploymentResponseQueuedCommandsInner) GetDeviceOk() (*int32, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *VerbosePackageDeploymentResponseQueuedCommandsInner) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given int32 and assigns it to the Device field.
func (o *VerbosePackageDeploymentResponseQueuedCommandsInner) SetDevice(v int32) {
	o.Device = &v
}

// GetCommandUuid returns the CommandUuid field value if set, zero value otherwise.
func (o *VerbosePackageDeploymentResponseQueuedCommandsInner) GetCommandUuid() string {
	if o == nil || IsNil(o.CommandUuid) {
		var ret string
		return ret
	}
	return *o.CommandUuid
}

// GetCommandUuidOk returns a tuple with the CommandUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerbosePackageDeploymentResponseQueuedCommandsInner) GetCommandUuidOk() (*string, bool) {
	if o == nil || IsNil(o.CommandUuid) {
		return nil, false
	}
	return o.CommandUuid, true
}

// HasCommandUuid returns a boolean if a field has been set.
func (o *VerbosePackageDeploymentResponseQueuedCommandsInner) HasCommandUuid() bool {
	if o != nil && !IsNil(o.CommandUuid) {
		return true
	}

	return false
}

// SetCommandUuid gets a reference to the given string and assigns it to the CommandUuid field.
func (o *VerbosePackageDeploymentResponseQueuedCommandsInner) SetCommandUuid(v string) {
	o.CommandUuid = &v
}

func (o VerbosePackageDeploymentResponseQueuedCommandsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerbosePackageDeploymentResponseQueuedCommandsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !IsNil(o.CommandUuid) {
		toSerialize["commandUuid"] = o.CommandUuid
	}
	return toSerialize, nil
}

type NullableVerbosePackageDeploymentResponseQueuedCommandsInner struct {
	value *VerbosePackageDeploymentResponseQueuedCommandsInner
	isSet bool
}

func (v NullableVerbosePackageDeploymentResponseQueuedCommandsInner) Get() *VerbosePackageDeploymentResponseQueuedCommandsInner {
	return v.value
}

func (v *NullableVerbosePackageDeploymentResponseQueuedCommandsInner) Set(val *VerbosePackageDeploymentResponseQueuedCommandsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableVerbosePackageDeploymentResponseQueuedCommandsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableVerbosePackageDeploymentResponseQueuedCommandsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerbosePackageDeploymentResponseQueuedCommandsInner(val *VerbosePackageDeploymentResponseQueuedCommandsInner) *NullableVerbosePackageDeploymentResponseQueuedCommandsInner {
	return &NullableVerbosePackageDeploymentResponseQueuedCommandsInner{value: val, isSet: true}
}

func (v NullableVerbosePackageDeploymentResponseQueuedCommandsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerbosePackageDeploymentResponseQueuedCommandsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


