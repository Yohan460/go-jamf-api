/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the MobileDeviceProvisioningProfiles type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MobileDeviceProvisioningProfiles{}

// MobileDeviceProvisioningProfiles struct for MobileDeviceProvisioningProfiles
type MobileDeviceProvisioningProfiles struct {
	DisplayName *string `json:"displayName,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`
}

// NewMobileDeviceProvisioningProfiles instantiates a new MobileDeviceProvisioningProfiles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileDeviceProvisioningProfiles() *MobileDeviceProvisioningProfiles {
	this := MobileDeviceProvisioningProfiles{}
	return &this
}

// NewMobileDeviceProvisioningProfilesWithDefaults instantiates a new MobileDeviceProvisioningProfiles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileDeviceProvisioningProfilesWithDefaults() *MobileDeviceProvisioningProfiles {
	this := MobileDeviceProvisioningProfiles{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *MobileDeviceProvisioningProfiles) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceProvisioningProfiles) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MobileDeviceProvisioningProfiles) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MobileDeviceProvisioningProfiles) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *MobileDeviceProvisioningProfiles) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceProvisioningProfiles) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *MobileDeviceProvisioningProfiles) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *MobileDeviceProvisioningProfiles) SetUuid(v string) {
	o.Uuid = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *MobileDeviceProvisioningProfiles) GetExpirationDate() time.Time {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceProvisioningProfiles) GetExpirationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *MobileDeviceProvisioningProfiles) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given time.Time and assigns it to the ExpirationDate field.
func (o *MobileDeviceProvisioningProfiles) SetExpirationDate(v time.Time) {
	o.ExpirationDate = &v
}

func (o MobileDeviceProvisioningProfiles) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MobileDeviceProvisioningProfiles) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	return toSerialize, nil
}

type NullableMobileDeviceProvisioningProfiles struct {
	value *MobileDeviceProvisioningProfiles
	isSet bool
}

func (v NullableMobileDeviceProvisioningProfiles) Get() *MobileDeviceProvisioningProfiles {
	return v.value
}

func (v *NullableMobileDeviceProvisioningProfiles) Set(val *MobileDeviceProvisioningProfiles) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileDeviceProvisioningProfiles) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileDeviceProvisioningProfiles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileDeviceProvisioningProfiles(val *MobileDeviceProvisioningProfiles) *NullableMobileDeviceProvisioningProfiles {
	return &NullableMobileDeviceProvisioningProfiles{value: val, isSet: true}
}

func (v NullableMobileDeviceProvisioningProfiles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileDeviceProvisioningProfiles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


