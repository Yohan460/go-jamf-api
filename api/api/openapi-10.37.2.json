{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Jamf Pro API",
    "description" : "## Overview\nThe Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/>\nThe swagger schema can be found [here](/api/schema/).\n",
    "termsOfService" : "https://www.jamf.com/developer-resources/api-license-agreement/",
    "version" : "production"
  },
  "servers" : [ {
    "url" : "/api"
  } ],
  "security" : [ {
    "Bearer" : [ ]
  } ],
  "paths" : {
    "/auth" : {
      "get" : {
        "tags" : [ "api-authentication" ],
        "summary" : "Get all the Authorization details associated with the current api\n",
        "description" : "Get all the authorization details associated with the current api token",
        "responses" : {
          "200" : {
            "description" : "Current authorization details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Authorization"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "x-authentication-required" : true,
        "x-deprecation-date" : "2020-06-01"
      }
    },
    "/auth/current" : {
      "post" : {
        "tags" : [ "api-authentication" ],
        "summary" : "Get the authorization details associated with the current API token\n",
        "description" : "Get the authorization details associated with the current API token for the users current site",
        "responses" : {
          "200" : {
            "description" : "Authorization details for users current site.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrentAuthorization"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "x-authentication-required" : true,
        "x-action" : true,
        "x-deprecation-date" : "2020-06-01"
      }
    },
    "/auth/invalidateToken" : {
      "post" : {
        "tags" : [ "api-authentication" ],
        "summary" : "Invalidate current token\n",
        "description" : "Invalidates current token",
        "responses" : {
          "204" : {
            "description" : "token invalidated"
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "x-authentication-required" : true,
        "x-action" : true,
        "x-deprecation-date" : "2020-06-01"
      }
    },
    "/auth/keepAlive" : {
      "post" : {
        "tags" : [ "api-authentication" ],
        "summary" : "Invalidate existing token and generates new token\n",
        "description" : "Invalidates existing token and generates new token with extended expiration based on existing token credentials.",
        "responses" : {
          "200" : {
            "description" : "Updated token.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthToken"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "x-authentication-required" : true,
        "x-action" : true,
        "x-deprecation-date" : "2020-06-01"
      }
    },
    "/auth/tokens" : {
      "post" : {
        "tags" : [ "api-authentication" ],
        "summary" : "Create a token based on other authentication details (basic, etc.)\n",
        "description" : "Create a token based on other authentication details (basic, etc.)\n",
        "responses" : {
          "200" : {
            "description" : "New auth token generated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthToken"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "BasicAuth" : [ ]
        } ],
        "x-authentication-required" : false,
        "x-action" : true,
        "x-deprecation-date" : "2020-06-01"
      }
    },
    "/devices/extensionAttributes" : {
      "get" : {
        "tags" : [ "mobile-device-extension-attributes-preview" ],
        "summary" : "Get Mobile Device Extension Attribute values placed in select paramter\n",
        "description" : "Gets Mobile Device Extension Attribute values placed in select parameter.",
        "parameters" : [ {
          "name" : "select",
          "in" : "query",
          "description" : "Acceptable values currently include:\n* name\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "name"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response - Extension Attributes retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileDeviceExtensionAttributeResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Mobile Device Extension Attributes" ]
      }
    },
    "/inventory-preload" : {
      "get" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Return all Inventory Preload records\n",
        "description" : "Returns all Inventory Preload records.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ],
            "default" : "ASC"
          }
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "id"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InventoryPreloadRecordSearchResults"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadRecordSearchResults"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-01-01",
        "x-required-privileges" : [ "Read Inventory Preload Records" ]
      },
      "post" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Create a new Inventory Preload record using JSON or CSV\n",
        "description" : "Create a new Inventory Preload record using JSON or CSV.\nA CSV template can be downloaded from /api/inventory-preload/csv-template.\nSerial number and device type are required. All other fields are optional.\nWhen a matching serial number exists in the Inventory Preload data, the record will be overwritten with the CSV data.\nIf the CSV file contains a new username and an email address is provided, the new user is created in Jamf Pro.\nIf the CSV file contains an existing username, the following user-related fields are updated in Jamf Pro.\nFull Name,\nEmail Address,\nPhone Number,\nPosition.\nThis endpoint does not do full validation of each record in the CSV data.\nTo do full validation, use the /inventory-preload/validate-csv endpoint first.\n",
        "requestBody" : {
          "description" : "Inventory Preload record or records to be created",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InventoryPreloadRecord"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/InventoryPreloadRecord"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadRecord"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-01-01",
        "x-required-privileges" : [ "Create Inventory Preload Records" ]
      },
      "delete" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Delete all Inventory Preload records\n",
        "description" : "Deletes all Inventory Preload records.",
        "responses" : {
          "204" : {
            "description" : "OK"
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-01-01",
        "x-required-privileges" : [ "Delete Inventory Preload Records" ]
      }
    },
    "/inventory-preload/csv-template" : {
      "get" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Get the Inventory Preload CSV template\n",
        "description" : "Retrieves the Inventory Preload CSV template.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/csv" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-01-01",
        "x-required-privileges" : [ "Read Inventory Preload Records" ]
      }
    },
    "/inventory-preload/history" : {
      "get" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Get Inventory Preload history entries\n",
        "description" : "Gets Inventory Preload history entries.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/size"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "date:desc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-01-01",
        "x-required-privileges" : [ "Read Inventory Preload Records" ]
      }
    },
    "/inventory-preload/history/notes" : {
      "post" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Add Inventory Preload history object notes\n",
        "description" : "Adds Inventory Preload history object notes.",
        "requestBody" : {
          "description" : "History notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of Inventory Preload history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectHistory"
                }
              }
            }
          },
          "503" : {
            "description" : "Inventory Preload history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-01-01",
        "x-required-privileges" : [ "Update Inventory Preload Records" ]
      }
    },
    "/inventory-preload/validate-csv" : {
      "post" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Validate a given CSV file\n",
        "description" : "Validate a given CSV file.\nSerial number and device type are required. All other fields are optional.\nA CSV template can be downloaded from /api/inventory-preload/csv-template.\n",
        "requestBody" : {
          "description" : "Inventory Preload records to be validated. A CSV template can be downloaded from /api/inventory-preload/csv-template",
          "content" : {
            "text/csv" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadCsvValidationSuccess"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadInvalidCsvResponse"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-01-01",
        "x-required-privileges" : [ "Create Inventory Preload Records" ],
        "x-action" : true
      }
    },
    "/inventory-preload/{id}" : {
      "get" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Get an Inventory Preload record\n",
        "description" : "Retrieves an Inventory Preload record.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Inventory Preload identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadRecord"
                }
              }
            }
          },
          "404" : {
            "description" : "Inventory Preload record with specified id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-01-01",
        "x-required-privileges" : [ "Read Inventory Preload Records" ]
      },
      "put" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Update an Inventory Preload record\n",
        "description" : "Updates an Inventory Preload record.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Inventory Preload identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Inventory Preload record to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InventoryPreloadRecord"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadRecord"
                }
              }
            }
          },
          "404" : {
            "description" : "Inventory Preload record with specified id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-01-01",
        "x-required-privileges" : [ "Update Inventory Preload Records" ]
      },
      "delete" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Delete an Inventory Preload record\n",
        "description" : "Deletes an Inventory Preload record.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Inventory Preload identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Inventory Preload record with specified id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-01-01",
        "x-required-privileges" : [ "Delete Inventory Preload Records" ]
      }
    },
    "/ldap/groups" : {
      "get" : {
        "tags" : [ "ldap" ],
        "summary" : "Retrieve the configured access groups that contain the text in the search param\n",
        "description" : "Retrieves the configured access groups that contain the text in the searchParam.",
        "parameters" : [ {
          "name" : "q",
          "in" : "query",
          "description" : "Will perform a \"contains\" search on the names of access groups",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "null"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapGroupSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/ldap/servers" : {
      "get" : {
        "tags" : [ "ldap" ],
        "summary" : "Retrieve all Servers including LDAP and Cloud Identity Providers.\n",
        "description" : "Retrieve all Servers including LDAP and Cloud Identity Providers.",
        "responses" : {
          "200" : {
            "description" : "Successfully completed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LdapServer"
                  }
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/notifications/alerts" : {
      "get" : {
        "tags" : [ "jamf-pro-notifications-preview" ],
        "summary" : "Get Notifications for user and site\n",
        "description" : "Gets notifications for user and site\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Notification"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-authentication-required" : true,
        "x-deprecation-date" : "2021-01-04"
      }
    },
    "/notifications/alerts/{id}" : {
      "delete" : {
        "tags" : [ "jamf-pro-notifications-preview" ],
        "summary" : "DEPRECATED - USE \"alerts/{type}/{id}\" INSTEAD. Deletes only Patch Management notifications.\n",
        "description" : "DEPRECATED - USE \"alerts/{type}/{id}\" INSTEAD. Deletes only Patch Management notifications.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance ID of the notification",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Sucessful deletion"
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2017-04-26",
        "x-required-privileges" : [ "Dismiss Notifications" ]
      }
    },
    "/notifications/alerts/{type}/{id}" : {
      "delete" : {
        "tags" : [ "jamf-pro-notifications-preview" ],
        "summary" : "Delete Notifications\n",
        "description" : "Deletes notifications. Option for 'type' is 'PATCH_UPDATE'.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance ID of the notification",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "type",
          "in" : "path",
          "description" : "type of the notification",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/NotificationType"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Sucessful deletion"
          }
        },
        "deprecated" : true,
        "x-required-privileges" : [ "Dismiss Notifications" ],
        "x-deprecation-date" : "2021-01-04"
      }
    },
    "/patch/disclaimerAgree" : {
      "post" : {
        "tags" : [ "patches-preview" ],
        "summary" : "Accept Patch reporting disclaimer\n",
        "description" : "Accept Patch reporting disclaimer",
        "responses" : {
          "202" : {
            "description" : "Accepted"
          }
        },
        "x-required-privileges" : [ "Update Patch Management Software Titles" ],
        "x-action" : true
      }
    },
    "/patch/obj/policy/{id}" : {
      "get" : {
        "tags" : [ "patches" ],
        "summary" : "Return Patch Policy Summary\n",
        "description" : "Returns patch policy summary.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "patch policy id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Patch policy summary found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatchPolicySummary"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-01-01",
        "x-required-privileges" : [ "Read Patch Policies" ]
      }
    },
    "/patch/obj/policy/{id}/logs/eligibleRetryCount" : {
      "get" : {
        "tags" : [ "patches-preview" ],
        "summary" : "Return the count of the Patch Policy Logs for the policy is that are eligible for a retry attempt\n",
        "description" : "return the count of the patch policy logs for the policy ID that are eligible for a retry attempt",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "policy id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Number of patch policy logs found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegerWrapper"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Patch Policies" ]
      }
    },
    "/patch/obj/policy/{id}/softwareTitleConfigurationId" : {
      "get" : {
        "tags" : [ "patches-preview" ],
        "summary" : "Return the Software Title Configuration Id for the given patch\n",
        "description" : "Return the Software Title Configuration Id for the given patch policy.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "policy id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Found software title configuration id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegerWrapper"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Patch Policies" ]
      }
    },
    "/patch/obj/softwareTitle/{id}/policies" : {
      "get" : {
        "tags" : [ "patches-preview" ],
        "summary" : "Return the Summaries of the Patch Policies for the software title\n",
        "description" : "Returns the summaries of the patch policies for the software title.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "software title id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Software Title patch policy summaries found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SoftwareTitlePatchPolicySummaries"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Patch Policies" ]
      }
    },
    "/patch/obj/softwareTitleConfiguration/{id}" : {
      "get" : {
        "tags" : [ "patches-preview" ],
        "summary" : "Return the Software Title Configuration\n",
        "description" : "Returns the software title configuration.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "software title configuration id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Software Title Configuration found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SoftwareTitleConfiguration"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Patch Management Software Titles" ]
      }
    },
    "/patch/obj/{id}" : {
      "get" : {
        "tags" : [ "patches-preview" ],
        "summary" : "Return Active Patch Summary\n",
        "description" : "Returns active patch summary.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "patch id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Active Patch Summary",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivePatchSummary"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Patch Management Software Titles" ]
      },
      "put" : {
        "tags" : [ "patches-preview" ],
        "summary" : "Update patch report\n",
        "description" : "Updates patch report.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "patch id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Active patch summary.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivePatchSummary"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Active Patch Summary",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivePatchSummary"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Patch Management Software Titles" ]
      }
    },
    "/patch/obj/{id}/versions" : {
      "get" : {
        "tags" : [ "patches-preview" ],
        "summary" : "Return patch versions\n",
        "description" : "Returns patch versions.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "patch id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Patch versions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PatchVersion"
                  }
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Patch Management Software Titles" ]
      }
    },
    "/patch/objs/policy/{id}" : {
      "get" : {
        "tags" : [ "patches-preview" ],
        "summary" : "Return Patch Policy Summary\n",
        "description" : "Returns patch policy summary.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "patch policy id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Patch policy summary found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatchPolicySummary"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Patch Policies" ]
      }
    },
    "/patch/onDashboard" : {
      "get" : {
        "tags" : [ "patches-preview" ],
        "summary" : "Return list of Patch ids on dashboard\n",
        "description" : "Returns list of patch ids on dashboard.",
        "responses" : {
          "200" : {
            "description" : "Instance IDs returned in associated array, or if no instances present, an empty array shall be returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatchIdsOnDashboard"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Patch Management Software Titles" ]
      }
    },
    "/patch/patch-policies" : {
      "get" : {
        "tags" : [ "patch-policies-preview" ],
        "summary" : "Return a list of patch policies\n",
        "description" : "Returns a list of patch policies.",
        "parameters" : [ {
          "name" : "onDashboard",
          "in" : "query",
          "description" : "Filters whether or not the patch policies are on the dashboard.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "enabled",
          "in" : "query",
          "description" : "Filters whether or not the patch policies are enabled.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Filtered list of patch policy summaries",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PatchPolicySummary"
                  }
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Patch Policies" ]
      }
    },
    "/patch/patch-policies/{id}/dashboard" : {
      "get" : {
        "tags" : [ "patch-policies-preview" ],
        "summary" : "Return whether or not the requested patch policy is on the dashboard\n",
        "description" : "Returns whether or not the requested patch policy is on the dashboard",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "patch policy id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Whether the Patch Policy is on the Dashboard.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatchPolicyOnDashboard"
                }
              }
            }
          },
          "404" : {
            "description" : "The requested Patch Policy does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Patch Policies" ]
      },
      "post" : {
        "tags" : [ "patch-policies-preview" ],
        "summary" : "Add a patch policy to the dashboard\n",
        "description" : "Adds a patch policy to the dashboard.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "patch policy id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          }
        },
        "x-action" : true,
        "x-required-privileges" : [ "Read Patch Policies" ]
      },
      "delete" : {
        "tags" : [ "patch-policies-preview" ],
        "summary" : "Remove a patch policy from the dashboard\n",
        "description" : "Removes a patch policy from the dashboard.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "patch id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          }
        },
        "x-required-privileges" : [ "Read Patch Policies" ]
      }
    },
    "/patch/patch-policies/{id}/logs" : {
      "get" : {
        "tags" : [ "patch-policy-logs-preview" ],
        "summary" : "Return the Patch Policy Attempt details\n",
        "description" : "Returns the patch policy attempt details",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "patch policy id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "device-id",
          "in" : "query",
          "description" : "device id",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Patch Policy Attempt Details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PatchPolicyAttempt"
                  }
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Patch Policies" ]
      }
    },
    "/patch/retryPolicy" : {
      "post" : {
        "tags" : [ "patches-preview" ],
        "summary" : "Retry policy\n",
        "description" : "Retry policy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RetryPatchPolicyParams"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "202" : {
            "description" : "Accepted"
          }
        },
        "x-required-privileges" : [ "Update Patch Policies" ],
        "x-action" : true
      }
    },
    "/patch/searchActivePatchHistory" : {
      "post" : {
        "tags" : [ "patches-preview" ],
        "summary" : "Search the history for a Specific Active Patch\n",
        "description" : "Searches the history for a specific active patch.  This is used to get detailed information about the computers/devices that a specific patch has been applied to.",
        "requestBody" : {
          "description" : "Parameters for search",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchActivePatchHistoryParams"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Search results.  No matches will be indicated by the return of an empty list.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivePatchHistorySearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Patch Management Software Titles" ]
      }
    },
    "/patch/searchPatchPolicyLogs" : {
      "post" : {
        "tags" : [ "patches-preview" ],
        "summary" : "Return Patch Policy Logs\n",
        "description" : "Return patch policy logs",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchPatchPolicyLogParams"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Patch policy logs found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatchPolicyLogSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Patch Policies" ]
      }
    },
    "/patch/svc/disclaimerAgree" : {
      "post" : {
        "tags" : [ "patches" ],
        "summary" : "Accept Patch reporting disclaimer\n",
        "description" : "Accept Patch reporting disclaimer",
        "responses" : {
          "202" : {
            "description" : "Accepted"
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-01-01",
        "x-required-privileges" : [ "Update Patch Management Software Titles" ],
        "x-action" : true
      }
    },
    "/patch/svc/retryPolicy" : {
      "post" : {
        "tags" : [ "patches-preview" ],
        "summary" : "Retry policy\n",
        "description" : "Retry policy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RetryPatchPolicyParams"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "202" : {
            "description" : "Accepted"
          }
        },
        "x-required-privileges" : [ "Update Patch Policies" ],
        "x-action" : true
      }
    },
    "/patch/{id}" : {
      "get" : {
        "tags" : [ "patches" ],
        "summary" : "Return Active Patch Summary\n",
        "description" : "Returns active patch summary.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "patch id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Active Patch Summary",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivePatchSummary"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-01-01",
        "x-required-privileges" : [ "Read Patch Management Software Titles" ]
      },
      "put" : {
        "tags" : [ "patches" ],
        "summary" : "Update patch report\n",
        "description" : "Updates patch report.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "patch id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Active patch summary.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivePatchSummary"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Active Patch Summary",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivePatchSummary"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-01-01",
        "x-required-privileges" : [ "Read Patch Management Software Titles" ]
      }
    },
    "/patch/{id}/versions" : {
      "get" : {
        "tags" : [ "patches" ],
        "summary" : "Return patch versions\n",
        "description" : "Returns patch versions.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "patch id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Patch versions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PatchVersion"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-01-01",
        "x-required-privileges" : [ "Read Patch Management Software Titles" ]
      }
    },
    "/preview/computers" : {
      "get" : {
        "tags" : [ "computers-preview" ],
        "summary" : "Return a list of Computers\n",
        "description" : "Returns a list of computers.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/size"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "name:asc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ComputersSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Computers" ]
      }
    },
    "/preview/enrollment/access-groups" : {
      "get" : {
        "tags" : [ "enrollment" ],
        "summary" : "Retrieve the configured LDAP groups configured for User-Initiated Enrollment.\n",
        "description" : "Retrieves the configured LDAP groups configured for User-Initiated Enrollment.\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `name:asc`. Multiple sort criteria are supported and must be separated\nwith a comma. Example: `sort=date:desc,name:asc`.\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "name:asc" ]
          }
        }, {
          "name" : "all-users-option-first",
          "in" : "query",
          "description" : "Return \"All LDAP Users\" option on the first position if it is present in the current page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Found access groups matching search params.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessGroupsPreviewSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read User-Initiated Enrollment" ]
      },
      "post" : {
        "tags" : [ "enrollment" ],
        "summary" : "Add the configured LDAP group for User-Initiated Enrollment.\n",
        "description" : "Add the configured LDAP group for User-Initiated Enrollment.\n",
        "requestBody" : {
          "description" : "Configured LDAP group to create.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrollmentAccessGroupPreview"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Configured LDAP group record was created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "A record with given ldapServerId and name already exists.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update User-Initiated Enrollment" ]
      }
    },
    "/preview/enrollment/access-groups/{id}" : {
      "get" : {
        "tags" : [ "enrollment" ],
        "summary" : "Retrieve the configured LDAP groups configured for User-Initiated Enrollment\n",
        "description" : "Retrieves the configured LDAP groups configured for User-Initiated Enrollment.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Autogenerated Access Group ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful query",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentAccessGroupPreview"
                }
              }
            }
          },
          "404" : {
            "description" : "Group not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read User-Initiated Enrollment" ]
      },
      "put" : {
        "tags" : [ "enrollment" ],
        "summary" : "Modify the configured LDAP groups configured for User-Initiated Enrollment. Only exiting Access Groups can be updated.\n",
        "description" : "Modify the configured LDAP groups configured for User-Initiated Enrollment. Only exiting Access Groups can be updated.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Autogenerated Access Group ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrollmentAccessGroupPreview"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentAccessGroupPreview"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update User-Initiated Enrollment" ]
      },
      "delete" : {
        "tags" : [ "enrollment" ],
        "summary" : "Delete an LDAP group's access to user initiated Enrollment.\n",
        "description" : "Deletes an LDAP group's access to user initiated enrollment. The group \"All LDAP Users\" cannot be deleted, but it can be modified to disallow User-Initiated Enrollment.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Autogenerated Access Group ID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful deletion"
          },
          "400" : {
            "description" : "\"All LDAP Users\" cannot be deleted.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Group not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update User-Initiated Enrollment" ]
      }
    },
    "/preview/mdm/commands" : {
      "post" : {
        "tags" : [ "mdm" ],
        "summary" : "Post a command for creation and queuing\n",
        "description" : "Provided an MDM command type and appropriate information, will create and then queue said command.",
        "requestBody" : {
          "description" : "The mdm command object to create and queue",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MdmCommandRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HrefResponse"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Failure, unable to queue command.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "View MDM command information in Jamf Pro API" ],
        "x-action" : true
      }
    },
    "/preview/remote-administration-configurations" : {
      "get" : {
        "tags" : [ "remote-administration" ],
        "summary" : "Get information about all remote administration configurations.",
        "description" : "Remote administration feature creates a secure screen-sharing experience between Jamf Pro administrators and their end-users.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        } ],
        "responses" : {
          "200" : {
            "description" : "Remote administration configurations returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteAdministrationSearchResults"
                }
              }
            }
          },
          "404" : {
            "description" : "Remote Administration feature is not available.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Remote Administration" ]
      }
    },
    "/preview/remote-administration-configurations/team-viewer" : {
      "post" : {
        "tags" : [ "team-viewer-remote-administration" ],
        "summary" : "Create Team Viewer Remote Administration connection configuration",
        "description" : "Creates Team Viewer Remote Administration connection configuration",
        "requestBody" : {
          "description" : "Team Viewer connection configuration create definition",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnectionConfigurationCandidateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Team Viewer connection configuration created successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid field for Team Viewer connection configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403" : {
            "description" : "Insufficient privileges or site not found for Team Viewer connection configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "Site limit exceeded for Team Viewer connection configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Remote Administration" ]
      }
    },
    "/preview/remote-administration-configurations/team-viewer/{configurationId}/sessions" : {
      "get" : {
        "tags" : [ "team-viewer-remote-administration" ],
        "summary" : "Get a paginated list of sessions\n",
        "description" : "Returns a paginated list of sessions for a given configuration ID",
        "parameters" : [ {
          "name" : "configurationId",
          "in" : "path",
          "description" : "ID of the Team Viewer connection configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter sessions collection.\nDefault filter is empty query - returning all results for the requested page.\n\nFields allowed in the query: `deviceId`, `deviceType`, `state`\n\nThis param can be combined with paging.\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          },
          "example" : "deviceId==1 and deviceType==\"COMPUTER\" and state==\"OPEN\""
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionDetailsSearchResults"
                }
              }
            }
          },
          "403" : {
            "description" : "Insufficient privileges",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Remote Administration" ]
      },
      "post" : {
        "tags" : [ "team-viewer-remote-administration" ],
        "summary" : "Create a new session",
        "description" : "Creates a new Team Viewer session to be used to establish a remote connection",
        "parameters" : [ {
          "name" : "configurationId",
          "in" : "path",
          "description" : "ID of the Team Viewer connection configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Team Viewer session attributes",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SessionCandidateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid attributes for Team Viewer session",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403" : {
            "description" : "Insufficient privileges",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "Connection configuration is not active or there is an active session for the device",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Remote Administration" ]
      }
    },
    "/preview/remote-administration-configurations/team-viewer/{configurationId}/sessions/{sessionId}" : {
      "get" : {
        "tags" : [ "team-viewer-remote-administration" ],
        "summary" : "Get a session by its ID\n",
        "description" : "Returns a session details if found.",
        "parameters" : [ {
          "name" : "configurationId",
          "in" : "path",
          "description" : "ID of the Team Viewer connection configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sessionId",
          "in" : "path",
          "description" : "ID of the Team Viewer session",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionDetails"
                }
              }
            }
          },
          "403" : {
            "description" : "Insufficient privileges",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Remote Administration" ]
      }
    },
    "/preview/remote-administration-configurations/team-viewer/{configurationId}/sessions/{sessionId}/close" : {
      "post" : {
        "tags" : [ "team-viewer-remote-administration" ],
        "summary" : "Close a session",
        "description" : "Changes the session state from open to close. Closing a session means it is not possible to establish new remote connection between devices",
        "parameters" : [ {
          "name" : "configurationId",
          "in" : "path",
          "description" : "ID of the Team Viewer connection configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sessionId",
          "in" : "path",
          "description" : "ID of the Team Viewer session",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful response"
          },
          "403" : {
            "description" : "Insufficient privileges",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "Connection configuration is not active",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Remote Administration" ],
        "x-action" : true
      }
    },
    "/preview/remote-administration-configurations/team-viewer/{configurationId}/sessions/{sessionId}/resend-notification" : {
      "post" : {
        "tags" : [ "team-viewer-remote-administration" ],
        "summary" : "Resend nofications for a session",
        "description" : "Resends configured notifications (e.g. Self Service push notifications).",
        "parameters" : [ {
          "name" : "configurationId",
          "in" : "path",
          "description" : "ID of the Team Viewer connection configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sessionId",
          "in" : "path",
          "description" : "ID of the Team Viewer session",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful response"
          },
          "403" : {
            "description" : "Insufficient privileges",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "Connection configuration is not active or session is already closed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Remote Administration" ],
        "x-action" : true
      }
    },
    "/preview/remote-administration-configurations/team-viewer/{configurationId}/sessions/{sessionId}/status" : {
      "get" : {
        "tags" : [ "team-viewer-remote-administration" ],
        "summary" : "Get a session status by its ID\n",
        "description" : "Returns a session status if found.",
        "parameters" : [ {
          "name" : "configurationId",
          "in" : "path",
          "description" : "ID of the Team Viewer connection configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sessionId",
          "in" : "path",
          "description" : "ID of the Team Viewer session",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Insufficient privileges",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Team Viewer session status not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Remote Administration" ]
      }
    },
    "/preview/remote-administration-configurations/team-viewer/{id}" : {
      "get" : {
        "tags" : [ "team-viewer-remote-administration" ],
        "summary" : "Get Team Viewer Remote Administration connection configuration",
        "description" : "Returns Team Viewer Remote Administration connection configuration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Team Viewer connection configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns Team Viewer connection configuration response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionConfigurationResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Team Viewer connection configuration does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Remote Administration" ]
      },
      "delete" : {
        "tags" : [ "team-viewer-remote-administration" ],
        "summary" : "Delete Team Viewer Remote Administration connection configuration",
        "description" : "Deletes Team Viewer Remote Administration connection configuration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Team Viewer connection configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Team Viewer connection configuration deleted successfully"
          }
        },
        "x-required-privileges" : [ "Delete Remote Administration" ]
      },
      "patch" : {
        "tags" : [ "team-viewer-remote-administration" ],
        "summary" : "Update Team Viewer Remote Administration connection configuration",
        "description" : "Updates Team Viewer Remote Administration connection configuration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Team Viewer connection configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Team Viewer connection configuration update request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnectionConfigurationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Team Viewer connection configuration updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionConfigurationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid field for Team Viewer connection configuration update request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Team Viewer connection configuration does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Remote Administration" ]
      }
    },
    "/preview/remote-administration-configurations/team-viewer/{id}/status" : {
      "get" : {
        "tags" : [ "team-viewer-remote-administration" ],
        "summary" : "Get Team Viewer Remote Administration connection status",
        "description" : "Returns Team Viewer Remote Administration connection status",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Team Viewer connection configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns Team Viewer connection status response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectionConfigurationStatusResponse"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Remote Administration" ]
      }
    },
    "/self-service/branding/images" : {
      "post" : {
        "tags" : [ "self-service-branding-preview" ],
        "summary" : "Upload an image\n",
        "description" : "Uploads an image",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The file to upload",
                    "format" : "binary"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Image successfully uploaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BrandingImageUrl"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Self Service Branding Configuration" ]
      }
    },
    "/settings/issueTomcatSslCertificate" : {
      "post" : {
        "tags" : [ "tomcat-settings-preview" ],
        "summary" : "Generate a SSL Certificate using Jamf Certificate Authority\n",
        "description" : "generate a SSL Certificate using Jamf Certificate Authority",
        "responses" : {
          "204" : {
            "description" : "SSL certificate created successfully"
          }
        },
        "x-required-privileges" : [ "Update Apache Tomcat Settings" ],
        "x-action" : true
      }
    },
    "/settings/obj/policyProperties" : {
      "get" : {
        "tags" : [ "policies-preview" ],
        "summary" : "Get Policy Properties object\n",
        "description" : "Gets `Policy Properties` object.\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyProperties"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-required-privileges" : [ "Read Policies" ],
        "x-deprecation-date" : "2021-11-07"
      },
      "put" : {
        "tags" : [ "policies-preview" ],
        "summary" : "Update Policy Properties object\n",
        "description" : "Update Policy Properties object\n",
        "requestBody" : {
          "description" : "Policy Properties object to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyProperties"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Policy Properties was updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyProperties"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-required-privileges" : [ "Update Policies" ],
        "x-deprecation-date" : "2021-11-07"
      }
    },
    "/settings/sites" : {
      "get" : {
        "tags" : [ "sites-preview" ],
        "summary" : "Find all sites\n",
        "description" : "Found all sites.\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Site"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "x-required-privileges" : [ "Read Sites" ]
      }
    },
    "/startup-status" : {
      "get" : {
        "tags" : [ "startup-status" ],
        "summary" : "Retrieve information about application startup\n",
        "description" : "Retrieves information about application startup. Current startup operation taking place (if any) and overall startup completion percentage.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StartupStatus"
                }
              }
            }
          }
        },
        "x-authentication-required" : false
      }
    },
    "/system/initialize" : {
      "post" : {
        "tags" : [ "jamf-pro-initialization-preview" ],
        "summary" : "Set up fresh installed Jamf Pro Server\n",
        "description" : "Set up fresh installed Jamf Pro Server\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Initialize"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "The following are codes returned by this call:\nINVALID_ACTIVATION_CODE - activation code provided is not valid or is expired\nINVALID_STATE - The system is in an invalid state to be initialized.\nFIELD_REQUIRED - A required field was not provided.  The field name will be provided on the response.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-authentication-required" : false,
        "x-action" : true,
        "x-deprecation-date" : "2020-12-10"
      }
    },
    "/system/initialize-database-connection" : {
      "post" : {
        "tags" : [ "jamf-pro-initialization-preview" ],
        "summary" : "Provide Database Password during startup\n",
        "description" : "Provide database password during startup. Endpoint is accessible when database password was not configured and Jamf Pro server has not been initialized yet.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DatabasePassword"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Incorrect database password.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429" : {
            "description" : "Limit of requests per second was exceeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-authentication-required" : false,
        "x-action" : true,
        "x-deprecation-date" : "2020-12-10"
      }
    },
    "/user" : {
      "get" : {
        "tags" : [ "user-session-preview" ],
        "summary" : "Return all Jamf Pro user acounts\n",
        "description" : "Return all Jamf Pro user acounts.\n",
        "responses" : {
          "200" : {
            "description" : "List of all Jamf Pro user acounts.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Account"
                  }
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Accounts" ]
      }
    },
    "/user/obj/preference/{key}" : {
      "get" : {
        "tags" : [ "jamf-pro-user-account-settings-preview" ],
        "summary" : "Get the user setting for the authenticated user and key\n",
        "description" : "Gets the user setting for the authenticated user and key.\n",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "user setting to be retrieved",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPreferencesJson"
                }
              }
            }
          },
          "404" : {
            "description" : "setting not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-authentication-required" : true,
        "x-deprecation-date" : "2020-12-14"
      },
      "put" : {
        "tags" : [ "jamf-pro-user-account-settings-preview" ],
        "summary" : "Persist the user setting\n",
        "description" : "Persists the user setting\n",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "key of user setting to be persisted",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "user setting value to be persisted",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "setting sucessfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPreferencesJson"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-authentication-required" : true,
        "x-deprecation-date" : "2020-12-14"
      },
      "delete" : {
        "tags" : [ "jamf-pro-user-account-settings-preview" ],
        "summary" : "Remove specified setting for authenticated user\n",
        "description" : "Remove specified setting for authenticated user\n",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "key of user setting to be persisted",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "setting was deleted"
          },
          "404" : {
            "description" : "setting not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-authentication-required" : true,
        "x-deprecation-date" : "2020-12-14"
      }
    },
    "/user/updateSession" : {
      "post" : {
        "tags" : [ "user-session-preview" ],
        "summary" : "Update values in the User's current session\n",
        "description" : "Updates values in the user's current session.\n",
        "requestBody" : {
          "description" : "Values to update in user's current session.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Session"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "The user's current session has been sucessfully updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Session"
                }
              }
            }
          }
        },
        "x-authentication-required" : true
      }
    },
    "/v1/advanced-mobile-device-searches" : {
      "get" : {
        "tags" : [ "advanced-mobile-device-searches" ],
        "summary" : "Get Advanced Search objects\n",
        "description" : "Gets Advanced Search Objects\n",
        "responses" : {
          "200" : {
            "description" : "Successful response - Advanced searches retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvancedSearchSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Advanced Mobile Device Searches" ]
      },
      "post" : {
        "tags" : [ "advanced-mobile-device-searches" ],
        "summary" : "Create Advanced Search object\n",
        "description" : "Creates Advanced Search Object\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdvancedSearch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Successful response - Advanced search created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Advanced Mobile Device Searches" ]
      }
    },
    "/v1/advanced-mobile-device-searches/choices" : {
      "get" : {
        "tags" : [ "advanced-mobile-device-searches" ],
        "summary" : "Get Mobile Device Advanced Search criteria choices\n",
        "description" : "Gets Mobile Device Advanced Search criteria choices. A list of potentially valid choices can be found by navigating to the Criteria page of the Advanced Mobile Device Search creation process. A few are \"App Name\", \"Building\", and \"Display Name\".\n",
        "parameters" : [ {
          "name" : "criteria",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "site",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "-1"
          }
        }, {
          "name" : "contains",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "null"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response - Criteria choices retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvancedSearchCriteriaChoices"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Advanced Mobile Device Searches" ]
      }
    },
    "/v1/advanced-mobile-device-searches/delete-multiple" : {
      "post" : {
        "tags" : [ "advanced-mobile-device-searches" ],
        "summary" : "Remove specified Advanced Search objects\n",
        "description" : "Removes specified Advanced Search Objects\n",
        "requestBody" : {
          "description" : "ids of the building to be deleted",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Successful response - Advanced searches deleted"
          },
          "400" : {
            "description" : "At least one target Advanced Search does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Delete Advanced Mobile Device Searches" ],
        "x-action" : true
      }
    },
    "/v1/advanced-mobile-device-searches/{id}" : {
      "get" : {
        "tags" : [ "advanced-mobile-device-searches" ],
        "summary" : "Get specified Advanced Search object\n",
        "description" : "Gets Specified Advanced Search Object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of target Advanced Search",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response - Advanced Search retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvancedSearch"
                }
              }
            }
          },
          "404" : {
            "description" : "Target Advanced Search does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Advanced Mobile Device Searches" ]
      },
      "put" : {
        "tags" : [ "advanced-mobile-device-searches" ],
        "summary" : "Get specified Advanced Search object\n",
        "description" : "Gets Specified Advanced Search Object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of target Advanced Search",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdvancedSearch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response - Advanced Search updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvancedSearch"
                }
              }
            }
          },
          "404" : {
            "description" : "Target Advanced Search does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Advanced Mobile Device Searches" ]
      },
      "delete" : {
        "tags" : [ "advanced-mobile-device-searches" ],
        "summary" : "Remove specified Advanced Search object\n",
        "description" : "Removes specified Advanced Search Object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of advanced search record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful response - Advanced search deleted"
          },
          "404" : {
            "description" : "Target Advanced Search does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Delete Advanced Mobile Device Searches" ]
      }
    },
    "/v1/advanced-user-content-searches" : {
      "get" : {
        "tags" : [ "advanced-user-content-searches" ],
        "summary" : "Get All Advanced User Content Search objects\n",
        "description" : "Get All Advanced User Content Search Objects\n",
        "responses" : {
          "200" : {
            "description" : "Successful response - Advanced User Content Searches retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvancedUserContentSearchSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Advanced User Content Searches" ]
      },
      "post" : {
        "tags" : [ "advanced-user-content-searches" ],
        "summary" : "Create Advanced User Content Search object\n",
        "description" : "Creates Advanced User Content Search Object\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdvancedUserContentSearch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Successful response - Advanced User Content Search created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Advanced User Content Searches" ]
      }
    },
    "/v1/advanced-user-content-searches/{id}" : {
      "get" : {
        "tags" : [ "advanced-user-content-searches" ],
        "summary" : "Get Specified Advanced User Content Search object\n",
        "description" : "Gets Specified Advanced User Content Search Object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of target Advanced User Content Search",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response - Advanced User Content Search retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvancedUserContentSearch"
                }
              }
            }
          },
          "404" : {
            "description" : "Target Advanced User Content Search does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Advanced User Content Searches" ]
      },
      "put" : {
        "tags" : [ "advanced-user-content-searches" ],
        "summary" : "Get Specified Advanced User Content Search object\n",
        "description" : "Gets Specified Advanced User Content Search Object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of target Advanced User Content Search",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdvancedUserContentSearch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response - Advanced User Content Search updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvancedUserContentSearch"
                }
              }
            }
          },
          "404" : {
            "description" : "Target Advanced User Content Search does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Advanced User Content Searches" ]
      },
      "delete" : {
        "tags" : [ "advanced-user-content-searches" ],
        "summary" : "Remove specified Advanced User Content Search object\n",
        "description" : "Removes specified Advanced User Content Search Object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of Advanced User Content Search record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful response - Advanced User Content Search deleted"
          },
          "404" : {
            "description" : "Target Advanced User Content Search does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Delete Advanced User Content Searches" ]
      }
    },
    "/v1/app-dynamics/script-configuration" : {
      "get" : {
        "tags" : [ "app-dynamics-configuration-preview" ],
        "summary" : "Get Application Dynamics Config object\n",
        "description" : "Gets `AppDynamicsConfig` object.\nDetails for using the response as script configuration are available in the official documentation - https://docs.appdynamics.com/display/PRO45/Configure+the+JavaScript+Agent\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppDynamicsConfig"
                }
              }
            }
          },
          "400" : {
            "description" : "AppDynamics script configuration may be obtained only when AppDynamics monitoring tool is enabled.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-authentication-required" : true
      }
    },
    "/v1/app-request/form-input-fields" : {
      "get" : {
        "tags" : [ "app-request-preview" ],
        "summary" : "Search for Form Input Fields\n",
        "description" : "Search for form input fields",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppRequestFormInputFieldSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read App Request Settings" ]
      },
      "put" : {
        "tags" : [ "app-request-preview" ],
        "summary" : "Replace all Form Input Fields\n",
        "description" : "Replace all form input fields. Will delete, update, and create all input fields accordingly.\n",
        "requestBody" : {
          "description" : "list of form input fields to replace all existing fields. Will delete, update, and create all input fields accordingly.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/AppRequestFormInputField"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "form input fields were replaced",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppRequestFormInputField"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid data response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified form input field object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update App Request Settings" ]
      },
      "post" : {
        "tags" : [ "app-request-preview" ],
        "summary" : "Create Form Input Field record\n",
        "description" : "Create form input field record\n",
        "requestBody" : {
          "description" : "form input field object to create. ids defined in this body will be ignored",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppRequestFormInputField"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "form input field record was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppRequestFormInputField"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid data response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update App Request Settings" ]
      }
    },
    "/v1/app-request/form-input-fields/{id}" : {
      "get" : {
        "tags" : [ "app-request-preview" ],
        "summary" : "Get specified Form Input Field object\n",
        "description" : "Gets specified form input field object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Instance id of form input field record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of form input field were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppRequestFormInputField"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified form input field object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read App Request Settings" ]
      },
      "put" : {
        "tags" : [ "app-request-preview" ],
        "summary" : "Update specified Form Input Field object\n",
        "description" : "Update specified form input field object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Instance id of form input field record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "form input field object to create. ids defined in this body will be ignored",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppRequestFormInputField"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "form input field update",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppRequestFormInputField"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid data response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified form input field object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update App Request Settings" ]
      },
      "delete" : {
        "tags" : [ "app-request-preview" ],
        "summary" : "Remove specified Form Input Field record\n",
        "description" : "Removes specified form input field record\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Instance id of form input field record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "form input field record was deleted"
          },
          "404" : {
            "description" : "Specified form input field object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update App Request Settings" ]
      }
    },
    "/v1/app-request/settings" : {
      "get" : {
        "tags" : [ "app-request-preview" ],
        "summary" : "Get Applicastion Request Settings\n",
        "description" : "Get app request settings\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppRequestSettings"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read App Request Settings" ]
      },
      "put" : {
        "tags" : [ "app-request-preview" ],
        "summary" : "Update Application Request Settings\n",
        "description" : "Update app request settings\n",
        "requestBody" : {
          "description" : "App request settings object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppRequestSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "App request settings updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppRequestSettings"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid data response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update App Request Settings" ]
      }
    },
    "/v1/app-store-country-codes" : {
      "get" : {
        "tags" : [ "app-store-country-codes-preview" ],
        "summary" : "Return a list of Countries and the associated Codes\n",
        "description" : "Returns a list of countries and the associated codes that can be use for the App Store locale\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryCodes"
                }
              }
            }
          }
        },
        "x-authentication-required" : false
      }
    },
    "/v1/auth" : {
      "get" : {
        "tags" : [ "api-authentication" ],
        "summary" : "Get all the Authorization details associated with the current api\n",
        "description" : "Get all the authorization details associated with the current api token",
        "responses" : {
          "200" : {
            "description" : "Current authorization details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationV1"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "x-authentication-required" : true
      }
    },
    "/v1/auth/invalidate-token" : {
      "post" : {
        "tags" : [ "api-authentication" ],
        "summary" : "Invalidate current token\n",
        "description" : "Invalidates current token",
        "responses" : {
          "204" : {
            "description" : "token invalidated"
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "x-authentication-required" : true,
        "x-action" : true
      }
    },
    "/v1/auth/keep-alive" : {
      "post" : {
        "tags" : [ "api-authentication" ],
        "summary" : "Invalidate existing token and generates new token\n",
        "description" : "Invalidates existing token and generates new token with extended expiration based on existing token credentials.",
        "responses" : {
          "200" : {
            "description" : "Updated token.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthTokenV1"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "x-authentication-required" : true,
        "x-action" : true
      }
    },
    "/v1/auth/token" : {
      "post" : {
        "tags" : [ "api-authentication" ],
        "summary" : "Create a token based on other authentication details (basic, etc.)\n",
        "description" : "Create a token based on other authentication details (basic, etc.)\n",
        "responses" : {
          "200" : {
            "description" : "New auth token generated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthTokenV1"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuth" : [ ]
        } ],
        "x-authentication-required" : false,
        "x-action" : true
      }
    },
    "/v1/azure-ad-migration/reports" : {
      "post" : {
        "tags" : [ "cloud-azure" ],
        "summary" : "Start Azure Ad Migration report generation",
        "description" : "Starts a new process in background that will generate Excel report",
        "requestBody" : {
          "description" : "Necessary input to create a new migration report",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AzureAdMigrationReportRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Azure report generation started.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Azure report generation cannot be started.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create LDAP Servers" ]
      }
    },
    "/v1/azure-ad-migration/reports/pending" : {
      "get" : {
        "tags" : [ "cloud-azure" ],
        "summary" : "Get pending azure migration report",
        "description" : "Returs dto with info about pending report",
        "responses" : {
          "200" : {
            "description" : "Azure report dto returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AzureAdMigrationReportProcessStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Pending report does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/azure-ad-migration/reports/{id}" : {
      "get" : {
        "tags" : [ "cloud-azure" ],
        "summary" : "Check status of azure ad migration report",
        "description" : "Returns dto with minimal info about running process",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Existing report ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Azure report status returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AzureAdMigrationReportProcessStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Report with provided ID does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/azure-ad-migration/reports/{id}/download" : {
      "get" : {
        "tags" : [ "cloud-azure" ],
        "summary" : "Download report of provided report ID",
        "description" : "Returns excel file of generated report",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Existing report ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Azure report excel file returned.",
            "content" : {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" : {
                "schema" : {
                  "format" : "binary"
                }
              }
            }
          },
          "404" : {
            "description" : "Report with provided ID hasn't been generated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/buildings" : {
      "get" : {
        "tags" : [ "buildings" ],
        "summary" : "Search for sorted and paged Buildings\n",
        "description" : "Search for sorted and paged buildings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:asc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter buildings collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: name, streetAddress1, streetAddress2, city, stateProvince, zipPostalCode, country. This param can be combined with paging and sorting. Example: filter=city==\"Chicago\" and name==\"*build*\"",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildingSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Buildings" ]
      },
      "post" : {
        "tags" : [ "buildings" ],
        "summary" : "Create Building record\n",
        "description" : "Create building record\n",
        "requestBody" : {
          "description" : "building object to create. ids defined in this body will be ignored",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Building"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Building record was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Buildings" ]
      }
    },
    "/v1/buildings/delete-multiple" : {
      "post" : {
        "tags" : [ "buildings" ],
        "summary" : "Delete multiple Buildings by their ids\n",
        "description" : "multiple many Buildings by their ids",
        "requestBody" : {
          "description" : "ids of the building to be deleted",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "All building ids passed in request sucessfully deleted."
          },
          "400" : {
            "description" : "Request processed.  Returns ids and error codes of any buildings unable to be deleted.  Expected error codes: INVALID_ID - id does not exist SYSTEM_EXCEPTION - a system exception occurred trying to delete the building.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Delete Buildings" ],
        "x-action" : true
      }
    },
    "/v1/buildings/{id}" : {
      "get" : {
        "tags" : [ "buildings" ],
        "summary" : "Get specified Building object\n",
        "description" : "Gets specified Building object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of building record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of building were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Building"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified building object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Buildings" ]
      },
      "put" : {
        "tags" : [ "buildings" ],
        "summary" : "Update specified Building object\n",
        "description" : "Update specified building object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of building record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "building object to update. ids defined in this body will be ignored",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Building"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Building update",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Building"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Buildings" ]
      },
      "delete" : {
        "tags" : [ "buildings" ],
        "summary" : "Remove specified Building record\n",
        "description" : "Removes specified building record\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of building record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Building record was deleted"
          }
        },
        "x-required-privileges" : [ "Delete Buildings" ]
      }
    },
    "/v1/buildings/{id}/history" : {
      "get" : {
        "tags" : [ "buildings" ],
        "summary" : "Get specified Building History object\n",
        "description" : "Gets specified Building history object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of building history record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "date:desc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of building history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified building object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Buildings" ]
      },
      "post" : {
        "tags" : [ "buildings" ],
        "summary" : "Add specified Building history object notes\n",
        "description" : "Adds specified Building history object notes\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of building history record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "history notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of building history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectHistory"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified building object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "503" : {
            "description" : "Building history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Buildings" ]
      }
    },
    "/v1/cache-settings" : {
      "get" : {
        "tags" : [ "cache-settings" ],
        "summary" : "Get Cache Settings\n",
        "description" : "gets cache settings",
        "responses" : {
          "200" : {
            "description" : "cache settings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CacheSettings"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Cache" ]
      },
      "put" : {
        "tags" : [ "cache-settings" ],
        "summary" : "Update Cache Settings\n",
        "description" : "updates cache settings\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CacheSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "cache has been updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CacheSettings"
                }
              }
            }
          },
          "403" : {
            "description" : "The following code is returned by this call:\nHOSTED_ENVIRONMENT - PUT command is not available in hosted environments.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Cache" ]
      }
    },
    "/v1/categories" : {
      "get" : {
        "tags" : [ "categories" ],
        "summary" : "Get Category objects\n",
        "description" : "Gets `Category` objects.\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:asc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter categories collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: name, priority. This param can be combined with paging and sorting. Example: filter=name==\"Apps*\" and priority>=5",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoriesSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Categories" ]
      },
      "post" : {
        "tags" : [ "categories" ],
        "summary" : "Create Category record\n",
        "description" : "Create category record\n",
        "requestBody" : {
          "description" : "category object to create. IDs defined in this body will be ignored",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Category"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Category record was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Categories" ]
      }
    },
    "/v1/categories/delete-multiple" : {
      "post" : {
        "tags" : [ "categories" ],
        "summary" : "Delete multiple Categories by their IDs\n",
        "description" : "Delete multiple Categories by their IDs",
        "requestBody" : {
          "description" : "IDs of the categories to be deleted",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "All Category IDs passed in request sucessfully deleted."
          },
          "400" : {
            "description" : "Request processed.  Returns IDs and error codes of any categories unable to be deleted.  Expected error codes: INVALID_ID - id does not exist SYSTEM_EXCEPTION - a system exception occurred trying to delete the category.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Delete Categories" ],
        "x-action" : true
      }
    },
    "/v1/categories/{id}" : {
      "get" : {
        "tags" : [ "categories" ],
        "summary" : "Get specified Category object\n",
        "description" : "Gets specified Category object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of category record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of category were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Category"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified category object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Categories" ]
      },
      "put" : {
        "tags" : [ "categories" ],
        "summary" : "Update specified Category object\n",
        "description" : "Update specified category object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of category record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "category object to create. id defined in this body will be ignored",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Category"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Category record was updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Category"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Categories" ]
      },
      "delete" : {
        "tags" : [ "categories" ],
        "summary" : "Remove specified Category record\n",
        "description" : "Removes specified category record\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of category record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Category record was deleted"
          }
        },
        "x-required-privileges" : [ "Delete Categories" ]
      }
    },
    "/v1/categories/{id}/history" : {
      "get" : {
        "tags" : [ "categories" ],
        "summary" : "Get specified Category history object\n",
        "description" : "Gets specified Category history object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of category history record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "date:desc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of category history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified category object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Categories" ]
      },
      "post" : {
        "tags" : [ "categories" ],
        "summary" : "Add specified Category history object notes\n",
        "description" : "Adds specified Category history object notes\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of category history record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "history notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of category history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectHistory"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified category object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "503" : {
            "description" : "Category history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Categories" ]
      }
    },
    "/v1/classic-ldap/{id}" : {
      "get" : {
        "tags" : [ "classic-ldap" ],
        "summary" : "Get mappings for OnPrem Ldap configuration with given id.",
        "description" : "Get mappings for OnPrem Ldap configuration with given id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "OnPrem Ldap identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OnPrem Ldap mappings returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClassicLdapMappings"
                }
              }
            }
          },
          "400" : {
            "description" : "Id can only be a number.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified OnPrem Ldap configuration does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/cloud-azure" : {
      "post" : {
        "tags" : [ "cloud-azure" ],
        "summary" : "Create Azure Cloud Identity Provider configuration",
        "description" : "Create new Azure Cloud Identity Provider configuration with unique display name.",
        "requestBody" : {
          "description" : "Azure Cloud Identity Provider configuration to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AzureConfigurationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Azure Cloud Identity Provider configuration created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Azure Cloud Identity Provider configuration cannot be saved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "This endpoint is not available for your environment.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create LDAP Servers" ]
      }
    },
    "/v1/cloud-azure/defaults/mappings" : {
      "get" : {
        "tags" : [ "cloud-azure" ],
        "summary" : "Get default mappings",
        "description" : "This is the default set of attributes that allows you to return the data you need from Azure AD. Some fields may be empty and may be edited when creating a new configuration.",
        "responses" : {
          "200" : {
            "description" : "Default mappings returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AzureMappings"
                }
              }
            }
          },
          "400" : {
            "description" : "Files cannot be loaded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "This endpoint is not available for your environment.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/cloud-azure/defaults/server-configuration" : {
      "get" : {
        "tags" : [ "cloud-azure" ],
        "summary" : "Get default server configuration",
        "description" : "This is the default set of attributes that allows you to return the data you need from Azure AD. Some fields may be empty and may be edited when creating a new configuration.",
        "responses" : {
          "200" : {
            "description" : "Default server configuration returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AzureServerConfiguration"
                }
              }
            }
          },
          "400" : {
            "description" : "Default server configuration cannot be loaded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "This endpoint is not available for your environment.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/cloud-azure/{id}" : {
      "get" : {
        "tags" : [ "cloud-azure" ],
        "summary" : "Get Azure Cloud Identity Provider configuration with given ID.",
        "description" : "Get Azure Cloud Identity Provider configuration with given ID.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider configuration returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AzureConfiguration"
                }
              }
            }
          },
          "400" : {
            "description" : "ID can only be a number.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "This endpoint is not available for your environment if CLOUD_ONLY reason code or specified Azure Cloud Identity Provider configuration does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      },
      "put" : {
        "tags" : [ "cloud-azure" ],
        "summary" : "Update Azure Cloud Identity Provider configuration",
        "description" : "Update Azure Cloud Identity Provider configuration. Cannot be used for partial updates, all content body must be sent.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Azure Cloud Identity Provider configuration to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AzureConfigurationUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider configuration updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AzureConfiguration"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more parameters were invalid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "This endpoint is not available for your environment if CLOUD_ONLY reason code or Cloud Identity Provider configuration does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "The request URL configuration id value does not match the id value in the request body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update LDAP Servers" ]
      },
      "delete" : {
        "tags" : [ "cloud-azure" ],
        "summary" : "Delete Cloud Identity Provider configuration.",
        "description" : "Delete Cloud Identity Provider configuration.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Cloud Identity Provider configuration deleted."
          },
          "400" : {
            "description" : "ID can only be a number.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "This endpoint is not available for your environment if CLOUD_ONLY reason code or Cloud Identity Provider configuration does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Delete LDAP Servers" ]
      }
    },
    "/v1/cloud-idp" : {
      "get" : {
        "tags" : [ "cloud-idp" ],
        "summary" : "Get information about all Cloud Identity Providers configurations.",
        "description" : "Returns basic informations about all configured Cloud Identity Provider.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:desc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider configurations informations returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/cloud-idp/export" : {
      "post" : {
        "tags" : [ "cloud-idp" ],
        "summary" : "Export Cloud Identity Providers collection\n",
        "description" : "Export Cloud Identity Providers collection\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/export-fields"
        }, {
          "$ref" : "#/components/parameters/export-labels"
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is id:desc. Multiple sort criteria are supported and must be seperated with a comma. Example: sort=id:desc,name:asc",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:asc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. This param can be combined with paging and sorting. Example: name==\"*department*\"",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "requestBody" : {
          "description" : "Optional. Override query parameters since they can make URI exceed 2,000 character limit.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportParameters"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Export successful",
            "content" : {
              "text/csv" : {
                "schema" : {
                  "format" : "binary",
                  "example" : "Name,\"Provider Name\",Status\n\"Google LDAP\",GOOGLE,true\n\"Azure LDAP\",AZURE,true\n"
                }
              }
            }
          },
          "400" : {
            "description" : "Export fields specified incorrectly - non-existing column or duplicate on the list.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "503" : {
            "description" : "Export currently unavailable, all export-related resources are in use. Try again later.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ],
        "x-action" : true
      }
    },
    "/v1/cloud-idp/{id}" : {
      "get" : {
        "tags" : [ "cloud-idp" ],
        "summary" : "Get Cloud Identity Provider configuration with given ID.",
        "description" : "Get Cloud Identity Provider configuration with given ID.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider configuration returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudIdPCommon"
                }
              }
            }
          },
          "400" : {
            "description" : "ID can only be a number.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified Cloud Identity Provider configuration does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/cloud-idp/{id}/history" : {
      "get" : {
        "tags" : [ "cloud-idp" ],
        "summary" : "Get Cloud Identity Provider history",
        "description" : "Gets specified Cloud Identity Provider object history",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "date:desc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of Cloud Identity Provider history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          },
          "400" : {
            "description" : "Id can only be a number.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified Cloud Identity Provider object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      },
      "post" : {
        "tags" : [ "cloud-idp" ],
        "summary" : "Add Cloud Identity Provider history note",
        "description" : "Adds specified Cloud Identity Provider object history notes\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "history notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of Cloud Identity Provider history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectHistory"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified Cloud Identity Provider object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "503" : {
            "description" : "Notes of Cloud Identity Provider can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update LDAP Servers" ]
      }
    },
    "/v1/cloud-idp/{id}/test-group" : {
      "post" : {
        "tags" : [ "cloud-idp" ],
        "summary" : "Get group test search",
        "description" : "Do test search to ensure about configuration and mappings",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Search request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupTestSearchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider test search result returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupTestSearchResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Cloud Identity Provider does not exist or is not active.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-action" : true,
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/cloud-idp/{id}/test-user" : {
      "post" : {
        "tags" : [ "cloud-idp" ],
        "summary" : "Get user test search",
        "description" : "Do test search to ensure about configuration and mappings",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Search request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserTestSearchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider test search result returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserTestSearchResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Cloud Identity Provider does not exist or is not active.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-action" : true,
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/cloud-idp/{id}/test-user-membership" : {
      "post" : {
        "tags" : [ "cloud-idp" ],
        "summary" : "Get membership test search",
        "description" : "Do test search to ensure about configuration and mappings",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Search request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MembershipTestSearchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider test search result returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MembershipTestSearchResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Cloud Identity Provider does not exist or is not active.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-action" : true,
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/cloud-ldaps" : {
      "get" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Get all Cloud Identity Providers configurations.",
        "description" : "Returns all configured Cloud Identity Provider instances without keystore data.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/size"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:desc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider configurations returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeprecatedConfigurationSearchResults"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-25",
        "x-required-privileges" : [ "Read LDAP Servers" ]
      },
      "post" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Create Cloud Identity Provider configuration",
        "description" : "Create new Cloud Identity Provider configuration with unique display name. If mappings not provided, then defaults will be generated instead.",
        "requestBody" : {
          "description" : "Cloud Identity Provider configuration to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeprecatedConfigurationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Cloud Identity Provider configuration created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeprecatedConfigurationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Cloud Identity Provider configuration cannot be saved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-25",
        "x-required-privileges" : [ "Create LDAP Servers" ]
      }
    },
    "/v1/cloud-ldaps/defaults/mappings" : {
      "get" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Get default mappings",
        "description" : "Get default mappings which will work with Google Cloud Identity Provider.",
        "responses" : {
          "200" : {
            "description" : "Default mappings returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudLdapMappingsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Files cannot be loaded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-25",
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/cloud-ldaps/defaults/server-configuration" : {
      "get" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Get default server configuration",
        "description" : "Get default server configuration which will work with Google Cloud Identity Provider.",
        "responses" : {
          "200" : {
            "description" : "Default server configuration returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeprecatedServerResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Default server configuration cannot be loaded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-25",
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/cloud-ldaps/{id}" : {
      "get" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Get Cloud Identity Provider configuration with given id.",
        "description" : "Get Cloud Identity Provider configuration with given id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider configuration returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeprecatedConfigurationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Id can only be a number.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified Cloud Identity Provider configuration does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-25",
        "x-required-privileges" : [ "Read LDAP Servers" ]
      },
      "put" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Old update Cloud Identity Provider configuration",
        "description" : "Update Cloud Identity Provider configuration. Cannot be used for partial updates, all content body must be sent.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Cloud Identity Provider configuration to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeprecatedConfigurationUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider configuration updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeprecatedConfigurationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more parameters were invalid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Cloud Identity Provider configuration does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-25",
        "x-required-privileges" : [ "Update LDAP Servers" ]
      },
      "delete" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Delete Cloud Identity Provider configuration.",
        "description" : "Delete Cloud Identity Provider configuration.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Cloud Identity Provider configuration deleted."
          },
          "400" : {
            "description" : "Id can only be a number.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Cloud Identity Provider configuration does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-25",
        "x-required-privileges" : [ "Delete LDAP Servers" ]
      }
    },
    "/v1/cloud-ldaps/{id}/connection/bind" : {
      "get" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Get bind connection pool statistics",
        "description" : "Get all search connection pool for chosen Cloud Identity Provider.\nnumConnectionsClosedDefunct - The number of connections that have been closed as defunct.\nnumConnectionsClosedExpired - The number of connections that have been closed because they were expired.\nnumConnectionsClosedUnneeded - The number of connections that have been closed because they were no longer needed.\nnumFailedCheckouts - The number of failed attempts to check out a connection from the pool.\nnumFailedConnectionAttempts - The number of failed attempts to create a connection for use in the pool.\nnumReleasedValid - The number of valid connections released back to the pool.\nnumSuccessfulCheckouts - The number of successful attempts to check out a connection from the pool.\nnumSuccessfulCheckoutsNewConnection - The number of successful checkout attempts that had to create a new connection because none were available.\nnumSuccessfulConnectionAttempts - The number successful attempts to create a connection for use in the pool.\nmaximumAvailableConnections - The maximum number of connections that may be available in the pool at any time.\nnumSuccessfulCheckoutsWithoutWait - The number of successful checkout attempts that were able to take an existing connection without waiting.\nnumSuccessfulCheckoutsAfterWait - The number of successful checkout attempts that retrieved a connection from the pool after waiting for it to become available.\nnumAvailableConnections - The number of connections currently available for use in the pool.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider bind connection pool statistics returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudLdapConnectionPoolStatistics"
                }
              }
            }
          },
          "400" : {
            "description" : "Bind connection pool statistics data is not available.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Cloud Identity Provider bind connection pool statistics does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-25",
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/cloud-ldaps/{id}/connection/search" : {
      "get" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Get search connection pool statistics",
        "description" : "Get all search connection pool for chosen Cloud Identity Provider.\nnumConnectionsClosedDefunct - The number of connections that have been closed as defunct.\nnumConnectionsClosedExpired - The number of connections that have been closed because they were expired.\nnumConnectionsClosedUnneeded - The number of connections that have been closed because they were no longer needed.\nnumFailedCheckouts - The number of failed attempts to check out a connection from the pool.\nnumFailedConnectionAttempts - The number of failed attempts to create a connection for use in the pool.\nnumReleasedValid - The number of valid connections released back to the pool.\nnumSuccessfulCheckouts - The number of successful attempts to check out a connection from the pool.\nnumSuccessfulCheckoutsNewConnection - The number of successful checkout attempts that had to create a new connection because none were available.\nnumSuccessfulConnectionAttempts - The number successful attempts to create a connection for use in the pool.\nmaximumAvailableConnections - The maximum number of connections that may be available in the pool at any time.\nnumSuccessfulCheckoutsWithoutWait - The number of successful checkout attempts that were able to take an existing connection without waiting.\nnumSuccessfulCheckoutsAfterWait - The number of successful checkout attempts that retrieved a connection from the pool after waiting for it to become available.\nnumAvailableConnections - The number of connections currently available for use in the pool.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider search connection pool statistics returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudLdapConnectionPoolStatistics"
                }
              }
            }
          },
          "400" : {
            "description" : "Search connection pool statistics data is not available.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Cloud Identity Provider search connection pool statistics does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-25",
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/cloud-ldaps/{id}/history" : {
      "get" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Get Cloud Identity Provider history",
        "description" : "Gets specified Cloud Identity Provider object history",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/size"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "date:desc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of Cloud Identity Provider history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          },
          "400" : {
            "description" : "Id can only be a number.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified Cloud Identity Provider object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-25",
        "x-required-privileges" : [ "Read LDAP Servers" ]
      },
      "post" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Add Cloud Identity Provider history note",
        "description" : "Adds specified Cloud Identity Provider object history notes\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "history notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of Cloud Identity Provider history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectHistory"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified Cloud Identity Provider object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "503" : {
            "description" : "Notes of Cloud Identity Provider can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-25",
        "x-required-privileges" : [ "Update LDAP Servers" ]
      }
    },
    "/v1/cloud-ldaps/{id}/mappings" : {
      "get" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Get mappings configurations for Cloud Identity Providers server configuration.",
        "description" : "Get all mappings configurations for Cloud Identity Providers server configuration.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider mappings configuration returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudLdapMappingsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Id can only be a number.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified mappings settings for Cloud Identity Provider configuration do not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-25",
        "x-required-privileges" : [ "Read LDAP Servers" ]
      },
      "put" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Update Cloud Identity Provider mappings configuration.",
        "description" : "Update Cloud Identity Provider mappings configuration. Cannot be used for partial updates, all content body must be sent.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Cloud Identity Provider mappings to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloudLdapMappingsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider mappings configuration updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudLdapMappingsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more parameters were invalid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified Cloud Identity Provider configuration does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "Cloud Identity Provider id from request path do not match id in request body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-25",
        "x-required-privileges" : [ "Update LDAP Servers" ]
      }
    },
    "/v1/cloud-ldaps/{id}/test-group" : {
      "post" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Get group test search",
        "description" : "Do test search to ensure about configuration and mappings",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Search request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupTestSearchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider test search result returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupTestSearchResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Cloud Identity Provider does not exist or is not active.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-action" : true,
        "x-deprecation-date" : "2020-08-25",
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/cloud-ldaps/{id}/test-user" : {
      "post" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Get user test search",
        "description" : "Do test search to ensure about configuration and mappings",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Search request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserTestSearchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider test search result returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserTestSearchResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Cloud Identity Provider does not exist or is not active.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-action" : true,
        "x-deprecation-date" : "2020-08-25",
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/cloud-ldaps/{id}/test-user-membership" : {
      "post" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Get membership test search",
        "description" : "Do test search to ensure about configuration and mappings",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Search request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MembershipTestSearchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider test search result returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MembershipTestSearchResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Cloud Identity Provider does not exist or is not active.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-action" : true,
        "x-deprecation-date" : "2020-08-25",
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/computer-inventory-collection-settings" : {
      "get" : {
        "tags" : [ "computer-inventory-collection-settings" ],
        "summary" : "Returns computer inventory settings",
        "description" : "Returns computer inventory settings",
        "responses" : {
          "200" : {
            "description" : "Successful response returns the computer inventory settings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ComputerInventoryCollectionSettings"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Computer Inventory Collection Settings" ]
      },
      "patch" : {
        "tags" : [ "computer-inventory-collection-settings" ],
        "summary" : "Update computer inventory settings",
        "description" : "Update computer inventory settings",
        "requestBody" : {
          "description" : "Computer inventory settings to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ComputerInventoryCollectionSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Computer inventory settings updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ComputerInventoryCollectionSettings"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Computer Inventory Collection Settings" ]
      }
    },
    "/v1/computer-inventory-collection-settings/custom-path" : {
      "post" : {
        "tags" : [ "computer-inventory-collection-settings" ],
        "summary" : "Create Computer Inventory Collection Settings Custom Path",
        "description" : "Creates a custom search path to use when collecting applications, fonts, and plug-ins.",
        "requestBody" : {
          "description" : "Computer inventory settings to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreatePath"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Custom path created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid data response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Custom Paths" ]
      }
    },
    "/v1/computer-inventory-collection-settings/custom-path/{id}" : {
      "delete" : {
        "tags" : [ "computer-inventory-collection-settings" ],
        "summary" : "Delete Custom Path from Computer Inventory Collection Settings",
        "description" : "Delete Custom Path from Computer Inventory Collection Settings",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of Custom Path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Custom path deleted"
          },
          "404" : {
            "description" : "Invalid data response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Delete Custom Paths" ]
      }
    },
    "/v1/computer-prestages" : {
      "get" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Search for sorted and paged Computer Prestages\n",
        "description" : "Search for sorted and paged computer prestages",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/size"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "id:asc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ComputerPrestageSearchResults"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-03",
        "x-required-privileges" : [ "Read Computer PreStage Enrollments" ]
      },
      "post" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Create a Computer Prestage\n",
        "description" : "Create a computer prestage",
        "requestBody" : {
          "description" : "Computer Prestage to create. ids defined in this body will be ignored",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ComputerPrestage"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Computer Prestage was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetComputerPrestage"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-03",
        "x-required-privileges" : [ "Create Computer PreStage Enrollments" ]
      }
    },
    "/v1/computer-prestages/scope" : {
      "get" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Get all device Scope for all Computer Prestages\n",
        "description" : "Get all device scope for all computer prestages",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-03",
        "x-required-privileges" : [ "Read Computer PreStage Enrollments" ]
      }
    },
    "/v1/computer-prestages/{id}" : {
      "get" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Retrieve a Computer Prestage with the supplied id\n",
        "description" : "Retrieves a Computer Prestage with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Computer Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetComputerPrestage"
                }
              }
            }
          },
          "404" : {
            "description" : "Computer Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-03",
        "x-required-privileges" : [ "Read Computer PreStage Enrollments" ]
      },
      "put" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Update a Computer Prestage\n",
        "description" : "Updates a Computer Prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Computer Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Computer Prestage to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PutComputerPrestage"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetComputerPrestage"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Computer Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "The Computer Prestage was modified by another process. Read the Computer Prestage again for updated changes.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-03",
        "x-required-privileges" : [ "Update Computer PreStage Enrollments" ]
      },
      "delete" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Delete a Computer Prestage with the supplied id\n",
        "description" : "Deletes a Computer Prestage with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Computer Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-03",
        "x-required-privileges" : [ "Delete Computer PreStage Enrollments" ]
      }
    },
    "/v1/computer-prestages/{id}/scope" : {
      "get" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Get device Scope for a specific Computer Prestage\n",
        "description" : "Get device scope for a specific computer prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Computer Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScopeResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Computer Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-03",
        "x-required-privileges" : [ "Read Computer PreStage Enrollments" ]
      },
      "put" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Replace device Scope for a specific Computer Prestage\n",
        "description" : "Replace device scope for a specific computer prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Computer Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Serial Numbers to scope",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrestageScopeUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScopeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more serial numbers are not valid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Computer Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-03",
        "x-required-privileges" : [ "Update Computer PreStage Enrollments" ]
      },
      "post" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Add device Scope for a specific Computer Prestage\n",
        "description" : "Add device scope for a specific computer prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Computer Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Serial Numbers to scope",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrestageScopeUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScopeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more serial numbers are not valid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Computer Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-03",
        "x-required-privileges" : [ "Update Computer PreStage Enrollments" ]
      },
      "delete" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Remove device Scope for a specific Computer Prestage\n",
        "description" : "Remove device scope for a specific computer prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Computer Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Serial Numbers to remove from scope",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrestageScopeUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScopeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more serial numbers are not valid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Computer Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-03",
        "x-required-privileges" : [ "Update Computer PreStage Enrollments" ]
      }
    },
    "/v1/computers-inventory" : {
      "get" : {
        "tags" : [ "computer-inventory" ],
        "summary" : "Return a Computer Inventory for paginated list of computers\n",
        "description" : "Return a Computer Inventory for paginated list of computers",
        "parameters" : [ {
          "name" : "section",
          "in" : "query",
          "description" : "section of computer details, if not specified, General section data is returned. Multiple section parameters are supported, e.g. section=GENERAL&section=HARDWARE",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "example" : [ "GENERAL" ],
            "items" : {
              "$ref" : "#/components/schemas/ComputerSection"
            },
            "default" : [ "GENERAL" ]
          }
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `general.name:asc`. Multiple sort criteria are supported and must be separated with\na comma.\n\nFields allowed in the sort: `general.name`, `udid`, `id`, `general.assetTag`,\n`general.jamfBinaryVersion`, `general.lastContactTime`, `general.lastEnrolledDate`, `general.lastCloudBackupDate`,\n`general.reportDate`, `general.remoteManagement.managementUsername`,\n`general.mdmCertificateExpiration`, `general.platform`,\n`hardware.make`, `hardware.model`,\n`operatingSystem.build`, `operatingSystem.name`, `operatingSystem.version`,\n`userAndLocation.realname`,\n`purchasing.lifeExpectancy`, `purchasing.warrantyDate`\n\nExample: `sort=udid:desc,general.name:asc`.\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:asc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter computer inventory collection.\nDefault filter is empty query - returning all results for the requested page.\n\nFields allowed in the query: `general.name`, `udid`, `id`, `general.assetTag`, `general.barcode1`, `general.barcode2`,\n`general.enrolledViaAutomatedDeviceEnrollment`, `general.lastIpAddress`, `general.itunesStoreAccountActive`,\n`general.jamfBinaryVersion`, `general.lastContactTime`, `general.lastEnrolledDate`, `general.lastCloudBackupDate`,\n`general.reportDate`, `general.lastReportedIp`, `general.remoteManagement.managed`, `general.remoteManagement.managementUsername`,\n`general.mdmCapable.capable`, `general.mdmCertificateExpiration`, `general.platform`, `general.supervised`, `general.userApprovedMdm`,\n`hardware.bleCapable`, `hardware.macAddress`, `hardware.make`, `hardware.model`, `hardware.modelIdentifier`, `hardware.serialNumber`,\n`hardware.supportsIosAppInstalls`,`hardware.isAppleSilicon`, `operatingSystem.activeDirectoryStatus`, `operatingSystem.fileVault2Status`,\n`operatingSystem.build`, `operatingSystem.name`, `operatingSystem.version`, `operatingSystem.softwareUpdateDeviceId`, `security.activationLockEnabled`,\n`security.recoveryLockEnabled`,`security.firewallEnabled`,`userAndLocation.buildingId`, `userAndLocation.departmentId`, `userAndLocation.email`, `userAndLocation.realname`,\n`userAndLocation.phone`, `userAndLocation.position`,`userAndLocation.room`, `userAndLocation.username`,\n`purchasing.appleCareId`, `purchasing.lifeExpectancy`, `purchasing.purchased`, `purchasing.leased`, `purchasing.vendor`, `purchasing.warrantyDate`,\n\nThis param can be combined with paging and sorting.\nExample: `filter=general.name==\"Orchard\"`\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ComputerInventorySearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Computers" ]
      }
    },
    "/v1/computers-inventory-detail/{id}" : {
      "get" : {
        "tags" : [ "computer-inventory" ],
        "summary" : "Return a Computer details with all sections\n",
        "description" : "Return a Computer details with all sections",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of computer record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of computer were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ComputerInventoryResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified computer object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Computers" ]
      },
      "patch" : {
        "tags" : [ "computer-inventory" ],
        "summary" : "Return a updated computer instance\n",
        "description" : "Return a updated computer instance",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of computer record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ComputerInventoryUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Details of computer were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ComputerInventoryResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified computer object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Computers" ]
      }
    },
    "/v1/computers-inventory/{id}" : {
      "get" : {
        "tags" : [ "computer-inventory" ],
        "summary" : "Return a Computer General details\n",
        "description" : "Return a Computer General details",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of computer record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "section",
          "in" : "query",
          "description" : "section of computer details, if not specified, General section data is returned. Multiple section parameters are supported, e.g. section=general&section=hardware",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "example" : [ "GENERAL" ],
            "items" : {
              "$ref" : "#/components/schemas/ComputerSection"
            },
            "default" : [ "GENERAL" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of computer were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ComputerInventoryResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified computer object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Computers" ]
      },
      "delete" : {
        "tags" : [ "computer-inventory" ],
        "summary" : "Remove specified Computer record\n",
        "description" : "Remove specified Computer record",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of computer record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Computer record sucessfully removed"
          },
          "404" : {
            "description" : "Specified computer object id does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Delete Computers" ]
      }
    },
    "/v1/computers-inventory/{id}/attachments" : {
      "post" : {
        "tags" : [ "computer-inventory" ],
        "summary" : "Upload attachment and assign to computer\n",
        "description" : "Upload attachment and assign to computer",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of computer record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The file to upload",
                    "format" : "binary"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Successfully uploaded attachment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified computer object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Computers" ]
      }
    },
    "/v1/computers-inventory/{id}/attachments/{attachmentId}" : {
      "get" : {
        "tags" : [ "computer-inventory" ],
        "summary" : "Download attachment file\n",
        "description" : "Download attachment file",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of computer record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "instance id of attachment object",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Attachment successfully downloaded",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "description" : "Downloaded binary file, Content-Type will be dynamic, based on a file extension",
                  "format" : "binary"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified computer object or attachment does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Computers" ]
      },
      "delete" : {
        "tags" : [ "computer-inventory" ],
        "summary" : "Remove attachment\n",
        "description" : "Remove attachment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of computer record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "instance id of attachment object",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Attachment successfully removed"
          },
          "404" : {
            "description" : "Specified computer object or attachment does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Computers" ]
      }
    },
    "/v1/computers-inventory/{id}/view-recovery-lock-password" : {
      "get" : {
        "tags" : [ "computer-inventory" ],
        "summary" : "Return a Computers Recovery Lock Password\n",
        "description" : "Return a Computers Recovery Lock Password",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of computer record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Recovery Lock Password",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ComputerInventoryRecoveryLockPasswordResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified computer object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "View Recovery Lock" ]
      }
    },
    "/v1/computers/{id}/recalculate-smart-groups" : {
      "post" : {
        "tags" : [ "smart-computer-groups-preview" ],
        "summary" : "Recalculate a smart group for the given id\n",
        "description" : "Recalculates a smart group for the given id and then\nreturns the count of smart groups the computer falls into\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of computer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecalculationResults"
                }
              }
            }
          },
          "400" : {
            "description" : "smart group not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-action" : true,
        "x-required-privileges" : [ "Update Smart Computer Groups" ]
      }
    },
    "/v1/conditional-access/device-compliance-information/computer/{deviceId}" : {
      "get" : {
        "tags" : [ "conditional-access" ],
        "summary" : "Get compliance information for a single computer device",
        "description" : "Return basic compliance information for the given computer device",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "description" : "ID of the device the query pertains",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of device compliance information records",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "example" : [ {
                    "deviceId" : "1",
                    "applicable" : true,
                    "complianceState" : "COMPLIANT",
                    "complianceVendor" : "Vendor A"
                  }, {
                    "deviceId" : "1",
                    "applicable" : false,
                    "complianceState" : "NON_COMPLIANT",
                    "complianceVendor" : "Vendor B"
                  } ],
                  "items" : {
                    "$ref" : "#/components/schemas/DeviceComplianceInformation"
                  }
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Device Compliance Information" ]
      }
    },
    "/v1/conditional-access/device-compliance-information/mobile/{deviceId}" : {
      "get" : {
        "tags" : [ "conditional-access" ],
        "summary" : "Get compliance information for a single mobile device",
        "description" : "Return basic compliance information for the given mobile device",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "description" : "ID of the device the query pertains",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of device compliance information records",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "example" : [ {
                    "deviceId" : "1",
                    "applicable" : true,
                    "complianceState" : "COMPLIANT",
                    "complianceVendor" : "Vendor A"
                  }, {
                    "deviceId" : "1",
                    "applicable" : false,
                    "complianceState" : "NON_COMPLIANT",
                    "complianceVendor" : "Vendor B"
                  } ],
                  "items" : {
                    "$ref" : "#/components/schemas/DeviceComplianceInformation"
                  }
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Device Compliance Information" ]
      }
    },
    "/v1/csa/token" : {
      "get" : {
        "tags" : [ "csa" ],
        "summary" : "Get details regarding the CSA token exchange\n",
        "description" : "Get details regarding the CSA token exchange\n",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CsaToken"
                }
              }
            }
          },
          "404" : {
            "description" : "CSA token exchange has not been initialized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Cloud Services Settings" ]
      },
      "put" : {
        "tags" : [ "csa" ],
        "summary" : "Re-initialize the CSA token exchange with new credentials\n",
        "description" : "Re-initialize the CSA token exchange with new credentials\n",
        "requestBody" : {
          "description" : "Jamf Nation username and password\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JamfNationCredentials"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "CSA Token Exchange succesfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CsaToken"
                }
              }
            }
          },
          "400" : {
            "description" : "Jamf Nation credentials provided are invalid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "CSA token exchange has not been initialized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Cloud Services Settings" ]
      },
      "post" : {
        "tags" : [ "csa" ],
        "summary" : "Initialize the CSA token exchange\n",
        "description" : "Initializes the CSA token exchange - This will allow Jamf Pro to authenticate with cloud-hosted services\n",
        "requestBody" : {
          "description" : "Jamf Nation username and password\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JamfNationCredentials"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "CSA Token Exchange succesfully initialized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CsaToken"
                }
              }
            }
          },
          "403" : {
            "description" : "Jamf Nation credentials provided are invalid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "CSA token exchange has already been initialized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Cloud Services Settings" ]
      },
      "delete" : {
        "tags" : [ "csa" ],
        "summary" : "Delete the CSA token exchange - This will disable Jamf Pro's ability to authenticate with cloud-hosted services\n",
        "description" : "Delete the CSA token exchange - This will disable Jamf Pro's ability to authenticate with cloud-hosted services\n",
        "responses" : {
          "204" : {
            "description" : "CSA Token Exchange successfully deleted"
          },
          "404" : {
            "description" : "CSA Token Exchange has not been initialized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Cloud Services Settings" ]
      }
    },
    "/v1/departments" : {
      "get" : {
        "tags" : [ "departments" ],
        "summary" : "Search for Departments\n",
        "description" : "Search for Departments\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:asc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter department collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. Example: name==\"*department*\"",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DepartmentsSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Departments" ]
      },
      "post" : {
        "tags" : [ "departments" ],
        "summary" : "Create department record\n",
        "description" : "Create department record\n",
        "requestBody" : {
          "description" : "department object to create. ids defined in this body will be ignored",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Department"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Department record was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Departments" ]
      }
    },
    "/v1/departments/delete-multiple" : {
      "post" : {
        "tags" : [ "departments" ],
        "summary" : "Deletes all departments by ids passed in body\n",
        "description" : "Deletes all departments by ids passed in body\n",
        "requestBody" : {
          "description" : "ids of departments to be deleted. pass in an array of ids",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "All department ids passed in request sucessfully deleted."
          },
          "400" : {
            "description" : "Request processed.  Returns ids and error codes of any departments unable to be deleted.  Expected error codes: INVALID_ID - id does not exist SYSTEM_EXCEPTION - a system exception occured trying to delete the department.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Delete Departments" ],
        "x-action" : true
      }
    },
    "/v1/departments/{id}" : {
      "get" : {
        "tags" : [ "departments" ],
        "summary" : "Get specified Department object\n",
        "description" : "Gets specified Department object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of department record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of department were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Department"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified department object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Departments" ]
      },
      "put" : {
        "tags" : [ "departments" ],
        "summary" : "Update specified department object\n",
        "description" : "Update specified department object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of department record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "department object to create. ids defined in this body will be ignored",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Department"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Department update",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Department"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Departments" ]
      },
      "delete" : {
        "tags" : [ "departments" ],
        "summary" : "Remove specified department record\n",
        "description" : "Removes specified department record\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of department record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Department record was deleted"
          }
        },
        "x-required-privileges" : [ "Delete Departments" ]
      }
    },
    "/v1/departments/{id}/history" : {
      "get" : {
        "tags" : [ "departments" ],
        "summary" : "Get specified Department history object\n",
        "description" : "Gets specified Department history object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of department history record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "date:desc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of department history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified department object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Departments" ]
      },
      "post" : {
        "tags" : [ "departments" ],
        "summary" : "Add specified Department history object notes\n",
        "description" : "Adds specified Department history object notes\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of department history record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "history notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of department history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified department object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "503" : {
            "description" : "Department history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Departments" ]
      }
    },
    "/v1/deploy-package" : {
      "post" : {
        "tags" : [ "mdm" ],
        "summary" : "Deploy packages using MDM",
        "description" : "Deploys packages to macOS devices using the InstallEnterpriseApplication MDM command.",
        "parameters" : [ {
          "name" : "verbose",
          "in" : "query",
          "description" : "Enables the 'verbose' response, which includes information about the commands queued as well as information about commands that failed to queue.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          },
          "example" : true
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InstallPackage"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Package deployment was successfully processed. See response body for further information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VerbosePackageDeploymentResponse"
                }
              }
            }
          },
          "202" : {
            "description" : "Package deployment was queued up"
          },
          "403" : {
            "description" : "Insufficient privileges to perform this action or Package Deployment is not enabled."
          }
        },
        "x-required-privileges" : [ "Send Computer Remote Command to Install Package" ],
        "x-action" : true
      }
    },
    "/v1/device-communication-settings" : {
      "get" : {
        "tags" : [ "device-communication-settings" ],
        "summary" : "Retrieves all settings for device communication\n",
        "description" : "Retrieves all device communication settings, including automatic renewal of the MDM profile.\n",
        "responses" : {
          "200" : {
            "description" : "Successful response - Device Communication Settings retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceCommunicationSettings"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Automatically Renew MDM Profile Settings" ]
      },
      "put" : {
        "tags" : [ "device-communication-settings" ],
        "summary" : "Update device communication settings\n",
        "description" : "Update device communication settings\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceCommunicationSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response - Device communication Settings updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceCommunicationSettings"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Automatically Renew MDM Profile Settings" ]
      }
    },
    "/v1/device-communication-settings/history" : {
      "get" : {
        "tags" : [ "device-communication-settings" ],
        "summary" : "Get Device Communication settings history\n",
        "description" : "Gets Device Communication settings history\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "date:desc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of Device Communication Settings history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Automatically Renew MDM Profile Settings" ]
      },
      "post" : {
        "tags" : [ "device-communication-settings" ],
        "summary" : "Add Device Communication Settings history notes\n",
        "description" : "Adds Device Communication Settings history notes\n",
        "requestBody" : {
          "description" : "history notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes to Device Communication Settings history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectHistory"
                }
              }
            }
          },
          "503" : {
            "description" : "Device Communication Settings history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Automatically Renew MDM Profile Settings" ]
      }
    },
    "/v1/device-enrollments" : {
      "get" : {
        "tags" : [ "device-enrollments" ],
        "summary" : "Read all sorted and paged Device Enrollment instances\n",
        "description" : "Search for sorted and paged device enrollment instances",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:asc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceEnrollmentInstanceSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Device Enrollment Program Instances" ]
      }
    },
    "/v1/device-enrollments/public-key" : {
      "get" : {
        "tags" : [ "device-enrollments" ],
        "summary" : "Retrieve the Jamf Pro Device Enrollment public key\n",
        "description" : "Retrieve the Jamf Pro device enrollment public key",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/x-pem-file" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "x-required-privileges" : [ "Read Device Enrollment Program Instances" ]
      }
    },
    "/v1/device-enrollments/syncs" : {
      "get" : {
        "tags" : [ "device-enrollments" ],
        "summary" : "Get all instance sync states for all Device Enrollment Instances\n",
        "description" : "Get all instance sync states for all instances",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeviceEnrollmentInstanceSyncStatus"
                  }
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Device Enrollment Program Instances" ]
      }
    },
    "/v1/device-enrollments/upload-token" : {
      "post" : {
        "tags" : [ "device-enrollments" ],
        "summary" : "Create a Device Enrollment Instance with the supplied Token\n",
        "description" : "Creates a device enrollment instance with the supplied token.",
        "requestBody" : {
          "description" : "The downloaded token base 64 encoded from the MDM server to be used to create a new Device Enrollment Instance.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceEnrollmentToken"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Device Enrollment Instance was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Something went wrong",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Device Enrollment Program Instances" ],
        "x-action" : true
      }
    },
    "/v1/device-enrollments/{id}" : {
      "get" : {
        "tags" : [ "device-enrollments" ],
        "summary" : "Retrieve a Device Enrollment Instance with the supplied id\n",
        "description" : "Retrieves a Device Enrollment Instance with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Device Enrollment Instance identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceEnrollmentInstance"
                }
              }
            }
          },
          "404" : {
            "description" : "Device Enrollment Instance with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Device Enrollment Program Instances" ]
      },
      "put" : {
        "tags" : [ "device-enrollments" ],
        "summary" : "Update a Device Enrollment Instance with the supplied id\n",
        "description" : "Updates a Device Enrollment Instance with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Device Enrollment Instance identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceEnrollmentInstance"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceEnrollmentInstance"
                }
              }
            }
          },
          "404" : {
            "description" : "Device Enrollment Instance with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Device Enrollment Program Instances" ]
      },
      "delete" : {
        "tags" : [ "device-enrollments" ],
        "summary" : "Delete a Device Enrollment Instance with the supplied id\n",
        "description" : "Deletes a Device Enrollment Instance with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Device Enrollment Instance identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "Device Enrollment Instance with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Delete Device Enrollment Program Instances" ]
      }
    },
    "/v1/device-enrollments/{id}/devices" : {
      "get" : {
        "tags" : [ "device-enrollments-devices" ],
        "summary" : "Retrieve a list of Devices assigned to the supplied id\n",
        "description" : "Retrieves a list of devices assigned to the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Device Enrollment Instance identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceEnrollmentDeviceSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Device Enrollment Program Instances" ]
      }
    },
    "/v1/device-enrollments/{id}/disown" : {
      "post" : {
        "tags" : [ "device-enrollments" ],
        "summary" : "Disown devices from the given Device Enrollment Instance\n",
        "description" : "Disowns devices from the given device enrollment instance",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Device Enrollment Instance identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "List of device serial numbers to disown",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceEnrollmentDisownBody"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceEnrollmentDisownResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find device enrollment program instance for given id"
          },
          "500" : {
            "description" : "Something went wrong."
          }
        },
        "x-required-privileges" : [ "Update Device Enrollment Program Instances" ],
        "x-action" : true
      }
    },
    "/v1/device-enrollments/{id}/history" : {
      "get" : {
        "tags" : [ "device-enrollments" ],
        "summary" : "Get sorted and paged Device Enrollment history objects\n",
        "description" : "Gets sorted and paged device enrollment history objects",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Device Enrollment Instance identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "date:desc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter history notes collection. Default search is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: search=username!=admin and details==*disabled* and date<2019-12-15",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of device enrollment history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Device Enrollment Program Instances" ]
      },
      "post" : {
        "tags" : [ "device-enrollments" ],
        "summary" : "Add Device Enrollment history object notes\n",
        "description" : "Adds device enrollment history object notes",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Device Enrollment Instance identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "History notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of device enrollment history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "503" : {
            "description" : "Device enrollment history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Device Enrollment Program Instances" ]
      }
    },
    "/v1/device-enrollments/{id}/syncs" : {
      "get" : {
        "tags" : [ "device-enrollments" ],
        "summary" : "Get all instance sync states for a single Device Enrollment Instance\n",
        "description" : "Get all instance sync states for a single instance",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Device Enrollment Instance identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeviceEnrollmentInstanceSyncStatus"
                  }
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Device Enrollment Program Instances" ]
      }
    },
    "/v1/device-enrollments/{id}/syncs/latest" : {
      "get" : {
        "tags" : [ "device-enrollments" ],
        "summary" : "Get the latest sync state for a single Device Enrollment Instance\n",
        "description" : "Get the latest sync state for a single instance",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Device Enrollment Instance identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceEnrollmentInstanceSyncStatus"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Device Enrollment Program Instances" ]
      }
    },
    "/v1/device-enrollments/{id}/upload-token" : {
      "put" : {
        "tags" : [ "device-enrollments" ],
        "summary" : "Update a Device Enrollment Instance with the supplied Token\n",
        "description" : "Updates a device enrollment instance with the supplied token.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Device Enrollment Instance identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The downloaded token base 64 encoded from the MDM server to be used to create a new Device Enrollment Instance.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceEnrollmentToken"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceEnrollmentInstance"
                }
              }
            }
          },
          "404" : {
            "description" : "Device Enrollment Instance with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500" : {
            "description" : "Something went wrong",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Device Enrollment Program Instances" ],
        "x-action" : true
      }
    },
    "/v1/ebooks" : {
      "get" : {
        "tags" : [ "ebooks" ],
        "summary" : "Get Ebook object\n",
        "description" : "Gets ebook object",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "name:asc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EbookSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read eBooks" ]
      }
    },
    "/v1/ebooks/{id}" : {
      "get" : {
        "tags" : [ "ebooks" ],
        "summary" : "Get specified Ebook object\n",
        "description" : "Gets specified Ebook object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of ebook record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details about ebook were found for given id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ebook"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified ebook object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read eBooks" ]
      }
    },
    "/v1/ebooks/{id}/scope" : {
      "get" : {
        "tags" : [ "ebooks" ],
        "summary" : "Get specified scope of Ebook object\n",
        "description" : "Gets specified scope of Ebook object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of ebook record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of scope for ebook were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EbookScope"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified scope for ebook object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read eBooks" ]
      }
    },
    "/v1/engage" : {
      "get" : {
        "tags" : [ "engage" ],
        "summary" : "Get Engage settings\n",
        "description" : "Get Engage settings\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Engage"
                }
              }
            }
          }
        },
        "x-authentication-required" : true
      },
      "put" : {
        "tags" : [ "engage" ],
        "summary" : "Update Engage settings\n",
        "description" : "Update Engage settings\n",
        "requestBody" : {
          "description" : "Engage settings object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Engage"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Engage settings updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Engage"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Engage Settings" ]
      }
    },
    "/v1/engage/history" : {
      "get" : {
        "tags" : [ "engage" ],
        "summary" : "Get Engage settings history\n",
        "description" : "Gets Engage settings history\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/size"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "date:desc"
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter history notes collection. Default search is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: search=username!=admin and details==*disabled* and date<2019-12-15",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of Engage settings history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Engage Settings" ]
      },
      "post" : {
        "tags" : [ "engage" ],
        "summary" : "Add Engage settings history notes\n",
        "description" : "Adds Engage settings history notes\n",
        "requestBody" : {
          "description" : "history notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes to Engage settings history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectHistory"
                }
              }
            }
          },
          "503" : {
            "description" : "Engage history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Engage Settings" ]
      }
    },
    "/v1/enrollment" : {
      "get" : {
        "tags" : [ "enrollment" ],
        "summary" : "Get Enrollment object and Re-enrollment settings\n",
        "description" : "Gets Enrollment object and re-enrollment settings. The settings can be altered without providing the existing management password by providing the following value for managementPassword:  \\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentSettings"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-01",
        "x-required-privileges" : [ "Read User-Initiated Enrollment" ]
      },
      "put" : {
        "tags" : [ "enrollment" ],
        "summary" : "Update Enrollment object\n",
        "description" : "Update enrollment object. Regarding the `developerCertificateIdentity`,\nif this object is omitted, the certificate will not be deleted from Jamf Pro.\nThe `identityKeystore` is the entire cert file as a base64 encoded string. The\n`md5Sum` field is not required in the PUT request, but is calculated and returned\nin the response.\n",
        "requestBody" : {
          "description" : "Update enrollment",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrollmentSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated enrollment object",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentSettings"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-01",
        "x-required-privileges" : [ "Update User-Initiated Enrollment" ]
      }
    },
    "/v1/enrollment-customization" : {
      "get" : {
        "tags" : [ "enrollment-customization" ],
        "summary" : "Retrieve sorted and paged Enrollment Customizations\n",
        "description" : "Retrieves sorted and paged Enrollment Customizations",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/size"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "id:asc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentCustomizationSearchResults"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-02",
        "x-required-privileges" : [ "Read Enrollment Customizations" ]
      },
      "post" : {
        "tags" : [ "enrollment-customization" ],
        "summary" : "Create an Enrollment Customization\n",
        "description" : "Create an enrollment customization",
        "requestBody" : {
          "description" : "Enrollment customization to create.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrollmentCustomization"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Enrollment customization was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEnrollmentCustomization"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-02",
        "x-required-privileges" : [ "Create Enrollment Customizations" ]
      }
    },
    "/v1/enrollment-customization/images" : {
      "post" : {
        "tags" : [ "enrollment-customization" ],
        "summary" : "Upload an image",
        "description" : "Uploads an image",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The file to upload",
                    "format" : "binary"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Image successfully uploaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BrandingImageUrl"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-02",
        "x-required-privileges" : [ "Update Enrollment Customizations" ]
      }
    },
    "/v1/enrollment-customization/parse-markdown" : {
      "post" : {
        "tags" : [ "enrollment-customization-preview" ],
        "summary" : "Parse the given string as markdown text and return Html output\n",
        "description" : "Parse the given string as markdown text and return Html output",
        "requestBody" : {
          "description" : "Enrollment Customization Panel to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Markdown"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Markdown"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Enrollment Customizations" ]
      }
    },
    "/v1/enrollment-customization/{id}" : {
      "get" : {
        "tags" : [ "enrollment-customization" ],
        "summary" : "Retrieve an Enrollment Customization with the supplied id\n",
        "description" : "Retrieves an Enrollment Customization with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEnrollmentCustomization"
                }
              }
            }
          },
          "404" : {
            "description" : "Enrollment Customization with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-02",
        "x-required-privileges" : [ "Read Enrollment Customizations" ]
      },
      "put" : {
        "tags" : [ "enrollment-customization" ],
        "summary" : "Update an Enrollment Customization\n",
        "description" : "Updates an Enrollment Customization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Enrollment Customization to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrollmentCustomization"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEnrollmentCustomization"
                }
              }
            }
          },
          "404" : {
            "description" : "Enrollment Customization with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-02",
        "x-required-privileges" : [ "Update Enrollment Customizations" ]
      },
      "delete" : {
        "tags" : [ "enrollment-customization" ],
        "summary" : "Delete an Enrollment Customization with the supplied id\n",
        "description" : "Deletes an Enrollment Customization with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-02",
        "x-required-privileges" : [ "Delete Enrollment Customizations" ]
      }
    },
    "/v1/enrollment-customization/{id}/all" : {
      "get" : {
        "tags" : [ "enrollment-customization-preview" ],
        "summary" : "Get all Panels for single Enrollment Customization\n",
        "description" : "Get all panels for single enrollment customization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentCustomizationPanelList"
                }
              }
            }
          },
          "404" : {
            "description" : "Enrollment Customization with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Enrollment Customizations" ]
      }
    },
    "/v1/enrollment-customization/{id}/all/{panel-id}" : {
      "get" : {
        "tags" : [ "enrollment-customization-preview" ],
        "summary" : "Get a single Panel for a single Enrollment Customization\n",
        "description" : "Get a single panel for a single enrollment customization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "panel-id",
          "in" : "path",
          "description" : "Panel object identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEnrollmentCustomizationPanel"
                }
              }
            }
          },
          "404" : {
            "description" : "Enrollment Customization with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Enrollment Customizations" ]
      },
      "delete" : {
        "tags" : [ "enrollment-customization-preview" ],
        "summary" : "Delete a single Panel from an Enrollment Customization\n",
        "description" : "Delete a single panel from an Enrollment Customization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "panel-id",
          "in" : "path",
          "description" : "Panel object identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        },
        "x-required-privileges" : [ "Update Enrollment Customizations" ]
      }
    },
    "/v1/enrollment-customization/{id}/history" : {
      "get" : {
        "tags" : [ "enrollment-customization" ],
        "summary" : "Get sorted and paged Enrollment Customization history objects\n",
        "description" : "Gets sorted and paged enrollment customization history objects",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/size"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "date:desc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of enrollment customization history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-02",
        "x-required-privileges" : [ "Read Enrollment Customizations" ]
      },
      "post" : {
        "tags" : [ "enrollment-customization" ],
        "summary" : "Add Enrollment Customization history object notes\n",
        "description" : "Adds enrollment customization history object notes",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "History notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of enrollment customization history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectHistory"
                }
              }
            }
          },
          "503" : {
            "description" : "Enrollment customization history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-02",
        "x-required-privileges" : [ "Update Enrollment Customizations" ]
      }
    },
    "/v1/enrollment-customization/{id}/ldap" : {
      "post" : {
        "tags" : [ "enrollment-customization-preview" ],
        "summary" : "Create an LDAP Panel for a single Enrollment Customization\n",
        "description" : "Create an LDAP panel for a single enrollment customization. If multiple LDAP access groups are defined with the same name and id, only one will be saved.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Enrollment Customization Panel to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrollmentCustomizationPanelLdapAuth"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "LDAP panel was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEnrollmentCustomizationPanelLdapAuth"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Enrollment Customizations" ]
      }
    },
    "/v1/enrollment-customization/{id}/ldap/{panel-id}" : {
      "get" : {
        "tags" : [ "enrollment-customization-preview" ],
        "summary" : "Get a single LDAP panel for a single Enrollment Customization\n",
        "description" : "Get a single LDAP panel for a single enrollment customization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "panel-id",
          "in" : "path",
          "description" : "Panel object identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEnrollmentCustomizationPanelLdapAuth"
                }
              }
            }
          },
          "404" : {
            "description" : "Enrollment Customization or Panel does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Enrollment Customizations" ]
      },
      "put" : {
        "tags" : [ "enrollment-customization-preview" ],
        "summary" : "Update a single LDAP Panel for a single Enrollment Customization\n",
        "description" : "Update a single LDAP panel for a single enrollment customization. If multiple LDAP access groups are defined with the same name and id, only one will be saved.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "panel-id",
          "in" : "path",
          "description" : "Panel object identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Enrollment Customization Panel to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrollmentCustomizationPanelLdapAuth"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEnrollmentCustomizationPanelLdapAuth"
                }
              }
            }
          },
          "404" : {
            "description" : "Enrollment Customization or Panel does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Enrollment Customizations" ]
      },
      "delete" : {
        "tags" : [ "enrollment-customization-preview" ],
        "summary" : "Delete an LDAP single panel from an Enrollment Customization\n",
        "description" : "Delete an LDAP single Panel from an Enrollment Customization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "panel-id",
          "in" : "path",
          "description" : "Panel object identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        },
        "x-required-privileges" : [ "Update Enrollment Customizations" ]
      }
    },
    "/v1/enrollment-customization/{id}/prestages" : {
      "get" : {
        "tags" : [ "enrollment-customization" ],
        "summary" : "Retrieve the list of Prestages using this Enrollment Customization\n",
        "description" : "Retrieves the list of Prestages using this Enrollment Customization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageDependencies"
                }
              }
            }
          },
          "404" : {
            "description" : "Enrollment Customization with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-02",
        "x-required-privileges" : [ "Read Enrollment Customizations" ]
      }
    },
    "/v1/enrollment-customization/{id}/sso" : {
      "post" : {
        "tags" : [ "enrollment-customization-preview" ],
        "summary" : "Create an SSO Panel for a single Enrollment Customization\n",
        "description" : "Create an SSO panel for a single enrollment customization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Enrollment Customization Panel to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrollmentCustomizationPanelSsoAuth"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Auth panel was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEnrollmentCustomizationPanelSsoAuth"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Enrollment Customizations" ]
      }
    },
    "/v1/enrollment-customization/{id}/sso/{panel-id}" : {
      "get" : {
        "tags" : [ "enrollment-customization-preview" ],
        "summary" : "Get a single SSO Panel for a single Enrollment Customization\n",
        "description" : "Get a single SSO panel for a single enrollment customization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "panel-id",
          "in" : "path",
          "description" : "Panel object identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEnrollmentCustomizationPanelSsoAuth"
                }
              }
            }
          },
          "404" : {
            "description" : "Enrollment Customization or Panel does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Enrollment Customizations" ]
      },
      "put" : {
        "tags" : [ "enrollment-customization-preview" ],
        "summary" : "Update a single SSO Panel for a single Enrollment Customization\n",
        "description" : "Update a single SSO panel for a single enrollment customization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "panel-id",
          "in" : "path",
          "description" : "Panel object identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Enrollment Customization Panel to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrollmentCustomizationPanelSsoAuth"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEnrollmentCustomizationPanelSsoAuth"
                }
              }
            }
          },
          "404" : {
            "description" : "Enrollment Customization or Panel does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Enrollment Customizations" ]
      },
      "delete" : {
        "tags" : [ "enrollment-customization-preview" ],
        "summary" : "Delete a single SSO Panel from an Enrollment Customization\n",
        "description" : "Delete a single SSO panel from an Enrollment Customization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "panel-id",
          "in" : "path",
          "description" : "Panel object identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        },
        "x-required-privileges" : [ "Update Enrollment Customizations" ]
      }
    },
    "/v1/enrollment-customization/{id}/text" : {
      "post" : {
        "tags" : [ "enrollment-customization-preview" ],
        "summary" : "Create a Text Panel for a single Enrollment Customization\n",
        "description" : "Create a Text panel for a single enrollment customization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Enrollment Customization Panel to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrollmentCustomizationPanelText"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Text panel was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEnrollmentCustomizationPanelText"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Enrollment Customizations" ]
      }
    },
    "/v1/enrollment-customization/{id}/text/{panel-id}" : {
      "get" : {
        "tags" : [ "enrollment-customization-preview" ],
        "summary" : "Get a single Text Panel for a single Enrollment Customization\n",
        "description" : "Get a single Text panel for a single enrollment customization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "panel-id",
          "in" : "path",
          "description" : "Panel object identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEnrollmentCustomizationPanelText"
                }
              }
            }
          },
          "404" : {
            "description" : "Enrollment Customization with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Enrollment Customizations" ]
      },
      "put" : {
        "tags" : [ "enrollment-customization-preview" ],
        "summary" : "Update a single Text Panel for a single Enrollment Customization\n",
        "description" : "Update a single Text panel for a single enrollment customization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "panel-id",
          "in" : "path",
          "description" : "Panel object identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Enrollment Customization Panel to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrollmentCustomizationPanelText"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetEnrollmentCustomizationPanelText"
                }
              }
            }
          },
          "404" : {
            "description" : "Enrollment Customization or Panel does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Enrollment Customizations" ]
      },
      "delete" : {
        "tags" : [ "enrollment-customization-preview" ],
        "summary" : "Delete a Text single Panel from an Enrollment Customization\n",
        "description" : "Delete a Text single panel from an Enrollment Customization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "panel-id",
          "in" : "path",
          "description" : "Panel object identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        },
        "x-required-privileges" : [ "Update Enrollment Customizations" ]
      }
    },
    "/v1/enrollment-customization/{id}/text/{panel-id}/markdown" : {
      "get" : {
        "tags" : [ "enrollment-customization-preview" ],
        "summary" : "Get the markdown output of a single Text Panel for a single Enrollment\n",
        "description" : "Get the markdown output of a single Text panel for a single enrollment customization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "panel-id",
          "in" : "path",
          "description" : "Panel object identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Markdown"
                }
              }
            }
          },
          "404" : {
            "description" : "Enrollment Customization with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Enrollment Customizations" ]
      }
    },
    "/v1/enrollment/access-groups" : {
      "get" : {
        "tags" : [ "enrollment" ],
        "summary" : "Retrieve the configured LDAP groups configured for User-Initiated Enrollment\n",
        "description" : "Retrieves the configured LDAP groups configured for User-Initiated Enrollment.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/size"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "name:asc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Found access groups matching search params.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessGroupsSearchResults"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-01",
        "x-required-privileges" : [ "Read User-Initiated Enrollment" ]
      }
    },
    "/v1/enrollment/access-groups/{group-key}" : {
      "get" : {
        "tags" : [ "enrollment" ],
        "summary" : "Retrieve the configured LDAP groups configured for User-Initiated Enrollment\n",
        "description" : "Retrieves the configured LDAP groups configured for User-Initiated Enrollment.",
        "parameters" : [ {
          "name" : "group-key",
          "in" : "path",
          "description" : "The group key is a string composed of the LDAP server ID, underscore and the LDAP group id. Example: ``1_2``",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful query",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentAccessGroup"
                }
              }
            }
          },
          "404" : {
            "description" : "Group not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-01",
        "x-required-privileges" : [ "Read User-Initiated Enrollment" ]
      },
      "put" : {
        "tags" : [ "enrollment" ],
        "summary" : "Modify the configured LDAP groups configured for User-Initiated Enrollment\n",
        "description" : "Modifies the configured LDAP groups configured for User-Initiated Enrollment.",
        "parameters" : [ {
          "name" : "group-key",
          "in" : "path",
          "description" : "The group key is a string composed of the LDAP server ID, underscore and the LDAP group id. Example: ``1_2``",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrollmentAccessGroup"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Successful query",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentAccessGroup"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-01",
        "x-required-privileges" : [ "Update User-Initiated Enrollment" ]
      },
      "delete" : {
        "tags" : [ "enrollment" ],
        "summary" : "Delete an LDAP group's access to user initiated Enrollment\n",
        "description" : "Deletes an LDAP group's access to user initiated enrollment. The group \"All LDAP Users\" cannot be deleted, but it can be modified to disallow User-Initiated Enrollment.",
        "parameters" : [ {
          "name" : "group-key",
          "in" : "path",
          "description" : "The group key is a string composed of the LDAP server ID, underscore and the LDAP group id. Example: ``1_2``",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful deletion"
          },
          "400" : {
            "description" : "Group not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-01",
        "x-required-privileges" : [ "Update User-Initiated Enrollment" ]
      }
    },
    "/v1/enrollment/filtered-language-codes" : {
      "get" : {
        "tags" : [ "enrollment" ],
        "summary" : "Retrieve the list of languages and corresponding ISO 639-1 Codes but only those not already added to Enrollment\n",
        "description" : "Retrieves the list of languages and corresponding ISO 639-1 Codes, but only those not already added to Enrollment.",
        "responses" : {
          "200" : {
            "description" : "Retrieves the list of languages and corresponding ISO 639-1 Codes, but only those not already added to Enrollment.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LanguageCode"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-01",
        "x-required-privileges" : [ "Read User-Initiated Enrollment" ]
      }
    },
    "/v1/enrollment/history" : {
      "get" : {
        "tags" : [ "enrollment" ],
        "summary" : "Get sorted and paged Enrollment history object\n",
        "description" : "Gets sorted and paged Enrollment history object\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/size"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "date:desc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of enrollment history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-01",
        "x-required-privileges" : [ "Read User-Initiated Enrollment" ]
      },
      "post" : {
        "tags" : [ "enrollment" ],
        "summary" : "Add Enrollment history object notes\n",
        "description" : "Adds Enrollment history object notes\n",
        "requestBody" : {
          "description" : "history notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of enrollment history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectHistory"
                }
              }
            }
          },
          "503" : {
            "description" : "Enrollment history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-01",
        "x-required-privileges" : [ "Update User-Initiated Enrollment" ]
      }
    },
    "/v1/enrollment/language-codes" : {
      "get" : {
        "tags" : [ "enrollment" ],
        "summary" : "Retrieve the list of languages and corresponding ISO 639-1 Codes\n",
        "description" : "Retrieves the list of languages and corresponding ISO 639-1 Codes.",
        "responses" : {
          "200" : {
            "description" : "List of languages and corresponding ISO 639-1 Codes.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LanguageCode"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-01",
        "x-required-privileges" : [ "Read User-Initiated Enrollment" ]
      }
    },
    "/v1/enrollment/languages" : {
      "get" : {
        "tags" : [ "enrollment" ],
        "summary" : "Get an array of the language codes that have Enrollment messaging\n",
        "description" : "Returns an array of the language codes that have enrollment messaging currently configured.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/size"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is languageCode:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "languageCode:asc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Found languages matching search params.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProcessTextsSearchResults"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-01",
        "x-required-privileges" : [ "Read User-Initiated Enrollment" ]
      }
    },
    "/v1/enrollment/languages/{language}" : {
      "get" : {
        "tags" : [ "enrollment" ],
        "summary" : "Retrieve the Enrollment messaging for a language\n",
        "description" : "Retrieves the enrollment messaging for a language.",
        "parameters" : [ {
          "name" : "language",
          "in" : "path",
          "description" : "Two letter ISO 639-1 Language Code",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentProcessTextObject"
                }
              }
            }
          },
          "404" : {
            "description" : "Language not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-01",
        "x-required-privileges" : [ "Read User-Initiated Enrollment" ]
      },
      "put" : {
        "tags" : [ "enrollment" ],
        "summary" : "Edit Enrollment messaging for a language\n",
        "description" : "Edit enrollment messaging for a language.",
        "parameters" : [ {
          "name" : "language",
          "in" : "path",
          "description" : "Two letter ISO 639-1 Language Code",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrollmentProcessTextObject"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentProcessTextObject"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-01",
        "x-required-privileges" : [ "Update User-Initiated Enrollment" ]
      },
      "delete" : {
        "tags" : [ "enrollment" ],
        "summary" : "Delete the Enrollment messaging for a language\n",
        "description" : "Delete the enrollment messaging for a language.",
        "parameters" : [ {
          "name" : "language",
          "in" : "path",
          "description" : "Two letter ISO 639-1 Language Code",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful deletetion"
          },
          "404" : {
            "description" : "Language not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-08-01",
        "x-required-privileges" : [ "Update User-Initiated Enrollment" ]
      }
    },
    "/v1/icon" : {
      "post" : {
        "tags" : [ "icon" ],
        "summary" : "Upload an icon\n",
        "description" : "Uploads an icon",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The file to upload",
                    "format" : "binary"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Icon successfully uploaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IconResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Failure, field required: \"file\".",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500" : {
            "description" : "Upload Failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-authentication-required" : true
      }
    },
    "/v1/icon/{id}" : {
      "get" : {
        "tags" : [ "icon" ],
        "summary" : "Get an icon\n",
        "description" : "Get an icon",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the icon",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Succesful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IconResponse"
                }
              }
            }
          }
        },
        "x-authentication-required" : true
      }
    },
    "/v1/inventory-information" : {
      "get" : {
        "tags" : [ "inventory-information" ],
        "summary" : "Get statistics about managed/unmanaged devices and computers in the inventory\n",
        "description" : "Gets statistics about managed/unmanaged devices and computers in the inventory.\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryInformation"
                }
              }
            }
          }
        },
        "x-authentication-required" : true
      }
    },
    "/v1/inventory-preload" : {
      "get" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Return all Inventory Preload records\n",
        "description" : "Returns all Inventory Preload records.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/size"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "id:asc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadRecordSearchResults"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadRecordSearchResults"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-22",
        "x-required-privileges" : [ "Read Inventory Preload Records" ]
      },
      "post" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Create a new Inventory Preload record using JSON or CSV\n",
        "description" : "Create a new Inventory Preload record using JSON or CSV.\nA CSV template can be downloaded from /api/inventory-preload/csv-template.\nSerial number and device type are required. All other fields are optional.\nWhen a matching serial number exists in the Inventory Preload data, the record will be overwritten with the CSV data.\nIf the CSV file contains a new username and an email address is provided, the new user is created in Jamf Pro.\nIf the CSV file contains an existing username, the following user-related fields are updated in Jamf Pro.\nFull Name,\nEmail Address,\nPhone Number,\nPosition.\nThis endpoint does not do full validation of each record in the CSV data.\nTo do full validation, use the /inventory-preload/validate-csv endpoint first.\n",
        "requestBody" : {
          "description" : "Inventory Preload record or records to be created",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InventoryPreloadRecord"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/InventoryPreloadRecord"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadRecord"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-21",
        "x-required-privileges" : [ "Create Inventory Preload Records" ]
      },
      "delete" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Delete all Inventory Preload records\n",
        "description" : "Deletes all Inventory Preload records.",
        "responses" : {
          "204" : {
            "description" : "OK"
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-24",
        "x-required-privileges" : [ "Delete Inventory Preload Records" ]
      }
    },
    "/v1/inventory-preload/csv-template" : {
      "get" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Retrieve the Inventory Preload CSV template\n",
        "description" : "Retrieves the Inventory Preload CSV template.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/csv" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-21",
        "x-required-privileges" : [ "Read Inventory Preload Records" ]
      }
    },
    "/v1/inventory-preload/history" : {
      "get" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Get Inventory Preload history entries\n",
        "description" : "Gets Inventory Preload history entries.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/size"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "date:desc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-24",
        "x-required-privileges" : [ "Read Inventory Preload Records" ]
      },
      "post" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Add Inventory Preload history object notes\n",
        "description" : "Adds Inventory Preload history object notes.",
        "requestBody" : {
          "description" : "History notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of Inventory Preload history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectHistory"
                }
              }
            }
          },
          "503" : {
            "description" : "Inventory Preload history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-24",
        "x-required-privileges" : [ "Update Inventory Preload Records" ]
      }
    },
    "/v1/inventory-preload/validate-csv" : {
      "post" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Validate a given CSV file\n",
        "description" : "Validate a given CSV file.\nSerial number and device type are required. All other fields are optional.\nA CSV template can be downloaded from /api/inventory-preload/csv-template.\n",
        "requestBody" : {
          "description" : "Inventory Preload records to be validated. A CSV template can be downloaded from /api/inventory-preload/csv-template",
          "content" : {
            "text/csv" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadCsvValidationSuccess"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadInvalidCsvResponse"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-21",
        "x-required-privileges" : [ "Create Inventory Preload Records" ],
        "x-action" : true
      }
    },
    "/v1/inventory-preload/{id}" : {
      "get" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Get an Inventory Preload record\n",
        "description" : "Retrieves an Inventory Preload record.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Inventory Preload identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadRecord"
                }
              }
            }
          },
          "404" : {
            "description" : "Inventory Preload record with specified id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-23",
        "x-required-privileges" : [ "Read Inventory Preload Records" ]
      },
      "put" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Update an Inventory Preload record\n",
        "description" : "Updates an Inventory Preload record.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Inventory Preload identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Inventory Preload record to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InventoryPreloadRecord"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadRecord"
                }
              }
            }
          },
          "404" : {
            "description" : "Inventory Preload record with specified id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-23",
        "x-required-privileges" : [ "Update Inventory Preload Records" ]
      },
      "delete" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Delete an Inventory Preload record\n",
        "description" : "Deletes an Inventory Preload record.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Inventory Preload identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Inventory Preload record with specified id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-24",
        "x-required-privileges" : [ "Delete Inventory Preload Records" ]
      }
    },
    "/v1/jamf-connect" : {
      "get" : {
        "tags" : [ "jamf-connect" ],
        "summary" : "Get the Jamf Connect settings that you have access to see\n",
        "description" : "Get the Jamf Connect settings that you have access to see.",
        "responses" : {
          "204" : {
            "description" : "Success, no content."
          },
          "403" : {
            "description" : "Cloud Services Connection has not been established.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Jamf Connect Settings", "Read Jamf Connect Deployments" ]
      }
    },
    "/v1/jamf-connect/config-profiles" : {
      "get" : {
        "tags" : [ "jamf-connect" ],
        "summary" : "Search for config profiles linked to Jamf Connect\n",
        "description" : "Search for config profiles linked to Jamf Connect",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "$ref" : "#/components/parameters/sort"
        }, {
          "$ref" : "#/components/parameters/filter"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkedConnectProfileSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Jamf Connect Deployments" ]
      }
    },
    "/v1/jamf-connect/config-profiles/{id}" : {
      "put" : {
        "tags" : [ "jamf-connect" ],
        "summary" : "Update the way the Jamf Connect app gets updated on computers within scope of the associated configuration profile.\n",
        "description" : "Update the way the Jamf Connect app gets updated on computers within scope of the associated configuration profile.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the UUID of the profile to update",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "24a7bb2a-9871-4895-9009-d1be07ed31b1"
        } ],
        "requestBody" : {
          "description" : "Updatable Jamf Connect Settings",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LinkedConnectProfile"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkedConnectProfile"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Jamf Connect Deployments" ]
      }
    },
    "/v1/jamf-connect/deployments/{id}/tasks" : {
      "get" : {
        "tags" : [ "jamf-connect" ],
        "summary" : "Search for deployment tasks for a config profile linked to Jamf Connect\n",
        "description" : "Search for config profiles linked to Jamf Connect",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the UUID of the Jamf Connect deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "24a7bb2a-9871-4895-9009-d1be07ed31b1"
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "$ref" : "#/components/parameters/sort"
        }, {
          "$ref" : "#/components/parameters/filter"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentTaskSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Jamf Connect Deployments" ]
      }
    },
    "/v1/jamf-connect/deployments/{id}/tasks/retry" : {
      "post" : {
        "tags" : [ "jamf-connect" ],
        "summary" : "Request a retry of Connect install tasks\n",
        "description" : "Request a retry of Connect install tasks\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the UUID of the deployment associated with the retry",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "24a7bb2a-9871-4895-9009-d1be07ed31b1"
        } ],
        "requestBody" : {
          "description" : "task IDs to retry",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success, no content."
          },
          "400" : {
            "description" : "Cloud Services Connection has not been established.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500" : {
            "description" : "Jamf Connect tasks to retry failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Jamf Connect Deployment Retry" ]
      }
    },
    "/v1/jamf-connect/history" : {
      "get" : {
        "tags" : [ "jamf-connect" ],
        "summary" : "Get Jamf Connect history\n",
        "description" : "Get Jamf Connect history\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "$ref" : "#/components/parameters/sort"
        }, {
          "$ref" : "#/components/parameters/filter"
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of Jamf Connect history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Jamf Connect Settings" ]
      },
      "post" : {
        "tags" : [ "jamf-connect" ],
        "summary" : "Add Jamf Connect history notes\n",
        "description" : "Add Jamf Connect history notes\n",
        "requestBody" : {
          "description" : "history notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes to Jamf Connect history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "503" : {
            "description" : "Jamf Connect history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Jamf Connect Settings" ]
      }
    },
    "/v1/jamf-management-framework/redeploy/{id}" : {
      "post" : {
        "tags" : [ "jamf-management-framework" ],
        "summary" : "Redeploy Jamf Management Framework\n",
        "description" : "Redeploys the Jamf Management Framework for enrolled device\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of computer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Command successfully queued to redeploy the Jamf Managment Framework",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedeployJamfManagementFrameworkResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Computer with given id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Send Computer Remote Command to Install Package" ],
        "x-action" : true
      }
    },
    "/v1/jamf-package" : {
      "get" : {
        "tags" : [ "jamf-package" ],
        "summary" : "Get the packages for a given Jamf application\n",
        "description" : "Get the packages for a given Jamf application.",
        "parameters" : [ {
          "name" : "application",
          "in" : "query",
          "description" : "The Jamf Application key. The only supported values are protect and connect.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "protect"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of packages for the given application.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/JamfPackageResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Content. It is possible that there is no application with the given application id. Or Cloud Services Connection has not been established.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Jamf Packages Action" ]
      }
    },
    "/v1/jamf-pro-information" : {
      "get" : {
        "tags" : [ "jamf-pro-information-preview" ],
        "summary" : "Get basic information about the Jamf Pro Server\n",
        "description" : "Preview version of the endpoint. There may still be some breaking changes in the future.\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JamfProInformation"
                }
              }
            }
          }
        },
        "x-authentication-required" : true
      }
    },
    "/v1/jamf-pro-server-url" : {
      "get" : {
        "tags" : [ "jamf-pro-server-url-preview" ],
        "summary" : "Get Jamf Pro Server URL settings\n",
        "description" : "Get Jamf Pro Server URL settings",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JamfProServerUrl"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read JSS URL" ]
      },
      "put" : {
        "tags" : [ "jamf-pro-server-url-preview" ],
        "summary" : "Update Jamf Pro Server URL settings\n",
        "description" : "Update Jamf Pro Server URL settings",
        "requestBody" : {
          "description" : "Jamf Pro Server URL settings object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JamfProServerUrl"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Jamf Pro Server URL settings updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JamfProServerUrl"
                }
              }
            }
          },
          "403" : {
            "description" : "Jamf Pro Server URL is managed by Jamf Cloud",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update JSS URL" ]
      }
    },
    "/v1/jamf-pro-server-url/history" : {
      "get" : {
        "tags" : [ "jamf-pro-server-url-preview" ],
        "summary" : "Get Jamf Pro Server URL settings history\n",
        "description" : "Gets Jamf Pro Server URL settings history",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/size"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "date:desc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of Jamf Pro Server URL settings history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read JSS URL" ]
      },
      "post" : {
        "tags" : [ "jamf-pro-server-url-preview" ],
        "summary" : "Add Jamf Pro Server URL settings history notes\n",
        "description" : "Adds Jamf Pro Server URL settings history notes",
        "requestBody" : {
          "description" : "History notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes to Jamf Pro Server URL settings history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectHistory"
                }
              }
            }
          },
          "403" : {
            "description" : "Jamf Pro Server URL is managed by Jamf Cloud",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "503" : {
            "description" : "Jamf Pro Server URL history does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update JSS URL" ]
      }
    },
    "/v1/jamf-pro-version" : {
      "get" : {
        "tags" : [ "jamf-pro-version" ],
        "summary" : "Return information about the Jamf Pro including the current version\n",
        "description" : "Returns information about the Jamf Pro including the current version.\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JamfProVersion"
                }
              }
            }
          }
        },
        "x-authentication-required" : true
      }
    },
    "/v1/jamf-protect" : {
      "get" : {
        "tags" : [ "jamf-protect" ],
        "summary" : "Jamf Protect integration settings",
        "description" : "Jamf Protect integration settings",
        "responses" : {
          "200" : {
            "description" : "Success.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProtectSettingsResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Cloud Services Connection has not been established.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Protect Integration has not been configured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500" : {
            "description" : "Jamf Pro is not able to establish contact with the Protect API via the SOUP CSA client.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Jamf Protect Settings", "Read Jamf Protect Deployments" ]
      },
      "put" : {
        "tags" : [ "jamf-protect" ],
        "summary" : "Jamf Protect integration settings",
        "description" : "Jamf Protect integration settings",
        "requestBody" : {
          "description" : "Updatable Jamf Protect Settings",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProtectUpdatableSettingsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProtectSettingsResponse"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Jamf Protect Settings" ]
      },
      "delete" : {
        "tags" : [ "jamf-protect" ],
        "summary" : "Delete Jamf Protect API registration.",
        "description" : "Deletes an existing Jamf Protect API registration if present. Jamf Protect API integration will be disabled.",
        "responses" : {
          "204" : {
            "description" : "Success, No Content"
          },
          "500" : {
            "description" : "Error Deleting registration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "400" : {
            "description" : "Cloud Services Connection has not been established.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Jamf Protect Settings" ]
      }
    },
    "/v1/jamf-protect/deployments/{id}/tasks" : {
      "get" : {
        "tags" : [ "jamf-protect" ],
        "summary" : "Search for deployment tasks for a config profile linked to Jamf Protect\n",
        "description" : "Search for config profiles linked to Jamf Protect",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the UUID of the Jamf Protect deployment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "24a7bb2a-9871-4895-9009-d1be07ed31b1"
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "$ref" : "#/components/parameters/sort"
        }, {
          "$ref" : "#/components/parameters/filter"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeploymentTaskSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Jamf Protect Deployments" ]
      }
    },
    "/v1/jamf-protect/deployments/{id}/tasks/retry" : {
      "post" : {
        "tags" : [ "jamf-protect" ],
        "summary" : "Request a retry of Protect install tasks\n",
        "description" : "Request a retry of Protect install tasks\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the UUID of the deployment associated with the retry",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "24a7bb2a-9871-4895-9009-d1be07ed31b1"
        } ],
        "requestBody" : {
          "description" : "task IDs to retry",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success, no content."
          },
          "400" : {
            "description" : "Cloud Services Connection has not been established.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500" : {
            "description" : "Jamf Protect tasks to retry failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Jamf Protect Deployment Retry" ],
        "x-action" : true
      }
    },
    "/v1/jamf-protect/history" : {
      "get" : {
        "tags" : [ "jamf-protect" ],
        "summary" : "Get Jamf Protect history\n",
        "description" : "Get Jamf Protect history\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "$ref" : "#/components/parameters/sort"
        }, {
          "$ref" : "#/components/parameters/filter"
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of Jamf Protect history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Jamf Protect Settings" ]
      },
      "post" : {
        "tags" : [ "jamf-protect" ],
        "summary" : "Add Jamf Protect history notes\n",
        "description" : "Add Jamf Protect history notes\n",
        "requestBody" : {
          "description" : "history notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes to Jamf Protect history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "503" : {
            "description" : "Jamf Protect history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Jamf Protect Settings" ]
      }
    },
    "/v1/jamf-protect/plans" : {
      "get" : {
        "tags" : [ "jamf-protect" ],
        "summary" : "Get all of the previously synced Jamf Protect Plans with information about their associated configuration profile",
        "description" : "Get all of the previously synced Jamf Protect Plans with information about their associated configuration profile",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "$ref" : "#/components/parameters/sort"
        }, {
          "$ref" : "#/components/parameters/filter"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlanSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Jamf Protect Deployments" ]
      }
    },
    "/v1/jamf-protect/plans/sync" : {
      "post" : {
        "tags" : [ "jamf-protect" ],
        "summary" : "Sync Plans with Jamf Protect",
        "description" : "Sync Plans with Jamf Protect. Configuration profiles associated with new plans will be imported to Jamf Pro.",
        "responses" : {
          "204" : {
            "description" : "Success."
          },
          "404" : {
            "description" : "Protect API credentials have not been configured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "400" : {
            "description" : "Cloud Services Connection has not been established.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Jamf Protect Settings" ],
        "x-action" : true
      }
    },
    "/v1/jamf-protect/register" : {
      "post" : {
        "tags" : [ "jamf-protect" ],
        "summary" : "Register a Jamf Protect API configuration with Jamf Pro",
        "description" : "Register a Jamf Protect API configuration with Jamf Pro",
        "requestBody" : {
          "description" : "Jamf Protect API connection information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProtectRegistrationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Successful registration.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProtectSettingsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Cloud Services Connection has not been established.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Jamf Protect Settings" ]
      }
    },
    "/v1/ldap-keystore/verify" : {
      "post" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Validate keystore for Cloud Identity Provider secure connection",
        "description" : "Validate keystore for Cloud Identity Provider secure connection",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloudLdapKeystoreFile"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Keystore verified.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudLdapKeystore"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more invalid parameters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-action" : true,
        "x-required-privileges" : [ "Create LDAP Servers" ]
      }
    },
    "/v1/ldap/groups" : {
      "get" : {
        "tags" : [ "ldap" ],
        "summary" : "Retrieve the configured access groups that contain the text in the search param\n",
        "description" : "Retrieves the configured access groups that contain the text in the searchParam.",
        "parameters" : [ {
          "name" : "q",
          "in" : "query",
          "description" : "Will perform a \"contains\" search on the names of access groups",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "null"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful search.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapGroupSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/ldap/ldap-servers" : {
      "get" : {
        "tags" : [ "ldap" ],
        "summary" : "Retrieve all LDAP Servers.\n",
        "description" : "Retrieves all not migrated, LDAP Servers.",
        "responses" : {
          "200" : {
            "description" : "Successfully completed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LdapServer"
                  }
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/ldap/servers" : {
      "get" : {
        "tags" : [ "ldap" ],
        "summary" : "Retrieve all Servers including LDAP and Cloud Identity Providers.\n",
        "description" : "Retrieve all active Servers including LDAP and Cloud Identity Providers.",
        "responses" : {
          "200" : {
            "description" : "Successfully completed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LdapServer"
                  }
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v1/locales" : {
      "get" : {
        "tags" : [ "locales-preview" ],
        "summary" : "Return locales that can be used in other features\n",
        "description" : "Returns locales that can be used in other features.\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Locale"
                  }
                }
              }
            }
          }
        },
        "x-authentication-required" : false
      }
    },
    "/v1/macos-managed-software-updates/available-updates" : {
      "get" : {
        "tags" : [ "macos-managed-software-updates" ],
        "summary" : "Retrieve available MacOs Managed Software Updates",
        "description" : "Retrieves available MacOs Managed Software Updates",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailableUpdates"
                }
              }
            }
          }
        },
        "x-authentication-required" : true
      }
    },
    "/v1/macos-managed-software-updates/send-updates" : {
      "post" : {
        "tags" : [ "macos-managed-software-updates" ],
        "summary" : "Send MacOs Managed Software Updates",
        "description" : "Sends MacOs Managed Software Updates",
        "requestBody" : {
          "description" : "MacOs Managed Software Update to send",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MacOsManagedSoftwareUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MacOsManagedSoftwareUpdateResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Send Computer Remote Command to Download and Install OS X Update" ],
        "x-action" : true
      }
    },
    "/v1/mdm/commands" : {
      "get" : {
        "tags" : [ "mdm" ],
        "summary" : "Get information about mdm commands made by Jamf Pro.\n",
        "description" : "Get information about mdm commands made by Jamf Pro.",
        "parameters" : [ {
          "name" : "uuids",
          "in" : "query",
          "description" : "A list of the UUIDs of the commands being searched for.  Limited to 40 UUIDs in length.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MdmCommand"
                  }
                }
              }
            }
          },
          "414" : {
            "description" : "Too many UUIDs were provided in the path. The limit is set at a strict 40 UUIDs.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500" : {
            "description" : "Failure, unable to complete lookup.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "View MDM command information in Jamf Pro API" ]
      }
    },
    "/v1/mdm/renew-profile" : {
      "post" : {
        "tags" : [ "mdm" ],
        "summary" : "Renew MDM Profile\n",
        "description" : "Renews the device's MDM Profile, including the device identity certificate within the MDM Profile.\n",
        "requestBody" : {
          "description" : "List of devices' UDIDs to perform MDM profile renewal",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Udids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "The Renew MDM Profile action was queued with APNs for submitted devices. Any device udids returned were unknown and not submitted.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RenewMdmProfileResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Insufficient privileges to perform this action or Renew MDM Profile is not enabled."
          }
        },
        "x-required-privileges" : [ "Send Command to Renew MDM Profile" ],
        "x-action" : true
      }
    },
    "/v1/mobile-device-enrollment-profile/{id}/download-profile" : {
      "get" : {
        "tags" : [ "mobile-device-enrollment-profile" ],
        "summary" : "Retrieve the MDM Enrollment Profile\n",
        "description" : "Retrieve the MDM Enrollment Profile",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "MDM Enrollment Profile identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/x-apple-aspen-config" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "x-required-privileges" : [ "Read Enrollment Profiles" ]
      }
    },
    "/v1/mobile-device-groups" : {
      "get" : {
        "tags" : [ "mobile-device-groups-preview" ],
        "summary" : "Return the list of all Mobile Device Groups\n",
        "description" : "Returns the list of all mobile device groups.\n",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MobileDeviceGroup"
                  }
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Smart Mobile Device Groups", "Read Static Mobile Device Groups" ]
      }
    },
    "/v1/mobile-device-prestages" : {
      "get" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Search for sorted and paged Mobile Device Prestages\n",
        "description" : "Search for sorted and paged mobile device prestages",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/size"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "id:asc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileDevicePrestageSearchResults"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-07",
        "x-required-privileges" : [ "Read Mobile Device PreStage Enrollments" ]
      },
      "post" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Create a Mobile Device Prestage\n",
        "description" : "Create a mobile device prestage",
        "requestBody" : {
          "description" : "Mobile Device Prestage to create. ids defined in this body will be ignored",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MobileDevicePrestage"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mobile Device Prestage was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetMobileDevicePrestage"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-07",
        "x-required-privileges" : [ "Create Mobile Device PreStage Enrollments" ]
      }
    },
    "/v1/mobile-device-prestages/scope" : {
      "get" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Get all Device Scope for all Mobile Device Prestages\n",
        "description" : "Get all device scope for all mobile device prestages",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-07",
        "x-required-privileges" : [ "Read Mobile Device PreStage Enrollments" ]
      }
    },
    "/v1/mobile-device-prestages/sync" : {
      "get" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Get all Prestage sync States for all prestages\n",
        "description" : "Get all prestage sync states for all prestages",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PrestageSyncStatus"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-07",
        "x-required-privileges" : [ "Read Mobile Device PreStage Enrollments" ]
      }
    },
    "/v1/mobile-device-prestages/sync/{id}" : {
      "get" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Get all prestage sync states for a single prestage\n",
        "description" : "Get all prestage sync states for a single prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PrestageSyncStatus"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-07",
        "x-required-privileges" : [ "Read Mobile Device PreStage Enrollments" ]
      }
    },
    "/v1/mobile-device-prestages/sync/{id}/latest" : {
      "get" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Get the latest Sync State for a single Prestage\n",
        "description" : "Get the latest sync state for a single prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageSyncStatus"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-07",
        "x-required-privileges" : [ "Read Mobile Device PreStage Enrollments" ]
      }
    },
    "/v1/mobile-device-prestages/{id}" : {
      "get" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Retrieve a Mobile Device Prestage with the supplied id\n",
        "description" : "Retrieves a Mobile Device Prestage with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetMobileDevicePrestage"
                }
              }
            }
          },
          "404" : {
            "description" : "Mobile Device Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-07",
        "x-required-privileges" : [ "Read Mobile Device PreStage Enrollments" ]
      },
      "put" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Update a Mobile Device Prestage\n",
        "description" : "Updates a Mobile Device Prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Mobile Device Prestage to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PutMobileDevicePrestage"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetMobileDevicePrestage"
                }
              }
            }
          },
          "404" : {
            "description" : "Mobile Device Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "The Mobile Device Prestage was modified by another process. Read the Mobile Device Prestage again for updated changes.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-07",
        "x-required-privileges" : [ "Update Mobile Device PreStage Enrollments" ]
      },
      "delete" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Delete a Mobile Device Prestage with the supplied id\n",
        "description" : "Deletes a Mobile Device Prestage with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-07",
        "x-required-privileges" : [ "Delete Mobile Device PreStage Enrollments" ]
      }
    },
    "/v1/mobile-device-prestages/{id}/attachments" : {
      "get" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Get attachments for a Mobile Device Prestage\n",
        "description" : "Get attachments for a Mobile Device Prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FileAttachment"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Mobile Device Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-07",
        "x-required-privileges" : [ "Read Mobile Device PreStage Enrollments" ]
      },
      "post" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Add an attachment to a Mobile Device Prestage\n",
        "description" : "Add an attachment to a Mobile Device prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Identifier of the Mobile Device Prestage the attachment should be assigned to",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The file to upload",
                    "format" : "binary"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageFileAttachment"
                }
              }
            }
          },
          "404" : {
            "description" : "Mobile Device Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "413" : {
            "description" : "Payload Too Large",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-07",
        "x-required-privileges" : [ "Create Mobile Device PreStage Enrollments" ]
      },
      "delete" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Remove an attachment for a Mobile Device Prestage\n",
        "description" : "Remove an attachment for a Mobile Device Prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FileAttachmentDelete"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-07",
        "x-required-privileges" : [ "Delete Mobile Device PreStage Enrollments" ]
      }
    },
    "/v1/mobile-device-prestages/{id}/history" : {
      "get" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Get sorted and paged Mobile Device Prestage history objects\n",
        "description" : "Gets sorted and paged mobile device prestage history objects",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/size"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "date:desc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of mobile device prestage history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-07",
        "x-required-privileges" : [ "Read Mobile Device PreStage Enrollments" ]
      },
      "post" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Add Mobile Device Prestage history object notes\n",
        "description" : "Adds mobile device prestage history object notes",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "History notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of mobile deivce prestage history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectHistory"
                }
              }
            }
          },
          "503" : {
            "description" : "Mobile device prestage history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-07",
        "x-required-privileges" : [ "Update Mobile Device PreStage Enrollments" ]
      }
    },
    "/v1/mobile-device-prestages/{id}/scope" : {
      "get" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Get Device Scope for a specific Mobile Device Prestage\n",
        "description" : "Get device scope for a specific mobile device prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScopeResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Mobile Device Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-07",
        "x-required-privileges" : [ "Read Mobile Device PreStage Enrollments" ]
      },
      "put" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Replace Device Scope for a specific Mobile Device Prestage\n",
        "description" : "Replace device scope for a specific mobile device prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Serial Numbers to scope",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrestageScopeUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScopeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more serial numbers are not valid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Mobile Device Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-07",
        "x-required-privileges" : [ "Update Mobile Device PreStage Enrollments" ]
      },
      "post" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Add Device Scope for a specific Mobile Device Prestage\n",
        "description" : "Add device scope for a specific mobile device prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Serial Numbers to scope",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrestageScopeUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScopeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more serial numbers are not valid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Mobile Device Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-07",
        "x-required-privileges" : [ "Update Mobile Device PreStage Enrollments" ]
      },
      "delete" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Remove Device Scope for a specific Mobile Device Prestage\n",
        "description" : "Remove device scope for a specific mobile device prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Serial Numbers to remove from scope",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrestageScopeUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScopeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more serial numbers are not valid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Mobile Device Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-07",
        "x-required-privileges" : [ "Update Mobile Device PreStage Enrollments" ]
      }
    },
    "/v1/mobile-devices" : {
      "get" : {
        "tags" : [ "mobile-devices" ],
        "summary" : "Get Mobile Device objects\n",
        "description" : "Gets Mobile Device objects.\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MobileDevice"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-16",
        "x-required-privileges" : [ "Read Mobile Devices" ]
      }
    },
    "/v1/mobile-devices/{id}" : {
      "get" : {
        "tags" : [ "mobile-devices" ],
        "summary" : "Get Mobile Device\n",
        "description" : "Get MobileDevice",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of mobile device record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Succesful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileDevice"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-16",
        "x-required-privileges" : [ "Read Mobile Devices" ]
      },
      "patch" : {
        "tags" : [ "mobile-devices" ],
        "summary" : "Update fields on a mobile device that are allowed to be modified by users\n",
        "description" : "Updates fields on a mobile device that are allowed to be modified by users.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of mobile device record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateMobileDevice"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Succesful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileDeviceDetails"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-16",
        "x-required-privileges" : [ "Update Mobile Devices" ]
      }
    },
    "/v1/mobile-devices/{id}/detail" : {
      "get" : {
        "tags" : [ "mobile-devices" ],
        "summary" : "Get Mobile Device\n",
        "description" : "Get MobileDevice",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of mobile device record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Succesful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileDeviceDetails"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-16",
        "x-required-privileges" : [ "Read Mobile Devices" ]
      }
    },
    "/v1/mobile-devices/{id}/recalculate-smart-groups" : {
      "post" : {
        "tags" : [ "smart-mobile-device-groups-preview" ],
        "summary" : "Recalculate all smart groups for the given device id and then return count of smart groups that device fall into\n",
        "description" : "Recalculates all smart groups for the given device id and then\nreturns the count of smart groups the device falls into\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of mobile device",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecalculationResults"
                }
              }
            }
          },
          "400" : {
            "description" : "smart group not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-action" : true,
        "x-required-privileges" : [ "Update Smart Mobile Device Groups" ]
      }
    },
    "/v1/notifications" : {
      "get" : {
        "tags" : [ "jamf-pro-notifications" ],
        "summary" : "Get Notifications for user and site\n",
        "description" : "Gets notifications for user and site\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NotificationV1"
                  }
                }
              }
            }
          }
        },
        "x-authentication-required" : true
      }
    },
    "/v1/notifications/{type}/{id}" : {
      "delete" : {
        "tags" : [ "jamf-pro-notifications" ],
        "summary" : "Delete Notifications\n",
        "description" : "Deletes notifications with given type and id.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance ID of the notification",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "path",
          "description" : "type of the notification",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/NotificationType"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Sucessful deletion"
          }
        },
        "x-required-privileges" : [ "Dismiss Notifications" ]
      }
    },
    "/v1/parent-app" : {
      "get" : {
        "tags" : [ "parent-app-preview" ],
        "summary" : "Get the current Jamf Parent app settings\n",
        "description" : "Get the current Jamf Parent app settings\n",
        "responses" : {
          "200" : {
            "description" : "Details of the current Jamf Parent app settings.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ParentApp"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Parent App Settings" ]
      },
      "put" : {
        "tags" : [ "parent-app-preview" ],
        "summary" : "Update Jamf Parent app settings\n",
        "description" : "Update Jamf Parent app settings\n",
        "requestBody" : {
          "description" : "Jamf Parent app settings to save.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ParentApp"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Jamf Parent app settings updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ParentApp"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request, could not parse input.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Parent App Settings" ]
      }
    },
    "/v1/parent-app/history" : {
      "get" : {
        "tags" : [ "parent-app-preview" ],
        "summary" : "Get Jamf Parent app settings history\n",
        "description" : "Gets Jamf Parent app settings history\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "$ref" : "#/components/parameters/filter"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "date:desc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of Jamf Parent app settings history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Parent App Settings" ]
      },
      "post" : {
        "tags" : [ "parent-app-preview" ],
        "summary" : "Add Jamf Parent app settings history notes\n",
        "description" : "Adds Jamf Parent app settings history notes\n",
        "requestBody" : {
          "description" : "history notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes to Jamf Parent app settings history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectHistory"
                }
              }
            }
          },
          "503" : {
            "description" : "Jamf Parent app history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Parent App Settings" ]
      }
    },
    "/v1/pki/certificate-authority/active" : {
      "get" : {
        "tags" : [ "certificate-authority" ],
        "summary" : "Returns X.509 details of the active Certificate Authority (CA)",
        "description" : "Returns X.509 details of the active Certificate Authority (CA)",
        "responses" : {
          "200" : {
            "description" : "Successful response displays the details of the active Certificate Authority (CA)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateRecord"
                }
              }
            }
          }
        },
        "x-authentication-required" : false
      }
    },
    "/v1/pki/certificate-authority/active/der" : {
      "get" : {
        "tags" : [ "certificate-authority" ],
        "summary" : "Returns X.509 of active Certificate Authority (CA) in DER format",
        "description" : "Returns X.509 of active Certificate Authority (CA) in DER format",
        "responses" : {
          "200" : {
            "description" : "Successful response returns certificate in DER format",
            "content" : {
              "application/pkix-cert" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        },
        "x-authentication-required" : false
      }
    },
    "/v1/pki/certificate-authority/active/pem" : {
      "get" : {
        "tags" : [ "certificate-authority" ],
        "summary" : "Returns active Certificate Authority (CA) in PEM format",
        "description" : "Returns active Certificate Authority (CA) in PEM format",
        "responses" : {
          "200" : {
            "description" : "Successful response returns certificate in PEM format.",
            "content" : {
              "application/pem-certificate-chain" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        },
        "x-authentication-required" : false
      }
    },
    "/v1/pki/certificate-authority/{id}" : {
      "get" : {
        "tags" : [ "certificate-authority" ],
        "summary" : "Returns X.509 details of Certificate Authority (CA) with provided ID",
        "description" : "Returns X.509 details of Certificate Authority (CA) with provided ID",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "UUID of the Certificate Authority (CA)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response displays the details of the Certificate Authority (CA) with provided ID",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateRecord"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID parameter",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Certificate with that ID does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read PKI" ]
      }
    },
    "/v1/pki/certificate-authority/{id}/der" : {
      "get" : {
        "tags" : [ "certificate-authority" ],
        "summary" : "Returns X.509 current Certificate Authority (CA) with provided ID in DER format",
        "description" : "Returns X.509 current Certificate Authority (CA) with provided ID in DER format",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "UUID of the Certificate Authority (CA)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response returns certificate in DER format",
            "content" : {
              "application/pkix-cert" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID parameter",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Certificate with that ID does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read PKI" ]
      }
    },
    "/v1/pki/certificate-authority/{id}/pem" : {
      "get" : {
        "tags" : [ "certificate-authority" ],
        "summary" : "Returns current Certificate Authority (CA) with provided ID in PEM format",
        "description" : "Returns current Certificate Authority (CA) with provided ID in PEM format",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "UUID of the Certificate Authority (CA)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response returns certificate in PEM format",
            "content" : {
              "application/pem-certificate-chain" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID parameter",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Certificate with that ID does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read PKI" ]
      }
    },
    "/v1/pki/venafi" : {
      "post" : {
        "tags" : [ "venafi-preview" ],
        "summary" : "Create a PKI configuration in Jamf Pro for Venafi\n",
        "description" : "Creates a Venafi PKI configuration in Jamf Pro, which can be used to issue certificates\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenafiCaRecord"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Successful response creates a Venafi PKI configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid attributes for Certificate Authority configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update PKI" ]
      }
    },
    "/v1/pki/venafi/{id}" : {
      "get" : {
        "tags" : [ "venafi-preview" ],
        "summary" : "Retrieve a Venafi PKI configuration from Jamf Pro\n",
        "description" : "Retrieve a Venafi PKI configuration from Jamf Pro\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Venafi configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response returns a Venafi PKI configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenafiCaRecord"
                }
              }
            }
          },
          "404" : {
            "description" : "Certificate Authority not found for Id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read PKI" ]
      },
      "delete" : {
        "tags" : [ "venafi-preview" ],
        "summary" : "Delete a Venafi PKI configuration from Jamf Pro\n",
        "description" : "Delete a Venafi PKI configuration from Jamf Pro\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Venafi configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful response deletes Venafi PKI configuration from Jamf Pro"
          },
          "404" : {
            "description" : "Certificate Authority not found for Id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict deleting target, Venafi PKI configuration still in use on Configuration Profile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update PKI" ]
      },
      "patch" : {
        "tags" : [ "venafi-preview" ],
        "summary" : "Update a Venafi PKI configuration in Jamf Pro\n",
        "description" : "Update a Venafi PKI configuration in Jamf Pro\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Venafi configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VenafiCaRecord"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response returns a Venafi PKI configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenafiCaRecord"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid attributes for Certificate Authority configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Certificate Authority not found for Id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update PKI" ]
      }
    },
    "/v1/pki/venafi/{id}/connection-status" : {
      "get" : {
        "tags" : [ "venafi-preview" ],
        "summary" : "Tests the communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "description" : "Tests the communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Venafi configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully connected to Venafi",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenafiServiceStatus"
                }
              }
            }
          },
          "503" : {
            "description" : "Why we failed to connect",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read PKI" ]
      }
    },
    "/v1/pki/venafi/{id}/dependent-profiles" : {
      "get" : {
        "tags" : [ "venafi-preview" ],
        "summary" : "Get configuration profile data using specified Venafi CA object\n",
        "description" : "Get configuration profile data using specified Venafi CA object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Venafi configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully returns a list of configuration profile data connected to the Venafi CA",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VenafiPkiPayloadRecordSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read PKI" ]
      }
    },
    "/v1/pki/venafi/{id}/history" : {
      "get" : {
        "tags" : [ "venafi-preview" ],
        "summary" : "Get specified Venafi CA history object\n",
        "description" : "Get specified Venafi CA history object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Venafi configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "date:desc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of Venafi CA history was found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified Venafi CA object does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read PKI" ]
      },
      "post" : {
        "tags" : [ "venafi-preview" ],
        "summary" : "Add specified Venafi CA Object Note\n",
        "description" : "Adds specified Venafi CA Object Note\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of department history record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "venafi ca history notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of Venafi CA history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified Venafi CA object does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "503" : {
            "description" : "Venafi CA history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update PKI" ]
      }
    },
    "/v1/pki/venafi/{id}/jamf-public-key" : {
      "get" : {
        "tags" : [ "venafi-preview" ],
        "summary" : "Downloads a certificate used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "description" : "Downloads a certificate for an existing Venafi configuration that can be used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Venafi configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response downloads the certificate",
            "content" : {
              "application/pem-certificate-chain" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "400" : {
            "description" : "Keystore not found for Certificate Authority",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Certificate not found for Id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read PKI" ]
      }
    },
    "/v1/pki/venafi/{id}/jamf-public-key/regenerate" : {
      "post" : {
        "tags" : [ "venafi-preview" ],
        "summary" : "Regenerates a certificate used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "description" : "Regenerates a certificate for an existing Venafi configuration that can be used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Venafi configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful response regenerates the certificate"
          },
          "404" : {
            "description" : "Certificate Authority not found for Id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-action" : true,
        "x-required-privileges" : [ "Update PKI" ]
      }
    },
    "/v1/pki/venafi/{id}/proxy-trust-store" : {
      "get" : {
        "tags" : [ "venafi-preview" ],
        "summary" : "Downloads the PKI Proxy Server public key to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "description" : "Downloads the uploaded PKI Proxy Server public key to do basic TLS certificate validation between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Venafi configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response downloads the certificate",
            "content" : {
              "application/pem-certificate-chain" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "400" : {
            "description" : "Keystore not found for Certificate Authority",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Certificate not found for Certificate Authority",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read PKI" ]
      },
      "post" : {
        "tags" : [ "venafi-preview" ],
        "summary" : "Uploads the PKI Proxy Server public key to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "description" : "Uploads the PKI Proxy Server public key to do basic TLS certificate validation between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Venafi configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/pem-certificate-chain" : {
              "schema" : {
                "type" : "string",
                "format" : "binary"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Successful response replaces or removes public key"
          },
          "400" : {
            "description" : "Keystore not found for Certificate Authority",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Certificate not found for Certificate Authority",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update PKI" ]
      },
      "delete" : {
        "tags" : [ "venafi-preview" ],
        "summary" : "Removes the PKI Proxy Server public key used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "description" : "Removes the uploaded PKI Proxy Server public key to do basic TLS certificate validation between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Venafi configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful removes public key"
          },
          "404" : {
            "description" : "Certificate Authority not found for Id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update PKI" ]
      }
    },
    "/v1/policy-properties" : {
      "get" : {
        "tags" : [ "policies-preview" ],
        "summary" : "Get Policy Properties object\n",
        "description" : "Gets `Policy Properties` object.\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyPropertiesV1"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Policies" ]
      },
      "put" : {
        "tags" : [ "policies-preview" ],
        "summary" : "Update Policy Properties object\n",
        "description" : "Update Policy Properties object\n",
        "requestBody" : {
          "description" : "Policy Properties object to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyPropertiesV1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Policy Properties was updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyPropertiesV1"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Policies" ]
      }
    },
    "/v1/reenrollment" : {
      "get" : {
        "tags" : [ "re-enrollment-preview" ],
        "summary" : "Get Re-enrollment object\n",
        "description" : "Gets Re-enrollment object\n",
        "responses" : {
          "200" : {
            "description" : "Details of Re-enrollment object were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Reenrollment"
                }
              }
            }
          },
          "404" : {
            "description" : "Re-enrollment object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Re-enrollment" ]
      },
      "put" : {
        "tags" : [ "re-enrollment-preview" ],
        "summary" : "Update the Re-enrollment object\n",
        "description" : "Update the Re-enrollment object\n",
        "requestBody" : {
          "description" : "Re-enrollment object to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Reenrollment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Re-enrollment record was updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Reenrollment"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Re-enrollment" ]
      }
    },
    "/v1/reenrollment/history" : {
      "get" : {
        "tags" : [ "re-enrollment-preview" ],
        "summary" : "Get Re-enrollment history object\n",
        "description" : "Gets Re-enrollment history object\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/size"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "date:desc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of re-enrollment history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Re-enrollment" ]
      },
      "post" : {
        "tags" : [ "re-enrollment-preview" ],
        "summary" : "Add specified Re-enrollment history object notes\n",
        "description" : "Adds specified Re-enrollment history object notes\n",
        "requestBody" : {
          "description" : "history notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of re-enrollment history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectHistory"
                }
              }
            }
          },
          "503" : {
            "description" : "Re-enrollment history can not be saved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Re-enrollment" ]
      }
    },
    "/v1/scripts" : {
      "get" : {
        "tags" : [ "scripts" ],
        "summary" : "Search for sorted and paged Scripts\n",
        "description" : "Search for sorted and paged scripts",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Fields allowed in the query: `id`, `name`, `info`, `notes`, `priority`, `categoryId`, `categoryName`, `parameter4` up to `parameter11`, `osRequirements`, `scriptContents`. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "name:asc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter scripts collection. Default search is empty query - returning all results for the requested page. Fields allowed in the query: `id`, `name`, `info`, `notes`, `priority`, `categoryId`, `categoryName`, `parameter4` up to `parameter11`, `osRequirements`, `scriptContents`. This param can be combined with paging and sorting. Example: filter=categoryName==\"Category\" and name==\"*script name*\"",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Found scripts matching search params.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScriptsSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Scripts" ]
      },
      "post" : {
        "tags" : [ "scripts" ],
        "summary" : "Create a Script\n",
        "description" : "Creates a script",
        "requestBody" : {
          "description" : "new script to create. ids defined in this body will be ignored",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Script"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Script created successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Scripts" ]
      }
    },
    "/v1/scripts/{id}" : {
      "get" : {
        "tags" : [ "scripts" ],
        "summary" : "Retrieve a full script object\n",
        "description" : "Retrieves a full script object",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Script object identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Script"
                }
              }
            }
          },
          "404" : {
            "description" : "Script with that ID does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Scripts" ]
      },
      "put" : {
        "tags" : [ "scripts" ],
        "summary" : "Replace the script at the id with the supplied information\n",
        "description" : "Replaces the script at the id with the supplied information",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Script object identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "new script to upload to existing id. ids defined in this body will be ignored",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Script"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Script at id was updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Script"
                }
              }
            }
          },
          "404" : {
            "description" : "Script with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Scripts" ]
      },
      "delete" : {
        "tags" : [ "scripts" ],
        "summary" : "Delete a Script at the specified id\n",
        "description" : "Deletes a script at the specified id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Script object identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful response"
          }
        },
        "x-required-privileges" : [ "Delete Scripts" ]
      }
    },
    "/v1/scripts/{id}/download" : {
      "get" : {
        "tags" : [ "scripts" ],
        "summary" : "Download a text file of the Script contents\n",
        "description" : "Download a text file of the script contents",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of the script to be downloaded",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The script of the specified id",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Scripts" ]
      }
    },
    "/v1/scripts/{id}/history" : {
      "get" : {
        "tags" : [ "scripts" ],
        "summary" : "Get specified Script history object\n",
        "description" : "Gets specified Script history object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of script history record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "date:desc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified script does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Scripts" ]
      },
      "post" : {
        "tags" : [ "scripts" ],
        "summary" : "Add specified Script history object notes\n",
        "description" : "Adds specified Script history object notes\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of script history record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "history notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of script history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectHistory"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified script does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "503" : {
            "description" : "Script history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Scripts" ]
      }
    },
    "/v1/search-mobile-devices" : {
      "post" : {
        "tags" : [ "mobile-devices" ],
        "summary" : "Search Mobile Devices\n",
        "description" : "Search Mobile Devices",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MobileDeviceSearchParams"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Found buildings matching search params.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileDeviceSearchResults"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-deprecation-date" : "2020-04-16",
        "x-required-privileges" : [ "Read Mobile Devices" ]
      }
    },
    "/v1/self-service/branding/ios" : {
      "get" : {
        "tags" : [ "self-service-branding-ios" ],
        "summary" : "Search for sorted and paged iOS branding configurations\n",
        "description" : "Search for sorted and paged iOS branding configurations",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,brandingName:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:asc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IosBrandingSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Self Service Branding Configuration" ]
      },
      "post" : {
        "tags" : [ "self-service-branding-ios" ],
        "summary" : "Create a Self Service iOS branding configuration with the supplied\n",
        "description" : "Create a Self Service iOS branding configuration with the supplied details",
        "requestBody" : {
          "description" : "The iOS branding configuration to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IosBrandingConfiguration"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Self Service Branding Configuration" ]
      }
    },
    "/v1/self-service/branding/ios/{id}" : {
      "get" : {
        "tags" : [ "self-service-branding-ios" ],
        "summary" : "Read a single Self Service iOS branding configuration indicated by the provided id\n",
        "description" : "Read a single Self Service iOS branding configuration indicated by the provided id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of iOS branding configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IosBrandingConfiguration"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Self Service Branding Configuration" ]
      },
      "put" : {
        "tags" : [ "self-service-branding-ios" ],
        "summary" : "Update a Self Service iOS branding configuration with the supplied details\n",
        "description" : "Update a Self Service iOS branding configuration with the supplied details",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of iOS branding configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The iOS branding configuration values to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IosBrandingConfiguration"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IosBrandingConfiguration"
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Self Service Branding Configuration" ]
      },
      "delete" : {
        "tags" : [ "self-service-branding-ios" ],
        "summary" : "Delete the Self Service iOS branding configuration indicated by the provided id\n",
        "description" : "Delete the Self Service iOS branding configuration indicated by the provided id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of iOS branding configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful response"
          },
          "404" : {
            "description" : "Invalid id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Delete Self Service Branding Configuration" ]
      }
    },
    "/v1/self-service/branding/macos" : {
      "get" : {
        "tags" : [ "self-service-branding-macos" ],
        "summary" : "Search for sorted and paged macOS branding configurations\n",
        "description" : "Search for sorted and paged macOS branding configurations",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,brandingName:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:asc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MacOsBrandingSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Self Service Branding Configuration" ]
      },
      "post" : {
        "tags" : [ "self-service-branding-macos" ],
        "summary" : "Create a Self Service macOS branding configuration with the supplied\n",
        "description" : "Create a Self Service macOS branding configuration with the supplied details",
        "requestBody" : {
          "description" : "The macOS branding configuration to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MacOsBrandingConfiguration"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Self Service Branding Configuration" ]
      }
    },
    "/v1/self-service/branding/macos/{id}" : {
      "get" : {
        "tags" : [ "self-service-branding-macos" ],
        "summary" : "Read a single Self Service macOS branding configuration indicated by the provided id\n",
        "description" : "Read a single Self Service macOS branding configuration indicated by the provided id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of macOS branding configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MacOsBrandingConfiguration"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Self Service Branding Configuration" ]
      },
      "put" : {
        "tags" : [ "self-service-branding-macos" ],
        "summary" : "Update a Self Service macOS branding configuration with the supplied details\n",
        "description" : "Update a Self Service macOS branding configuration with the supplied details",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of macOS branding configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The macOS branding configuration values to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MacOsBrandingConfiguration"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MacOsBrandingConfiguration"
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Self Service Branding Configuration" ]
      },
      "delete" : {
        "tags" : [ "self-service-branding-macos" ],
        "summary" : "Delete the Self Service macOS branding configuration indicated by the provided id\n",
        "description" : "Delete the Self Service macOS branding configuration indicated by the provided id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of macOS branding configuration",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful response"
          },
          "404" : {
            "description" : "Invalid id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Delete Self Service Branding Configuration" ]
      }
    },
    "/v1/self-service/settings" : {
      "get" : {
        "tags" : [ "self-service" ],
        "summary" : "Get an object representation of Self Service settings\n",
        "description" : "gets an object representation of Self Service settings\n",
        "responses" : {
          "200" : {
            "description" : "successful GET\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SelfServiceSettings"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Self Service" ]
      },
      "put" : {
        "tags" : [ "self-service" ],
        "summary" : "Put an object representation of Self Service settings\n",
        "description" : "puts an object representation of Self Service settings\n",
        "requestBody" : {
          "description" : "object that contains all editable global fields to alter Self Service settings\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SelfServiceSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful PUT\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SelfServiceSettings"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Self Service" ]
      }
    },
    "/v1/smart-computer-groups/{id}/recalculate" : {
      "post" : {
        "tags" : [ "smart-computer-groups-preview" ],
        "summary" : "Recalculate the smart group for the given id\n",
        "description" : "Recalculates the smart group for the given id and then\nreturns the ids for the computers in the smart group\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of smart group",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecalculationResults"
                }
              }
            }
          },
          "400" : {
            "description" : "smart group not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-action" : true,
        "x-required-privileges" : [ "Update Smart Computer Groups" ]
      }
    },
    "/v1/smart-mobile-device-groups/{id}/recalculate" : {
      "post" : {
        "tags" : [ "smart-mobile-device-groups-preview" ],
        "summary" : "Recalculate a smart group for the given id then return the ids for the devices in the smart group\n",
        "description" : "recalculates a smart group for the given id and then\nreturns the ids for the devices in the smart group\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of smart group",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecalculationResults"
                }
              }
            }
          },
          "400" : {
            "description" : "smart group not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-action" : true,
        "x-required-privileges" : [ "Update Smart Mobile Device Groups" ]
      }
    },
    "/v1/smart-user-groups/{id}/recalculate" : {
      "post" : {
        "tags" : [ "smart-user-groups-preview" ],
        "summary" : "Recalculate the smart group for the given id and then return the ids for the users in the smart group\n",
        "description" : "Recalculates the smart group for the given id and then\nreturns the ids for the users in the smart group\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of smart group",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecalculationResults"
                }
              }
            }
          },
          "400" : {
            "description" : "smart group not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-action" : true,
        "x-required-privileges" : [ "Update Smart User Groups" ]
      }
    },
    "/v1/sso" : {
      "get" : {
        "tags" : [ "sso-settings" ],
        "summary" : "Retrieve the current Single Sign On configuration settings\n",
        "description" : "Retrieves the current Single Sign On configuration settings",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SsoSettings"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read SSO Settings" ]
      },
      "put" : {
        "tags" : [ "sso-settings" ],
        "summary" : "Updates the current Single Sign On configuration settings\n",
        "description" : "Updates the current Single Sign On configuration settings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SsoSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The update was successful and the newly updated object is returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SsoSettings"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Either required fields are missing or there was a validation exception.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update SSO Settings" ]
      }
    },
    "/v1/sso/cert" : {
      "get" : {
        "tags" : [ "sso-certificate-preview" ],
        "summary" : "Retrieve the certificate currently configured for use with SSO\n",
        "description" : "Retrieves the certificate currently configured for use with SSO.",
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SsoKeystoreWithDetails"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read SSO Settings" ]
      },
      "put" : {
        "tags" : [ "sso-certificate-preview" ],
        "summary" : "Update the certificate used by Jamf Pro to sign SSO requests to the identify provider\n",
        "description" : "Update the certificate used by Jamf Pro to sign SSO requests to the identify provider.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SsoKeystore"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully changed the keystore.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SsoKeystoreWithDetails"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more parameters were invalid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update SSO Settings" ]
      },
      "post" : {
        "tags" : [ "sso-certificate-preview" ],
        "summary" : "Jamf Pro will generate a new certificate and use it to sign SSO\n",
        "description" : "Jamf Pro will generate a new certificate and use it to sign SSO requests to the identity provider.",
        "responses" : {
          "200" : {
            "description" : "Newly generated will be set and returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SsoKeystoreWithDetails"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update SSO Settings" ],
        "x-action" : true
      },
      "delete" : {
        "tags" : [ "sso-certificate-preview" ],
        "summary" : "Delete the currently configured certificate used by SSO\n",
        "description" : "Deletes the currently configured certificate used by SSO.",
        "responses" : {
          "204" : {
            "description" : "Operation successful."
          }
        },
        "x-required-privileges" : [ "Update SSO Settings" ]
      }
    },
    "/v1/sso/cert/download" : {
      "get" : {
        "tags" : [ "sso-certificate-preview" ],
        "summary" : "Download the certificate currently configured for use with Jamf Pro's SSO configuration\n",
        "description" : "Downloads the certificate currently configured for use with Jamf Pro's SSO configuration",
        "responses" : {
          "200" : {
            "description" : "Request successful",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read SSO Settings" ]
      }
    },
    "/v1/sso/cert/parse" : {
      "post" : {
        "tags" : [ "sso-certificate-preview" ],
        "summary" : "Parse the certificate to get details about certificate type and keys needed to upload certificate file\n",
        "description" : "Parse the certificate to get details about certificate type and keys needed to upload certificate file.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SsoKeystoreParse"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully parsed the certificate.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SsoKeystoreCertParseResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more parameters were invalid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-action" : true,
        "x-required-privileges" : [ "Update SSO Settings" ]
      }
    },
    "/v1/sso/dependencies" : {
      "get" : {
        "tags" : [ "sso-settings" ],
        "summary" : "Retrieve the list of Enrollment Customizations using SSO\n",
        "description" : "Retrieves the list of Enrollment Customizations using SSO",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentCustomizationDependencies"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read SSO Settings" ]
      }
    },
    "/v1/sso/disable" : {
      "post" : {
        "tags" : [ "sso-settings" ],
        "summary" : "Disable SSO\n",
        "description" : "Disable SSO",
        "responses" : {
          "202" : {
            "description" : "SSO has been disabled"
          },
          "400" : {
            "description" : "SSO object don't exist or is already disabled"
          }
        },
        "x-required-privileges" : [ "Update SSO Settings" ],
        "x-action" : true
      }
    },
    "/v1/sso/history" : {
      "get" : {
        "tags" : [ "sso-settings" ],
        "summary" : "Get SSO history object\n",
        "description" : "Gets SSO history object\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:desc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of SSO history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read SSO Settings" ]
      },
      "post" : {
        "tags" : [ "sso-settings" ],
        "summary" : "Add SSO history object notes\n",
        "description" : "Adds SSO history object notes",
        "requestBody" : {
          "description" : "history notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of SSO history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "503" : {
            "description" : "SSO object history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update SSO Settings" ]
      }
    },
    "/v1/sso/metadata/download" : {
      "get" : {
        "tags" : [ "sso-settings" ],
        "summary" : "Download the Jamf Pro SAML metadata file\n",
        "description" : "Download the Jamf Pro SAML metadata file",
        "responses" : {
          "200" : {
            "description" : "Successful resposne",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read SSO Settings" ]
      }
    },
    "/v1/sso/validate" : {
      "post" : {
        "tags" : [ "sso-settings" ],
        "summary" : "Endpoint for validation of a saml metadata url\n",
        "description" : "Validation of a content available under provided metadata URL.",
        "requestBody" : {
          "description" : "url to validate",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SsoMetadataUrl"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "valid metadata url"
          },
          "400" : {
            "description" : "provided metadata URL is not valid"
          }
        },
        "x-required-privileges" : [ "Update SSO Settings" ],
        "x-action" : true
      }
    },
    "/v1/static-user-groups" : {
      "get" : {
        "tags" : [ "static-user-groups-preview" ],
        "summary" : "Return a list of all Static User Groups\n",
        "description" : "Returns a list of all static user groups.\n",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StaticUserGroup"
                  }
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Static User Groups" ]
      }
    },
    "/v1/static-user-groups/{id}" : {
      "get" : {
        "tags" : [ "static-user-groups-preview" ],
        "summary" : "Return a specific Static User Group by id\n",
        "description" : "Returns a specific static user group by id.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Instance id of static user group record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StaticUserGroup"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified static user group object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Static User Groups" ]
      }
    },
    "/v1/supervision-identities" : {
      "get" : {
        "tags" : [ "supervision-identities-preview" ],
        "summary" : "Search for sorted and paged Supervision Identities\n",
        "description" : "Search for sorted and paged supervision identities",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/size"
        }, {
          "$ref" : "#/components/parameters/pagesize"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "id:asc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupervisionIdentitySearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Apple Configurator Enrollment" ]
      },
      "post" : {
        "tags" : [ "supervision-identities-preview" ],
        "summary" : "Create a Supervision Identity for the supplied information\n",
        "description" : "Creates a Supervision Identity for the supplied information",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SupervisionIdentityCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupervisionIdentity"
                }
              }
            }
          },
          "500" : {
            "description" : "Something went wrong",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Apple Configurator Enrollment" ]
      }
    },
    "/v1/supervision-identities/upload" : {
      "post" : {
        "tags" : [ "supervision-identities-preview" ],
        "summary" : "Upload the Supervision Identity .p12 file\n",
        "description" : "Uploads the Supervision Identity .p12 file",
        "requestBody" : {
          "description" : "The base 64 encoded .p12 file alone with other needed information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SupervisionIdentityCertificateUpload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupervisionIdentity"
                }
              }
            }
          },
          "500" : {
            "description" : "Something went wrong",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Apple Configurator Enrollment" ],
        "x-action" : true
      }
    },
    "/v1/supervision-identities/{id}" : {
      "get" : {
        "tags" : [ "supervision-identities-preview" ],
        "summary" : "Retrieve a Supervision Identity with the supplied id\n",
        "description" : "Retrieves a Supervision Identity with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Supervision Identity identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupervisionIdentity"
                }
              }
            }
          },
          "404" : {
            "description" : "Supervision Identity with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Apple Configurator Enrollment" ]
      },
      "put" : {
        "tags" : [ "supervision-identities-preview" ],
        "summary" : "Update a Supervision Identity with the supplied information\n",
        "description" : "Updates a Supervision Identity with the supplied information",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Supervision Identity identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SupervisionIdentityUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupervisionIdentity"
                }
              }
            }
          },
          "404" : {
            "description" : "Supervision Identity with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500" : {
            "description" : "Something went wrong",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Apple Configurator Enrollment" ]
      },
      "delete" : {
        "tags" : [ "supervision-identities-preview" ],
        "summary" : "Delete a Supervision Identity with the supplied id\n",
        "description" : "Deletes a Supervision Identity with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Supervision Identity identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "Supervision Identity with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Apple Configurator Enrollment" ]
      }
    },
    "/v1/supervision-identities/{id}/download" : {
      "get" : {
        "tags" : [ "supervision-identities-preview" ],
        "summary" : "Download the Supervision Identity .p12 file\n",
        "description" : "Download the Supervision Identity .p12 file",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Supervision Identity identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Apple Configurator Enrollment" ]
      }
    },
    "/v1/system/initialize" : {
      "post" : {
        "tags" : [ "jamf-pro-initialization" ],
        "summary" : "Set up fresh installed Jamf Pro Server\n",
        "description" : "Set up fresh installed Jamf Pro Server\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InitializeV1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Jamf Pro Server has been initialized"
          },
          "400" : {
            "description" : "The following are codes returned by this call:\nINVALID_ACTIVATION_CODE - activation code provided is not valid or is expired\nINVALID_STATE - The system is in an invalid state to be initialized.\nFIELD_REQUIRED - A required field was not provided.  The field name will be provided on the response.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-authentication-required" : false,
        "x-action" : true
      }
    },
    "/v1/system/initialize-database-connection" : {
      "post" : {
        "tags" : [ "jamf-pro-initialization" ],
        "summary" : "Provide Database Password during startup\n",
        "description" : "Provide database password during startup. Endpoint is accessible when database password was not configured and Jamf Pro server has not been initialized yet.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DatabasePassword"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Incorrect database password.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429" : {
            "description" : "Limit of requests per second was exceeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-authentication-required" : false,
        "x-action" : true
      }
    },
    "/v1/teacher-app" : {
      "get" : {
        "tags" : [ "teacher-app" ],
        "summary" : "Get the Jamf Teacher settings that you have access to see\n",
        "description" : "Get the Jamf Teacher settings that you have access to see.",
        "responses" : {
          "200" : {
            "description" : "List of Jamf Teacher settings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeacherSettingsResponse"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Teacher App Settings" ]
      },
      "put" : {
        "tags" : [ "teacher-app" ],
        "summary" : "Update a Jamf Teacher settings object\n",
        "description" : "Update a Jamf Teacher settings object.",
        "requestBody" : {
          "description" : "Teacher settings to create.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TeacherSettingsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated Jamf Teacher settings.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeacherSettingsResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Update Failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Teacher App Settings" ]
      }
    },
    "/v1/teacher-app/history" : {
      "get" : {
        "tags" : [ "teacher-app" ],
        "summary" : "Get Jamf Teacher app settings history\n",
        "description" : "Gets Jamf Teacher app settings history\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "$ref" : "#/components/parameters/sort"
        }, {
          "$ref" : "#/components/parameters/filter"
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of Jamf Teacher app settings history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Teacher App Settings" ]
      },
      "post" : {
        "tags" : [ "teacher-app" ],
        "summary" : "Add Jamf Teacher app settings history notes\n",
        "description" : "Adds Jamf Teacher app settings history notes\n",
        "requestBody" : {
          "description" : "history notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes to Jamf Teacher app settings history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "503" : {
            "description" : "Jamf Teacher app history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Teacher App Settings" ]
      }
    },
    "/v1/time-zones" : {
      "get" : {
        "tags" : [ "time-zones-preview" ],
        "summary" : "Return information about the currently supported Time Zones\n",
        "description" : "Returns information about the currently supported time zones\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TimeZone"
                  }
                }
              }
            }
          }
        },
        "x-authentication-required" : false
      }
    },
    "/v1/user/preferences/{keyId}" : {
      "get" : {
        "tags" : [ "jamf-pro-user-account-settings" ],
        "summary" : "Get the user setting for the authenticated user and key\n",
        "description" : "Gets the user setting for the authenticated user and key.\n",
        "parameters" : [ {
          "name" : "keyId",
          "in" : "path",
          "description" : "user setting to be retrieved",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPreferencesJson"
                }
              }
            }
          }
        },
        "x-authentication-required" : true
      },
      "put" : {
        "tags" : [ "jamf-pro-user-account-settings" ],
        "summary" : "Persist the user setting\n",
        "description" : "Persists the user setting\n",
        "parameters" : [ {
          "name" : "keyId",
          "in" : "path",
          "description" : "unique key of user setting to be persisted",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "user setting value to be persisted",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "setting sucessfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPreferencesJson"
                }
              }
            }
          }
        },
        "x-authentication-required" : true
      },
      "delete" : {
        "tags" : [ "jamf-pro-user-account-settings" ],
        "summary" : "Remove specified setting for authenticated user\n",
        "description" : "Remove specified setting for authenticated user\n",
        "parameters" : [ {
          "name" : "keyId",
          "in" : "path",
          "description" : "unique key of user setting to be persisted",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "setting was deleted"
          }
        },
        "x-authentication-required" : true
      }
    },
    "/v1/users/{id}/recalculate-smart-groups" : {
      "post" : {
        "tags" : [ "smart-user-groups-preview" ],
        "summary" : "Recalculate a smart group for the given user id and then return the count of smart groups the user falls into\n",
        "description" : "Recalculates a smart group for the given user id and then\nreturns the count of smart groups the user falls into\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of user",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecalculationResults"
                }
              }
            }
          },
          "400" : {
            "description" : "smart group not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-action" : true,
        "x-required-privileges" : [ "Update Smart User Groups" ]
      }
    },
    "/v1/volume-purchasing-locations" : {
      "get" : {
        "tags" : [ "volume-purchasing-locations" ],
        "summary" : "Retrieve Volume Purchasing Locations",
        "description" : "Retrieves Volume Purchasing Locations",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:asc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter Volume Purchasing Location collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name, appleId, organizationName, tokenExpiration, countryCode, locationName, automaticallyPopulatePurchasedContent, and sendNotificationWhenNoLongerAssigned. This param can be combined with paging and sorting.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VolumePurchasingLocations"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Volume Purchasing Administrator Accounts" ]
      },
      "post" : {
        "tags" : [ "volume-purchasing-locations" ],
        "summary" : "Create a Volume Purchasing Location",
        "description" : "Creates a Volume Purchasing Location using an sToken",
        "requestBody" : {
          "description" : "Volume Purchasing Location to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VolumePurchasingLocationPost"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Volume Purchasing Location was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Volume Purchasing Administrator Accounts" ]
      }
    },
    "/v1/volume-purchasing-locations/{id}" : {
      "get" : {
        "tags" : [ "volume-purchasing-locations" ],
        "summary" : "Retrieve a Volume Purchasing Location with the supplied id",
        "description" : "Retrieves a Volume Purchasing Location with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Volume Purchasing Location identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VolumePurchasingLocation"
                }
              }
            }
          },
          "404" : {
            "description" : "Volume Purchasing Location with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Volume Purchasing Administrator Accounts" ]
      },
      "delete" : {
        "tags" : [ "volume-purchasing-locations" ],
        "summary" : "Delete a Volume Purchasing Location with the supplied id",
        "description" : "Deletes a Volume Purchasing Location with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Volume Purchasing Location identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "Specified Volume Purchasing Location object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Delete Volume Purchasing Administrator Accounts" ]
      },
      "patch" : {
        "tags" : [ "volume-purchasing-locations" ],
        "summary" : "Update a Volume Purchasing Location",
        "description" : "Updates a Volume Purchasing Location",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Volume Purchasing Location identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Volume Purchasing Location to update",
          "content" : {
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VolumePurchasingLocationPatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VolumePurchasingLocation"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Volume Purchasing Location with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "422" : {
            "description" : "There was an error applying the patch",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Volume Purchasing Administrator Accounts" ]
      }
    },
    "/v1/volume-purchasing-locations/{id}/history" : {
      "get" : {
        "tags" : [ "volume-purchasing-locations" ],
        "summary" : "Get specified Volume Purchasing Location history object\n",
        "description" : "Gets specified Volume Purchasing Location history object\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of Volume Purchasing Location history record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "date:desc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of Volume Purchasing Location history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified Volume Purchasing Location object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Volume Purchasing Administrator Accounts" ]
      }
    },
    "/v1/volume-purchasing-locations/{id}/reclaim" : {
      "post" : {
        "tags" : [ "volume-purchasing-locations" ],
        "summary" : "Reclaim a Volume Purchasing Location with the supplied id",
        "description" : "Reclaims a Volume Purchasing Location with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Volume Purchasing Location identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Request accepted"
          }
        },
        "x-required-privileges" : [ "Update Volume Purchasing Administrator Accounts" ],
        "x-action" : true
      }
    },
    "/v1/volume-purchasing-locations/{id}/revoke-licenses" : {
      "post" : {
        "tags" : [ "volume-purchasing-locations" ],
        "summary" : "Revoke licenses for a Volume Purchasing Location with the supplied id",
        "description" : "Revokes licenses for a Volume Purchasing Location with the supplied id. The licenses must be revokable - any asset whose licenses are irrevocable will not be revoked.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Volume Purchasing Location identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Request accepted"
          },
          "404" : {
            "description" : "Volume Purchasing Location with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Volume Purchasing Administrator Accounts" ],
        "x-action" : true
      }
    },
    "/v1/volume-purchasing-subscriptions" : {
      "get" : {
        "tags" : [ "volume-purchasing-subscriptions" ],
        "summary" : "Retrieve Volume Purchasing Subscriptions",
        "description" : "Retrieves Volume Purchasing Subscriptions",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Allowable properties are id, name, and enabled.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:asc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VolumePurchasingSubscriptions"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Volume Purchasing Administrator Accounts" ]
      },
      "post" : {
        "tags" : [ "volume-purchasing-subscriptions" ],
        "summary" : "Create a Volume Purchasing Subscription",
        "description" : "Creates a Volume Purchasing Subscription",
        "requestBody" : {
          "description" : "Volume Purchasing Subscription to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VolumePurchasingSubscriptionBase"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Volume Purchasing Subscription was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500" : {
            "description" : "Failed to create volume purchasing subscription",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Volume Purchasing Administrator Accounts" ]
      }
    },
    "/v1/volume-purchasing-subscriptions/{id}" : {
      "get" : {
        "tags" : [ "volume-purchasing-subscriptions" ],
        "summary" : "Retrieve a Volume Purchasing Subscription with the supplied id",
        "description" : "Retrieves a Volume Purchasing Subscription with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Volume Purchasing Subscription identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VolumePurchasingSubscription"
                }
              }
            }
          },
          "404" : {
            "description" : "Volume Purchasing Subscription with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Volume Purchasing Administrator Accounts" ]
      },
      "put" : {
        "tags" : [ "volume-purchasing-subscriptions" ],
        "summary" : "Update a Volume Purchasing Subscription",
        "description" : "Updates a Volume Purchasing Subscription",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Volume Purchasing Subscription identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Volume Purchasing Subscription to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VolumePurchasingSubscriptionBase"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VolumePurchasingSubscription"
                }
              }
            }
          },
          "404" : {
            "description" : "Volume Purchasing Subscription with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500" : {
            "description" : "Failed to update volume purchasing subscription",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Volume Purchasing Administrator Accounts" ]
      },
      "delete" : {
        "tags" : [ "volume-purchasing-subscriptions" ],
        "summary" : "Delete a Volume Purchasing Subscription with the supplied id",
        "description" : "Deletes a Volume Purchasing Subscription with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Volume Purchasing Subscription identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "VPP Subscription with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Delete Volume Purchasing Administrator Accounts" ]
      }
    },
    "/v2/check-in" : {
      "get" : {
        "tags" : [ "client-check-in" ],
        "summary" : "Get Client Check-In settings\n",
        "description" : "Gets `Client Check-In` object.\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClientCheckInV2"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-required-privileges" : [ "Read Computer Check-In" ],
        "x-deprecation-date" : "2021-07-15"
      },
      "put" : {
        "tags" : [ "client-check-in" ],
        "summary" : "Update Client Check-In object\n",
        "description" : "Update Client Check-In object\n",
        "requestBody" : {
          "description" : "Client Check-In object to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClientCheckInV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Client Check-In was updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClientCheckInV2"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-required-privileges" : [ "Update Computer Check-In" ],
        "x-deprecation-date" : "2021-07-15"
      }
    },
    "/v2/check-in/history" : {
      "get" : {
        "tags" : [ "client-check-in" ],
        "summary" : "Get Client Check-In history object\n",
        "description" : "Gets Client Check-In history object\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,username:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "example" : [ "date:desc" ],
            "items" : {
              "type" : "string"
            },
            "default" : [ "date:desc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of Client Check-In history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResultsV1"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-required-privileges" : [ "Read Computer Check-In" ],
        "x-deprecation-date" : "2021-07-15"
      },
      "post" : {
        "tags" : [ "client-check-in" ],
        "summary" : "Add a Note to Client Check-In History\n",
        "description" : "Adds Client Check-In history object notes\n",
        "requestBody" : {
          "description" : "history notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of Client Check-In history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "503" : {
            "description" : "Client Check-In history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-required-privileges" : [ "Update Computer Check-In" ],
        "x-deprecation-date" : "2021-07-15"
      }
    },
    "/v2/cloud-ldaps" : {
      "post" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Create Cloud Identity Provider configuration",
        "description" : "Create new Cloud Identity Provider configuration with unique display name. If mappings not provided, then defaults will be generated instead.",
        "requestBody" : {
          "description" : "Cloud Identity Provider configuration to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LdapConfigurationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Cloud Identity Provider configuration created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Cloud Identity Provider configuration cannot be saved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create LDAP Servers" ]
      }
    },
    "/v2/cloud-ldaps/defaults/{provider}/mappings" : {
      "get" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Get default mappings",
        "description" : "Get default mappings for Cloud Identity Provider Provider.",
        "parameters" : [ {
          "name" : "provider",
          "in" : "path",
          "description" : "Cloud Identity Provider name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "google"
        } ],
        "responses" : {
          "200" : {
            "description" : "Default mappings returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudLdapMappingsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Files cannot be loaded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "The provider name in the URL is invalid or not supported.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v2/cloud-ldaps/defaults/{provider}/server-configuration" : {
      "get" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Get default server configuration",
        "description" : "Get default server configuration for Cloud Identity Provider Identity Provider.",
        "parameters" : [ {
          "name" : "provider",
          "in" : "path",
          "description" : "Cloud Identity Provider name",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "google"
        } ],
        "responses" : {
          "200" : {
            "description" : "Default server configuration returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudLdapServerResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Default server configuration cannot be loaded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "The provider name in the URL is invalid or not supported.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v2/cloud-ldaps/{id}" : {
      "get" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Get Cloud Identity Provider configuration with given id.",
        "description" : "Get Cloud Identity Provider configuration with given id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider configuration returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapConfigurationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Id can only be a number.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified Cloud Identity Provider configuration does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      },
      "put" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Update Cloud Identity Provider configuration",
        "description" : "Update Cloud Identity Provider configuration. Cannot be used for partial updates, all content body must be sent.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Cloud Identity Provider configuration to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LdapConfigurationUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider configuration updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapConfigurationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more parameters were invalid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Cloud Identity Provider configuration does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "The request URL configuration id value does not match the id value in the request body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update LDAP Servers" ]
      },
      "delete" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Delete Cloud Identity Provider configuration.",
        "description" : "Delete Cloud Identity Provider configuration.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Cloud Identity Provider configuration deleted."
          },
          "400" : {
            "description" : "Id can only be a number.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Cloud Identity Provider configuration does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Delete LDAP Servers" ]
      }
    },
    "/v2/cloud-ldaps/{id}/connection/bind" : {
      "get" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Get bind connection pool statistics",
        "description" : "Get all search connection pool for chosen Cloud Identity Provider.\nnumConnectionsClosedDefunct - The number of connections that have been closed as defunct.\nnumConnectionsClosedExpired - The number of connections that have been closed because they were expired.\nnumConnectionsClosedUnneeded - The number of connections that have been closed because they were no longer needed.\nnumFailedCheckouts - The number of failed attempts to check out a connection from the pool.\nnumFailedConnectionAttempts - The number of failed attempts to create a connection for use in the pool.\nnumReleasedValid - The number of valid connections released back to the pool.\nnumSuccessfulCheckouts - The number of successful attempts to check out a connection from the pool.\nnumSuccessfulCheckoutsNewConnection - The number of successful checkout attempts that had to create a new connection because none were available.\nnumSuccessfulConnectionAttempts - The number successful attempts to create a connection for use in the pool.\nmaximumAvailableConnections - The maximum number of connections that may be available in the pool at any time.\nnumSuccessfulCheckoutsWithoutWait - The number of successful checkout attempts that were able to take an existing connection without waiting.\nnumSuccessfulCheckoutsAfterWait - The number of successful checkout attempts that retrieved a connection from the pool after waiting for it to become available.\nnumAvailableConnections - The number of connections currently available for use in the pool.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider bind connection pool statistics returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudLdapConnectionPoolStatistics"
                }
              }
            }
          },
          "400" : {
            "description" : "Bind connection pool statistics data is not available.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Cloud Identity Provider bind connection pool statistics does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v2/cloud-ldaps/{id}/connection/search" : {
      "get" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Get search connection pool statistics",
        "description" : "Get all search connection pool for chosen Cloud Identity Provider.\nnumConnectionsClosedDefunct - The number of connections that have been closed as defunct.\nnumConnectionsClosedExpired - The number of connections that have been closed because they were expired.\nnumConnectionsClosedUnneeded - The number of connections that have been closed because they were no longer needed.\nnumFailedCheckouts - The number of failed attempts to check out a connection from the pool.\nnumFailedConnectionAttempts - The number of failed attempts to create a connection for use in the pool.\nnumReleasedValid - The number of valid connections released back to the pool.\nnumSuccessfulCheckouts - The number of successful attempts to check out a connection from the pool.\nnumSuccessfulCheckoutsNewConnection - The number of successful checkout attempts that had to create a new connection because none were available.\nnumSuccessfulConnectionAttempts - The number successful attempts to create a connection for use in the pool.\nmaximumAvailableConnections - The maximum number of connections that may be available in the pool at any time.\nnumSuccessfulCheckoutsWithoutWait - The number of successful checkout attempts that were able to take an existing connection without waiting.\nnumSuccessfulCheckoutsAfterWait - The number of successful checkout attempts that retrieved a connection from the pool after waiting for it to become available.\nnumAvailableConnections - The number of connections currently available for use in the pool.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider search connection pool statistics returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudLdapConnectionPoolStatistics"
                }
              }
            }
          },
          "400" : {
            "description" : "Search connection pool statistics data is not available.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Cloud Identity Provider search connection pool statistics does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v2/cloud-ldaps/{id}/connection/status" : {
      "get" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Tests the communication with the specified cloud connection\n",
        "description" : "Tests the communication with the specified cloud connection\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully connected to the specified cloud connection",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudLdapConnectionStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more parameters were invalid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Cloud Identity Provider does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      }
    },
    "/v2/cloud-ldaps/{id}/mappings" : {
      "get" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Get mappings configurations for Cloud Identity Providers server configuration.",
        "description" : "Get all mappings configurations for Cloud Identity Providers server configuration.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider mappings configuration returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudLdapMappingsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Id can only be a number.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified mappings settings for Cloud Identity Provider configuration do not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read LDAP Servers" ]
      },
      "put" : {
        "tags" : [ "cloud-ldap" ],
        "summary" : "Update Cloud Identity Provider mappings configuration.",
        "description" : "Update Cloud Identity Provider mappings configuration. Cannot be used for partial updates, all content body must be sent.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Cloud Identity Provider identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Cloud Identity Provider mappings to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloudLdapMappingsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Cloud Identity Provider mappings configuration updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudLdapMappingsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more parameters were invalid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified Cloud Identity Provider configuration does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "Cloud Identity Provider id from request path do not match id in request body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update LDAP Servers" ]
      }
    },
    "/v2/computer-prestages" : {
      "get" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Get sorted and paged Computer Prestages\n",
        "description" : "Gets sorted and paged computer prestages",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:desc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ComputerPrestageSearchResultsV2"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Computer PreStage Enrollments" ]
      },
      "post" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Create a Computer Prestage\n",
        "description" : "Create a computer prestage",
        "requestBody" : {
          "description" : "Computer Prestage to create. ids defined in this body will be ignored",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostComputerPrestageV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Computer Prestage was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Computer PreStage Enrollments" ]
      }
    },
    "/v2/computer-prestages/scope" : {
      "get" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Get all device Scope for all Computer Prestages\n",
        "description" : "Get all device scope for all computer prestages",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScopeV2"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Computer PreStage Enrollments" ]
      }
    },
    "/v2/computer-prestages/{id}" : {
      "get" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Retrieve a Computer Prestage with the supplied id\n",
        "description" : "Retrieves a Computer Prestage with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Computer Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetComputerPrestageV2"
                }
              }
            }
          },
          "404" : {
            "description" : "Computer Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Computer PreStage Enrollments" ]
      },
      "put" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Update a Computer Prestage\n",
        "description" : "Updates a Computer Prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Computer Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Computer Prestage to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PutComputerPrestageV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetComputerPrestageV2"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Computer Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "The Computer Prestage was modified by another process. Read the Computer Prestage again for updated changes.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Computer PreStage Enrollments" ]
      },
      "delete" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Delete a Computer Prestage with the supplied id\n",
        "description" : "Deletes a Computer Prestage with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Computer Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        },
        "x-required-privileges" : [ "Delete Computer PreStage Enrollments" ]
      }
    },
    "/v2/computer-prestages/{id}/scope" : {
      "get" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Get device Scope for a specific Computer Prestage\n",
        "description" : "Get device scope for a specific computer prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Computer Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScopeResponseV2"
                }
              }
            }
          },
          "404" : {
            "description" : "Computer Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Computer PreStage Enrollments" ],
        "x-action" : true
      },
      "put" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Replace device Scope for a specific Computer Prestage\n",
        "description" : "Replace device scope for a specific computer prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Computer Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Serial Numbers to scope",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrestageScopeUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScopeResponseV2"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more serial numbers are not valid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Computer Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Computer PreStage Enrollments" ]
      },
      "post" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Add device Scope for a specific Computer Prestage\n",
        "description" : "Add device scope for a specific computer prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Computer Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Serial Numbers to scope",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrestageScopeUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScopeResponseV2"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more serial numbers are not valid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Computer Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Computer PreStage Enrollments" ],
        "x-action" : true
      }
    },
    "/v2/computer-prestages/{id}/scope/delete-multiple" : {
      "post" : {
        "tags" : [ "computer-prestages" ],
        "summary" : "Remove device Scope for a specific Computer Prestage\n",
        "description" : "Remove device scope for a specific computer prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Computer Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Serial Numbers to remove from scope",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrestageScopeUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScopeResponseV2"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more serial numbers are not valid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Computer Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Computer PreStage Enrollments" ],
        "x-action" : true
      }
    },
    "/v2/enrollment" : {
      "get" : {
        "tags" : [ "enrollment" ],
        "summary" : "Get Enrollment object and Re-enrollment settings\n",
        "description" : "Gets Enrollment object and re-enrollment settings. The settings can be altered without providing the existing management password by providing the following value for `managementPassword`:\n`\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff`.\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentSettingsV2"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read User-Initiated Enrollment" ]
      },
      "put" : {
        "tags" : [ "enrollment" ],
        "summary" : "Update Enrollment object\n",
        "description" : "Update enrollment object. Regarding the `developerCertificateIdentity`,\nif this object is omitted, the certificate will not be deleted from Jamf Pro.\nThe `identityKeystore` is the entire cert file as a base64 encoded string. The\n`md5Sum` field is not required in the PUT request, but is calculated and returned\nin the response.\n",
        "requestBody" : {
          "description" : "Update enrollment",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrollmentSettingsV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated enrollment object",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentSettingsV2"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update User-Initiated Enrollment" ]
      }
    },
    "/v2/enrollment-customizations" : {
      "get" : {
        "tags" : [ "enrollment-customization" ],
        "summary" : "Retrieve sorted and paged Enrollment Customizations\n",
        "description" : "Retrieves sorted and paged Enrollment Customizations",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:asc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentCustomizationSearchResultsV2"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Enrollment Customizations" ]
      },
      "post" : {
        "tags" : [ "enrollment-customization" ],
        "summary" : "Create an Enrollment Customization\n",
        "description" : "Create an enrollment customization",
        "requestBody" : {
          "description" : "Enrollment customization to create.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrollmentCustomizationV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Enrollment customization was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Enrollment Customizations" ]
      }
    },
    "/v2/enrollment-customizations/images" : {
      "post" : {
        "tags" : [ "enrollment-customization" ],
        "summary" : "Upload an image",
        "description" : "Uploads an image",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The file to upload",
                    "format" : "binary"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Image successfully uploaded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BrandingImageUrl"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Enrollment Customizations" ]
      }
    },
    "/v2/enrollment-customizations/{id}" : {
      "get" : {
        "tags" : [ "enrollment-customization" ],
        "summary" : "Retrieve an Enrollment Customization with the supplied id\n",
        "description" : "Retrieves an Enrollment Customization with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentCustomizationV2"
                }
              }
            }
          },
          "404" : {
            "description" : "Enrollment Customization with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Enrollment Customizations" ]
      },
      "put" : {
        "tags" : [ "enrollment-customization" ],
        "summary" : "Update an Enrollment Customization\n",
        "description" : "Updates an Enrollment Customization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Enrollment Customization to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrollmentCustomizationV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentCustomizationV2"
                }
              }
            }
          },
          "404" : {
            "description" : "Enrollment Customization with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Enrollment Customizations" ]
      },
      "delete" : {
        "tags" : [ "enrollment-customization" ],
        "summary" : "Delete an Enrollment Customization with the supplied id\n",
        "description" : "Deletes an Enrollment Customization with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        },
        "x-required-privileges" : [ "Delete Enrollment Customizations", "Read Enrollment Customizations" ]
      }
    },
    "/v2/enrollment-customizations/{id}/history" : {
      "get" : {
        "tags" : [ "enrollment-customization" ],
        "summary" : "Get sorted and paged Enrollment Customization history objects\n",
        "description" : "Gets sorted and paged enrollment customization history objects",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "date:desc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of enrollment customization history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Enrollment Customizations" ]
      },
      "post" : {
        "tags" : [ "enrollment-customization" ],
        "summary" : "Add Enrollment Customization history object notes\n",
        "description" : "Adds enrollment customization history object notes",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "History notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of enrollment customization history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectHistory"
                }
              }
            }
          },
          "503" : {
            "description" : "Enrollment customization history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Enrollment Customizations" ]
      }
    },
    "/v2/enrollment-customizations/{id}/prestages" : {
      "get" : {
        "tags" : [ "enrollment-customization" ],
        "summary" : "Retrieve the list of Prestages using this Enrollment Customization\n",
        "description" : "Retrieves the list of Prestages using this Enrollment Customization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Enrollment Customization identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageDependencies"
                }
              }
            }
          },
          "404" : {
            "description" : "Enrollment Customization with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Enrollment Customizations" ]
      }
    },
    "/v2/enrollment/access-groups" : {
      "get" : {
        "tags" : [ "enrollment" ],
        "summary" : "Retrieve the configured LDAP groups configured for User-Initiated Enrollment\n",
        "description" : "Retrieves the configured LDAP groups configured for User-Initiated Enrollment.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `name:asc`. Multiple sort criteria are supported and must be separated\nwith a comma. Example: `sort=date:desc,name:asc`.\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "name:asc" ]
          }
        }, {
          "name" : "all-users-option-first",
          "in" : "query",
          "description" : "Return \"All LDAP Users\" option on the first position if it is present in the current page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Found access groups matching search params.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessGroupsV2SearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read User-Initiated Enrollment" ]
      },
      "post" : {
        "tags" : [ "enrollment" ],
        "summary" : "Add the configured LDAP group for User-Initiated Enrollment.\n",
        "description" : "Add the configured LDAP group for User-Initiated Enrollment.\n",
        "requestBody" : {
          "description" : "Configured LDAP group to create.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrollmentAccessGroupV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Configured LDAP group record was created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "A record with given ldapServerId and name already exists.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update User-Initiated Enrollment" ]
      }
    },
    "/v2/enrollment/access-groups/{serverId}/{groupId}" : {
      "get" : {
        "tags" : [ "enrollment" ],
        "summary" : "Retrieve the configured LDAP groups configured for User-Initiated Enrollment\n",
        "description" : "Retrieves the configured LDAP groups configured for User-Initiated Enrollment.",
        "parameters" : [ {
          "name" : "serverId",
          "in" : "path",
          "description" : "LDAP server id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "path",
          "description" : "LDAP group id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful query",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentAccessGroupV2"
                }
              }
            }
          },
          "404" : {
            "description" : "Group not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read User-Initiated Enrollment" ]
      },
      "put" : {
        "tags" : [ "enrollment" ],
        "summary" : "Modify the configured LDAP groups configured for User-Initiated Enrollment\n",
        "description" : "Modifies the configured LDAP groups configured for User-Initiated Enrollment.",
        "parameters" : [ {
          "name" : "serverId",
          "in" : "path",
          "description" : "LDAP server id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "path",
          "description" : "LDAP group id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrollmentAccessGroupV2"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Successful query",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentAccessGroupV2"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update User-Initiated Enrollment" ]
      },
      "delete" : {
        "tags" : [ "enrollment" ],
        "summary" : "Delete an LDAP group's access to user initiated Enrollment\n",
        "description" : "Deletes an LDAP group's access to user initiated enrollment. The group \"All LDAP Users\" cannot be deleted, but it can be modified to disallow User-Initiated Enrollment.",
        "parameters" : [ {
          "name" : "serverId",
          "in" : "path",
          "description" : "LDAP server id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "path",
          "description" : "LDAP group id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful deletion"
          },
          "400" : {
            "description" : "Group not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update User-Initiated Enrollment" ]
      }
    },
    "/v2/enrollment/filtered-language-codes" : {
      "get" : {
        "tags" : [ "enrollment" ],
        "summary" : "Retrieve the list of languages and corresponding ISO 639-1 Codes but only those not already added to Enrollment\n",
        "description" : "Retrieves the list of languages and corresponding ISO 639-1 Codes, but only those not already added to Enrollment.",
        "responses" : {
          "200" : {
            "description" : "Retrieves the list of languages and corresponding ISO 639-1 Codes, but only those not already added to Enrollment.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LanguageCode"
                  }
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read User-Initiated Enrollment" ]
      }
    },
    "/v2/enrollment/history" : {
      "get" : {
        "tags" : [ "enrollment" ],
        "summary" : "Get sorted and paged Enrollment history object\n",
        "description" : "Gets sorted and paged Enrollment history object\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `date:desc`. Multiple sort criteria are supported and must be separated\nwith a comma. Example: `sort=date:desc,name:asc`.\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "date:desc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of enrollment history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read User-Initiated Enrollment" ]
      },
      "post" : {
        "tags" : [ "enrollment" ],
        "summary" : "Add Enrollment history object notes\n",
        "description" : "Adds Enrollment history object notes\n",
        "requestBody" : {
          "description" : "history notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of enrollment history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "503" : {
            "description" : "Enrollment history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update User-Initiated Enrollment" ]
      }
    },
    "/v2/enrollment/history/export" : {
      "post" : {
        "tags" : [ "enrollment" ],
        "summary" : "Export enrollment history collection\n",
        "description" : "Export enrollment history collection\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/export-fields"
        }, {
          "$ref" : "#/components/parameters/export-labels"
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is id:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:asc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. This param can be combined with paging and sorting. Example: name==\"*script*\"",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "requestBody" : {
          "description" : "Optional. Override query parameters since they can make URI exceed 2,000 character limit.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportParameters"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Export successful",
            "content" : {
              "text/csv,application/json" : {
                "schema" : {
                  "format" : "binary",
                  "example" : "Username,DATE,NOTES,Details\nadmin, 2022-02-04T11:56:26.343Z, Edited ,Re-enrollment Restricted true\n"
                }
              }
            }
          },
          "400" : {
            "description" : "Export fields specified incorrectly - non-existing column or duplicate in the list.\nSupported columns: id,name,categoryName,categoryId,priority.\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "503" : {
            "description" : "Export currently unavailable, all export-related resources are in use. Try again later.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read User-Initiated Enrollment" ],
        "x-action" : true
      }
    },
    "/v2/enrollment/language-codes" : {
      "get" : {
        "tags" : [ "enrollment" ],
        "summary" : "Retrieve the list of languages and corresponding ISO 639-1 Codes\n",
        "description" : "Retrieves the list of languages and corresponding ISO 639-1 Codes.",
        "responses" : {
          "200" : {
            "description" : "List of languages and corresponding ISO 639-1 Codes.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LanguageCode"
                  }
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read User-Initiated Enrollment" ]
      }
    },
    "/v2/enrollment/languages" : {
      "get" : {
        "tags" : [ "enrollment" ],
        "summary" : "Get an array of the language codes that have Enrollment messaging\n",
        "description" : "Returns an array of the language codes that have enrollment messaging currently configured.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort\nis `languageCode:asc`. Multiple sort criteria are supported and must be separated\nwith a comma. Example: `sort=date:desc,name:asc`.\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "languageCode:asc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Found languages matching search params.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProcessTextsSearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read User-Initiated Enrollment" ]
      }
    },
    "/v2/enrollment/languages/{languageId}" : {
      "get" : {
        "tags" : [ "enrollment" ],
        "summary" : "Retrieve the Enrollment messaging for a language\n",
        "description" : "Retrieves the enrollment messaging for a language.",
        "parameters" : [ {
          "name" : "languageId",
          "in" : "path",
          "description" : "Two letter ISO 639-1 Language Code",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentProcessTextObject"
                }
              }
            }
          },
          "404" : {
            "description" : "Language not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read User-Initiated Enrollment" ]
      },
      "put" : {
        "tags" : [ "enrollment" ],
        "summary" : "Edit Enrollment messaging for a language\n",
        "description" : "Edit enrollment messaging for a language.",
        "parameters" : [ {
          "name" : "languageId",
          "in" : "path",
          "description" : "Two letter ISO 639-1 Language Code",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrollmentProcessTextObject"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentProcessTextObject"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update User-Initiated Enrollment" ]
      },
      "delete" : {
        "tags" : [ "enrollment" ],
        "summary" : "Delete the Enrollment messaging for a language\n",
        "description" : "Delete the enrollment messaging for a language.",
        "parameters" : [ {
          "name" : "languageId",
          "in" : "path",
          "description" : "Two letter ISO 639-1 Language Code",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful deletetion"
          },
          "404" : {
            "description" : "Language not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update User-Initiated Enrollment" ]
      }
    },
    "/v2/inventory-preload/csv" : {
      "get" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Download all Inventory Preload records",
        "description" : "Returns all Inventory Preload records as a CSV file.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "Content-Disposition" : {
                "description" : "A header field named `Content-Disposition` is returned with the file name contained in its value, which is always `inventory-preload-all.csv`.\n",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "text/csv" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Serial Number,Device Type,Full Name\nserial123,Computer,Test Name\n"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Inventory Preload Records" ]
      },
      "post" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Create one or more new Inventory Preload records using CSV\n",
        "description" : "Create one or more new Inventory Preload records using CSV.\nA CSV template can be downloaded from /v2/inventory-preload/csv-template.\nSerial number and device type are required. All other fields are optional.\nWhen a matching serial number exists in the Inventory Preload data, the record will be overwritten with the CSV data.\nIf the CSV file contains a new username and an email address is provided, the new user is created in Jamf Pro.\nIf the CSV file contains an existing username, the following user-related fields are updated in Jamf Pro.\nFull Name,\nEmail Address,\nPhone Number,\nPosition.\nThis endpoint does not do full validation of each record in the CSV data.\nTo do full validation, use the `/v2/inventory-preload/csv-validate` endpoint first.\n",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The CSV file to upload",
                    "example" : "serial number,device type,full name\nserial123,Computer,Test Name\n"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HrefResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Validation Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadCsvValidationError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Inventory Preload Records", "Update Inventory Preload Records", "Create User", "Update User" ]
      }
    },
    "/v2/inventory-preload/csv-template" : {
      "get" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Download the Inventory Preload CSV template",
        "description" : "Retrieves the Inventory Preload CSV file template.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "Content-Disposition" : {
                "description" : "A header field named `Content-Disposition` is returned with the file name contained in its value, which is always `inventory-preload-template.csv`.\n",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "text/csv" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Serial Number,Device Type,Username,Full Name,Email Address"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Inventory Preload Records" ]
      }
    },
    "/v2/inventory-preload/csv-validate" : {
      "post" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Validate a given CSV file\n",
        "description" : "Validate a given CSV file.\nSerial number and device type are required. All other fields are optional.\nA CSV template can be downloaded from `/v2/inventory-preload/csv-template`.\n",
        "requestBody" : {
          "description" : "Inventory Preload records to be validated. A CSV template can\nbe downloaded from `/v2/inventory-preload/csv-template`.\n",
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The CSV file to upload",
                    "example" : "serial number,device type,full name\nserial123,Computer,Test Name\n"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadCsvValidationSuccess"
                }
              }
            }
          },
          "400" : {
            "description" : "Precondition Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadCsvValidationError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Inventory Preload Records" ],
        "x-action" : true
      }
    },
    "/v2/inventory-preload/ea-columns" : {
      "get" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Retrieve a list of extension attribute columns\n",
        "description" : "Retrieve a list of extension attribute columns currently associated\nwith inventory preload records\n",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadExtensionAttributeColumnResult"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Inventory Preload Records" ]
      }
    },
    "/v2/inventory-preload/export" : {
      "post" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Export a collection of inventory preload records\n",
        "description" : "Export a collection of inventory preload records\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/export-fields"
        }, {
          "$ref" : "#/components/parameters/export-labels"
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `id:asc`. Multiple sort criteria are supported and must be separated with\na comma. All inventory preload fields are supported, however fields added by\nextension attributes are not supported. If sorting by deviceType, use `0` for\nComputer and `1` for Mobile Device.\n\nExample: `sort=date:desc,name:asc`.\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:asc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Allowing to filter inventory preload records.\nDefault search is empty query - returning all results for the requested page.\nAll inventory preload fields are supported, however fields added by extension\nattributes are not supported. If filtering by deviceType, use `0` for Computer\nand `1` for Mobile Device.\n\nQuery in the RSQL format, allowing `==`, `!=`, `>`, `<`, and `=in=`.\n\nExample: `filter=categoryName==\"Category\"`\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "requestBody" : {
          "description" : "Optional. Override query parameters since they can make URI exceed 2,000 character limit.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportParameters"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Export successful",
            "content" : {
              "text/csv" : {
                "schema" : {
                  "format" : "binary",
                  "example" : "Column 1,Column 2,Column 3\nserial123,data,user\nserial1234,additional data,user last\n"
                }
              }
            }
          },
          "503" : {
            "description" : "Unable to perform export operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Inventory Preload Records" ],
        "x-action" : true
      }
    },
    "/v2/inventory-preload/history" : {
      "get" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Get Inventory Preload history entries\n",
        "description" : "Gets Inventory Preload history entries.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `date:desc`. Multiple sort criteria are supported and must be separated\nwith a comma.\n\nExample: `sort=date:desc,name:asc`.\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "date:desc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Allows filtering inventory preload history records.\nDefault search is empty query - returning all results for the requested page.\nAll inventory preload history fields are supported.\n\nQuery in the RSQL format, allowing `==`, `!=`, `>`, `<`, and `=in=`.\n\nExample: `filter=username==\"admin\"`\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Inventory Preload Records" ]
      },
      "post" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Add Inventory Preload history object notes",
        "description" : "Adds Inventory Preload history object notes.",
        "requestBody" : {
          "description" : "History notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of Inventory Preload history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "503" : {
            "description" : "Inventory Preload history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Inventory Preload Records" ]
      }
    },
    "/v2/inventory-preload/records" : {
      "get" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Return all Inventory Preload records",
        "description" : "Returns all Inventory Preload records.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `id:asc`. Multiple sort criteria are supported and must be separated with\na comma. All inventory preload fields are supported, however fields added by\nextension attributes are not supported. If sorting by deviceType, use `0` for\nComputer and `1` for Mobile Device.\n\nExample: `sort=date:desc,name:asc`.\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:asc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Allowing to filter inventory preload records.\nDefault search is empty query - returning all results for the requested page.\nAll inventory preload fields are supported, however fields added by extension\nattributes are not supported. If filtering by deviceType, use `0` for Computer\nand `1` for Mobile Device.\n\nQuery in the RSQL format, allowing `==`, `!=`, `>`, `<`, and `=in=`.\n\nExample: `filter=categoryName==\"Category\"`\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadRecordSearchResultsV2"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Inventory Preload Records" ]
      },
      "post" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Create a new Inventory Preload record using JSON",
        "description" : "Create a new Inventory Preload record using JSON.",
        "requestBody" : {
          "description" : "Inventory Preload record to be created.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InventoryPreloadRecordV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Inventory Preload Records" ]
      }
    },
    "/v2/inventory-preload/records/delete-all" : {
      "post" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Delete all Inventory Preload records\n",
        "description" : "Deletes all Inventory Preload records.",
        "responses" : {
          "204" : {
            "description" : "OK"
          }
        },
        "x-required-privileges" : [ "Delete Inventory Preload Records" ],
        "x-action" : true
      }
    },
    "/v2/inventory-preload/records/{id}" : {
      "get" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Get an Inventory Preload record",
        "description" : "Retrieves an Inventory Preload record.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Inventory Preload identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadRecordV2"
                }
              }
            }
          },
          "404" : {
            "description" : "Inventory Preload record with specified id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Inventory Preload Records" ]
      },
      "put" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Update an Inventory Preload record",
        "description" : "Updates an Inventory Preload record.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Inventory Preload identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Inventory Preload record to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InventoryPreloadRecordV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InventoryPreloadRecordV2"
                }
              }
            }
          },
          "404" : {
            "description" : "Inventory Preload record with specified id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Inventory Preload Records" ]
      },
      "delete" : {
        "tags" : [ "inventory-preload" ],
        "summary" : "Delete an Inventory Preload record\n",
        "description" : "Deletes an Inventory Preload record.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Inventory Preload identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Inventory Preload record with specified id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Delete Inventory Preload Records" ]
      }
    },
    "/v2/jamf-package" : {
      "get" : {
        "tags" : [ "jamf-package" ],
        "summary" : "Get the packages for a given Jamf application\n",
        "description" : "Get the packages for a given Jamf application.",
        "parameters" : [ {
          "name" : "application",
          "in" : "query",
          "description" : "The Jamf Application key. The only supported values are protect and connect.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "protect"
        } ],
        "responses" : {
          "200" : {
            "description" : "Properties for the given application.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JamfApplicationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Content. It is possible that there is no application with the given application id. Or Cloud Services Connection has not been established.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Jamf Packages Action" ]
      }
    },
    "/v2/mobile-device-prestages" : {
      "get" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Get sorted and paged Mobile Device Prestages\n",
        "description" : "Gets sorted and paged mobile device prestages",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:desc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileDevicePrestageSearchResultsV2"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Mobile Device PreStage Enrollments" ]
      },
      "post" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Create a Mobile Device Prestage\n",
        "description" : "Create a mobile device prestage",
        "requestBody" : {
          "description" : "Mobile Device Prestage to create. ids defined in this body will be ignored",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MobileDevicePrestageV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Mobile Device Prestage was created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Mobile Device PreStage Enrollments" ]
      }
    },
    "/v2/mobile-device-prestages/scope" : {
      "get" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Get all Device Scope for all Mobile Device Prestages\n",
        "description" : "Get all device scope for all mobile device prestages",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScopeV2"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Mobile Device PreStage Enrollments" ]
      }
    },
    "/v2/mobile-device-prestages/syncs" : {
      "get" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Get all Prestage sync States for all prestages\n",
        "description" : "Get all prestage sync states for all prestages",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PrestageSyncStatusV2"
                  }
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Mobile Device PreStage Enrollments" ]
      }
    },
    "/v2/mobile-device-prestages/{id}" : {
      "get" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Retrieve a Mobile Device Prestage with the supplied id\n",
        "description" : "Retrieves a Mobile Device Prestage with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetMobileDevicePrestageV2"
                }
              }
            }
          },
          "404" : {
            "description" : "Mobile Device Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Mobile Device PreStage Enrollments" ]
      },
      "put" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Update a Mobile Device Prestage\n",
        "description" : "Updates a Mobile Device Prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Mobile Device Prestage to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PutMobileDevicePrestageV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetMobileDevicePrestageV2"
                }
              }
            }
          },
          "404" : {
            "description" : "Mobile Device Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "The Mobile Device Prestage was modified by another process. Read the Mobile Device Prestage again for updated changes.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Mobile Device PreStage Enrollments" ]
      },
      "delete" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Delete a Mobile Device Prestage with the supplied id\n",
        "description" : "Deletes a Mobile Device Prestage with the supplied id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        },
        "x-required-privileges" : [ "Delete Mobile Device PreStage Enrollments" ]
      }
    },
    "/v2/mobile-device-prestages/{id}/attachments" : {
      "get" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Get attachments for a Mobile Device Prestage\n",
        "description" : "Get attachments for a Mobile Device Prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FileAttachmentV2"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Mobile Device Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Mobile Device PreStage Enrollments" ]
      },
      "post" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Add an attachment to a Mobile Device Prestage\n",
        "description" : "Add an attachment to a Mobile Device prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Identifier of the Mobile Device Prestage the attachment should be assigned to",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The file to upload",
                    "format" : "binary"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageFileAttachmentV2"
                }
              }
            }
          },
          "404" : {
            "description" : "Mobile Device Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "413" : {
            "description" : "Payload Too Large",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Create Mobile Device PreStage Enrollments" ]
      }
    },
    "/v2/mobile-device-prestages/{id}/attachments/delete-multiple" : {
      "post" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Remove an attachment for a Mobile Device Prestage\n",
        "description" : "Remove an attachment for a Mobile Device Prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ids"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        },
        "x-required-privileges" : [ "Delete Mobile Device PreStage Enrollments" ],
        "x-action" : true
      }
    },
    "/v2/mobile-device-prestages/{id}/history" : {
      "get" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Get sorted and paged Mobile Device Prestage history objects\n",
        "description" : "Gets sorted and paged mobile device prestage history objects",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "date:desc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of mobile device prestage history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResults"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Mobile Device PreStage Enrollments" ]
      },
      "post" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Add Mobile Device Prestage history object notes\n",
        "description" : "Adds mobile device prestage history object notes",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "History notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of mobile deivce prestage history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "503" : {
            "description" : "Mobile device prestage history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Mobile Device PreStage Enrollments" ]
      }
    },
    "/v2/mobile-device-prestages/{id}/scope" : {
      "get" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Get Device Scope for a specific Mobile Device Prestage\n",
        "description" : "Get device scope for a specific mobile device prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScopeResponseV2"
                }
              }
            }
          },
          "404" : {
            "description" : "Mobile Device Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Mobile Device PreStage Enrollments" ]
      },
      "put" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Replace Device Scope for a specific Mobile Device Prestage\n",
        "description" : "Replace device scope for a specific mobile device prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Serial Numbers to scope",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrestageScopeUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScopeResponseV2"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more serial numbers are not valid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Mobile Device Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Mobile Device PreStage Enrollments" ]
      },
      "post" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Add Device Scope for a specific Mobile Device Prestage\n",
        "description" : "Add device scope for a specific mobile device prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Serial Numbers to scope",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrestageScopeUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScopeResponseV2"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more serial numbers are not valid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Mobile Device Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Mobile Device PreStage Enrollments" ],
        "x-action" : true
      }
    },
    "/v2/mobile-device-prestages/{id}/scope/delete-multiple" : {
      "post" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Remove Device Scope for a specific Mobile Device Prestage\n",
        "description" : "Remove device scope for a specific mobile device prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Serial Numbers to remove from scope",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrestageScopeUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageScopeResponseV2"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more serial numbers are not valid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Mobile Device Prestage with that id does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409" : {
            "description" : "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Mobile Device PreStage Enrollments" ],
        "x-action" : true
      }
    },
    "/v2/mobile-device-prestages/{id}/syncs" : {
      "get" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Get all prestage sync states for a single prestage\n",
        "description" : "Get all prestage sync states for a single prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PrestageSyncStatusV2"
                  }
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Mobile Device PreStage Enrollments" ]
      }
    },
    "/v2/mobile-device-prestages/{id}/syncs/latest" : {
      "get" : {
        "tags" : [ "mobile-device-prestages" ],
        "summary" : "Get the latest Sync State for a single Prestage\n",
        "description" : "Get the latest sync state for a single prestage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mobile Device Prestage identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrestageSyncStatusV2"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Mobile Device PreStage Enrollments" ]
      }
    },
    "/v2/mobile-devices" : {
      "get" : {
        "tags" : [ "mobile-devices" ],
        "summary" : "Get Mobile Device objects\n",
        "description" : "Gets Mobile Device objects.\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:asc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileDeviceSearchResultsV2"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Mobile Devices" ]
      }
    },
    "/v2/mobile-devices/{id}" : {
      "get" : {
        "tags" : [ "mobile-devices" ],
        "summary" : "Get Mobile Device\n",
        "description" : "Get MobileDevice",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of mobile device record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Succesful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileDeviceV2"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified mobile device object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Mobile Devices" ]
      },
      "patch" : {
        "tags" : [ "mobile-devices" ],
        "summary" : "Update fields on a mobile device that are allowed to be modified by users\n",
        "description" : "Updates fields on a mobile device that are allowed to be modified by users.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of mobile device record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateMobileDeviceV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Succesful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileDeviceDetailsV2"
                }
              }
            }
          },
          "403" : {
            "description" : "Account not allowed to modify device",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified mobile device object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Mobile Devices" ]
      }
    },
    "/v2/mobile-devices/{id}/detail" : {
      "get" : {
        "tags" : [ "mobile-devices" ],
        "summary" : "Get Mobile Device\n",
        "description" : "Get MobileDevice",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "instance id of mobile device record",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Succesful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileDeviceDetailsGetV2"
                }
              }
            }
          },
          "404" : {
            "description" : "Specified mobile device object does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Mobile Devices" ]
      }
    },
    "/v2/sso/cert" : {
      "get" : {
        "tags" : [ "sso-certificate" ],
        "summary" : "Retrieve the certificate currently configured for use with SSO\n",
        "description" : "Retrieves the certificate currently configured for use with SSO.",
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SsoKeystoreResponseWithDetails"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read SSO Settings" ]
      },
      "put" : {
        "tags" : [ "sso-certificate" ],
        "summary" : "Update the certificate used by Jamf Pro to sign SSO requests to the identify provider\n",
        "description" : "Update the certificate used by Jamf Pro to sign SSO requests to the identify provider.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SsoKeystore"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully changed the keystore.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SsoKeystoreResponseWithDetails"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more parameters were invalid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update SSO Settings" ]
      },
      "post" : {
        "tags" : [ "sso-certificate" ],
        "summary" : "Jamf Pro will generate a new certificate and use it to sign SSO\n",
        "description" : "Jamf Pro will generate a new certificate and use it to sign SSO requests to the identity provider.",
        "responses" : {
          "200" : {
            "description" : "Newly generated will be set and returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SsoKeystoreResponseWithDetails"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update SSO Settings" ],
        "x-action" : true
      },
      "delete" : {
        "tags" : [ "sso-certificate" ],
        "summary" : "Delete the currently configured certificate used by SSO\n",
        "description" : "Deletes the currently configured certificate used by SSO.",
        "responses" : {
          "204" : {
            "description" : "Operation successful."
          }
        },
        "x-required-privileges" : [ "Update SSO Settings" ]
      }
    },
    "/v2/sso/cert/download" : {
      "get" : {
        "tags" : [ "sso-certificate" ],
        "summary" : "Download the certificate currently configured for use with Jamf Pro's SSO configuration\n",
        "description" : "Downloads the certificate currently configured for use with Jamf Pro's SSO configuration",
        "responses" : {
          "200" : {
            "description" : "Request successful",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read SSO Settings" ]
      }
    },
    "/v2/sso/cert/parse" : {
      "post" : {
        "tags" : [ "sso-certificate" ],
        "summary" : "Parse the certificate to get details about certificate type and keys needed to upload certificate file\n",
        "description" : "Parse the certificate to get details about certificate type and keys needed to upload certificate file.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SsoKeystoreParse"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully parsed the certificate.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SsoKeystoreCertParseResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "One or more parameters were invalid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-action" : true,
        "x-required-privileges" : [ "Update SSO Settings" ]
      }
    },
    "/v3/check-in" : {
      "get" : {
        "tags" : [ "client-check-in" ],
        "summary" : "Get Client Check-In settings\n",
        "description" : "Gets `Client Check-In` object.\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClientCheckInV3"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Computer Check-In" ]
      },
      "put" : {
        "tags" : [ "client-check-in" ],
        "summary" : "Update Client Check-In object\n",
        "description" : "Update Client Check-In object\n",
        "requestBody" : {
          "description" : "Client Check-In object to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClientCheckInV3"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Client Check-In was updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClientCheckInV3"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Computer Check-In" ]
      }
    },
    "/v3/check-in/history" : {
      "get" : {
        "tags" : [ "client-check-in" ],
        "summary" : "Get Client Check-In history object\n",
        "description" : "Gets Client Check-In history object\n",
        "parameters" : [ {
          "$ref" : "#/components/parameters/page"
        }, {
          "$ref" : "#/components/parameters/page-size"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,username:asc ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "example" : [ "date:desc" ],
            "items" : {
              "type" : "string"
            },
            "default" : [ "date:desc" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of Client Check-In history were found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HistorySearchResultsV1"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Read Computer Check-In" ]
      },
      "post" : {
        "tags" : [ "client-check-in" ],
        "summary" : "Add a Note to Client Check-In History\n",
        "description" : "Adds Client Check-In history object notes\n",
        "requestBody" : {
          "description" : "history notes to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectHistoryNote"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Notes of Client Check-In history were added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HrefResponse"
                }
              }
            }
          },
          "503" : {
            "description" : "Client Check-In history can not be saved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "x-required-privileges" : [ "Update Computer Check-In" ]
      }
    },
    "/vpp/admin-accounts" : {
      "get" : {
        "tags" : [ "vpp-admin-accounts-preview" ],
        "summary" : "Found all VPP Admin Accounts\n",
        "description" : "Found all vpp admin accounts.\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VppAdminAccount"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "x-required-privileges" : [ "Read Volume Purchasing Administrator Accounts" ]
      }
    },
    "/vpp/subscriptions" : {
      "get" : {
        "tags" : [ "vpp-subscriptions-preview" ],
        "summary" : "Found all VPP - subscriptions\n",
        "description" : "Found all vpp - subscriptions.\n",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "headers" : {
              "Deprecation" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "description" : "This endpoint is deprecated"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VppTokenSubscription"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "x-required-privileges" : [ "Read Volume Purchasing Administrator Accounts" ],
        "x-deprecation-date" : "2021-09-29"
      }
    },
    "/vpp/subscriptions/{id}" : {
      "get" : {
        "tags" : [ "vpp-subscriptions-preview" ],
        "summary" : "Found VPP subscription by id\n",
        "description" : "Found vpp subscription by id.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of vpp subscription to be retrieved",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "headers" : {
              "Deprecation" : {
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "description" : "This endpoint is deprecated"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VppTokenSubscription"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Bearer" : [ ]
        } ],
        "x-required-privileges" : [ "Read Volume Purchasing Administrator Accounts" ],
        "x-deprecation-date" : "2021-09-29"
      }
    }
  },
  "components" : {
    "schemas" : {
      "AccessGroupsPreviewSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 10
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnrollmentAccessGroupPreview"
            }
          }
        }
      },
      "AccessGroupsSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 10
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnrollmentAccessGroup"
            }
          }
        }
      },
      "AccessGroupsV2SearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 10
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnrollmentAccessGroupV2"
            }
          }
        }
      },
      "Account" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "username" : {
            "type" : "string",
            "example" : "admin"
          },
          "realName" : {
            "type" : "string",
            "example" : "IT Bob"
          },
          "email" : {
            "type" : "string",
            "example" : "ITBob@Jamf.com"
          },
          "preferences" : {
            "$ref" : "#/components/schemas/AccountPreferences"
          },
          "isMultiSiteAdmin" : {
            "type" : "boolean",
            "example" : false
          },
          "accessLevel" : {
            "type" : "string",
            "example" : "FullAccess",
            "enum" : [ "FullAccess", "SiteAccess", "GroupBasedAccess" ]
          },
          "privilegeSet" : {
            "type" : "string",
            "example" : "CUSTOM",
            "enum" : [ "ADMINISTRATOR", "AUDITOR", "ENROLLMENT", "CUSTOM" ]
          },
          "privilegesBySite" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "example" : {
              "1" : [ "Read SSO Settings", "Delete eBooks" ]
            }
          },
          "groupIds" : {
            "type" : "array",
            "example" : [ 1, 3 ],
            "items" : {
              "type" : "integer"
            }
          },
          "currentSiteId" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "AccountGroup" : {
        "type" : "object",
        "properties" : {
          "accessLevel" : {
            "type" : "string",
            "example" : "FullAccess",
            "enum" : [ "FullAccess", "SiteAccess", "GroupBasedAccess" ]
          },
          "privilegeSet" : {
            "type" : "string",
            "example" : "CUSTOM",
            "enum" : [ "ADMINISTRATOR", "AUDITOR", "ENROLLMENT", "CUSTOM" ]
          },
          "siteId" : {
            "type" : "integer",
            "example" : 1
          },
          "privileges" : {
            "type" : "array",
            "example" : "Read SSO Settings",
            "items" : {
              "type" : "string"
            }
          },
          "memberUserIds" : {
            "type" : "array",
            "example" : [ 1, 3 ],
            "items" : {
              "type" : "integer"
            }
          }
        }
      },
      "AccountPreferences" : {
        "type" : "object",
        "properties" : {
          "language" : {
            "type" : "string",
            "example" : "en"
          },
          "dateFormat" : {
            "type" : "string",
            "example" : "MM/dd/yyyy"
          },
          "region" : {
            "type" : "string",
            "example" : "Europe"
          },
          "timezone" : {
            "type" : "string",
            "example" : "Etc/GMT"
          },
          "isDisableRelativeDates" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "AccountPreferencesV1" : {
        "type" : "object",
        "properties" : {
          "language" : {
            "type" : "string",
            "example" : "en"
          },
          "dateFormat" : {
            "type" : "string",
            "example" : "MM/dd/yyyy"
          },
          "region" : {
            "type" : "string",
            "example" : "Europe"
          },
          "timezone" : {
            "type" : "string",
            "example" : "Etc/GMT"
          },
          "disableRelativeDates" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "AccountPreferencesV4" : {
        "required" : [ "dateFormat", "disablePageLeaveCheck", "disableRelativeDates", "disableTablePagination", "language", "timezone" ],
        "type" : "object",
        "properties" : {
          "language" : {
            "type" : "string",
            "example" : "en"
          },
          "dateFormat" : {
            "type" : "string",
            "example" : "MM/dd/yyyy"
          },
          "timezone" : {
            "type" : "string",
            "example" : "America/Chicago"
          },
          "disableRelativeDates" : {
            "type" : "boolean",
            "example" : false
          },
          "disablePageLeaveCheck" : {
            "type" : "boolean",
            "example" : true
          },
          "disableTablePagination" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "ActivePatchHistory" : {
        "type" : "object",
        "properties" : {
          "patchId" : {
            "type" : "integer",
            "example" : 1
          },
          "patchHistoryId" : {
            "type" : "integer",
            "example" : 1
          },
          "deviceId" : {
            "type" : "integer",
            "example" : 1
          },
          "deviceName" : {
            "type" : "string",
            "example" : "iPad"
          },
          "buildingId" : {
            "type" : "integer",
            "example" : 1
          },
          "buildingName" : {
            "type" : "string",
            "example" : "The Empire State Building"
          },
          "departmentId" : {
            "type" : "integer",
            "example" : 1
          },
          "departmentName" : {
            "type" : "string",
            "example" : "Department of Redundancy Department"
          },
          "siteId" : {
            "type" : "integer",
            "example" : -1
          },
          "siteName" : {
            "type" : "string",
            "example" : "Eau Claire"
          },
          "username" : {
            "type" : "string",
            "example" : "admin"
          },
          "osVersion" : {
            "type" : "string",
            "example" : "11.4"
          },
          "lastCheckIn" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-15T16:39:56.307Z"
          },
          "installedVersion" : {
            "type" : "string",
            "example" : "0.0.1"
          }
        }
      },
      "ActivePatchHistorySearchResults" : {
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivePatchHistory"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "example" : 3
          }
        }
      },
      "ActivePatchSummary" : {
        "type" : "object",
        "properties" : {
          "softwareTitleID" : {
            "type" : "integer",
            "example" : 1
          },
          "title" : {
            "type" : "string",
            "example" : "Patch title"
          },
          "latestVersion" : {
            "type" : "string",
            "example" : "2"
          },
          "releaseDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-15T16:39:56.307Z"
          },
          "upToDate" : {
            "type" : "integer",
            "example" : 3
          },
          "outOfDate" : {
            "type" : "integer",
            "example" : 6
          },
          "isOnDashboard" : {
            "type" : "boolean",
            "example" : false
          },
          "softwareTitleConfigurationID" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "AdminAccount" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "AdvancedSearch" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "name" : {
            "type" : "string",
            "example" : "Andy's Search"
          },
          "criteria" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SmartSearchCriterion"
            }
          },
          "displayFields" : {
            "type" : "array",
            "example" : [ "AirPlay Password", "App Analytics Enabled" ],
            "items" : {
              "type" : "string"
            }
          },
          "siteId" : {
            "type" : "string",
            "nullable" : true,
            "example" : "-1"
          }
        }
      },
      "AdvancedSearchCriteriaChoices" : {
        "type" : "object",
        "properties" : {
          "choices" : {
            "type" : "array",
            "example" : [ "Option 1", "Option 2" ],
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AdvancedSearchSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 3
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdvancedSearch"
            }
          }
        }
      },
      "AdvancedUserContentSearch" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "name" : {
            "type" : "string",
            "example" : "Andy's Search"
          },
          "criteria" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SmartSearchCriterion"
            }
          },
          "displayFields" : {
            "type" : "array",
            "example" : [ "Content Name", "Price" ],
            "items" : {
              "type" : "string"
            }
          },
          "siteId" : {
            "type" : "string",
            "nullable" : true,
            "example" : "-1"
          }
        }
      },
      "AdvancedUserContentSearchSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 3
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdvancedUserContentSearch"
            }
          }
        }
      },
      "AndroidDetails" : {
        "type" : "object",
        "properties" : {
          "osName" : {
            "type" : "string",
            "example" : "Black Licorice"
          },
          "manufacturer" : {
            "type" : "string",
            "example" : "Google"
          },
          "model" : {
            "type" : "string",
            "example" : "Pixel 2"
          },
          "internalCapacityMb" : {
            "type" : "integer",
            "example" : 30000
          },
          "internalAvailableMb" : {
            "type" : "integer",
            "example" : 20000
          },
          "internalPercentUsed" : {
            "type" : "integer",
            "example" : 67
          },
          "externalCapacityMb" : {
            "type" : "integer",
            "example" : 20000
          },
          "externalAvailableMb" : {
            "type" : "integer",
            "example" : 10000
          },
          "externalPercentUsed" : {
            "type" : "integer",
            "example" : 50
          },
          "batteryLevel" : {
            "type" : "integer",
            "example" : 100
          },
          "lastBackupTimestamp" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-15T16:39:56.307Z"
          },
          "apiVersion" : {
            "type" : "integer",
            "example" : 1
          },
          "computer" : {
            "$ref" : "#/components/schemas/IdAndName"
          },
          "security" : {
            "$ref" : "#/components/schemas/Security"
          }
        },
        "description" : "will be populated if the type is android."
      },
      "ApiError" : {
        "type" : "object",
        "properties" : {
          "httpStatus" : {
            "type" : "integer",
            "description" : "HTTP status of the response",
            "example" : 400
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApiErrorCause"
            }
          }
        }
      },
      "ApiErrorCause" : {
        "required" : [ "field" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Error-specific code that can be used to identify localization string, etc.",
            "example" : "8675309"
          },
          "field" : {
            "type" : "string",
            "description" : "Name of the field that caused the error.",
            "example" : "Name"
          },
          "description" : {
            "type" : "string",
            "description" : "A general description of error for troubleshooting/debugging. Generally this text should not be displayed to a user; instead refer to errorCode and it's localized text",
            "example" : "I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours"
          },
          "id" : {
            "type" : "string",
            "description" : "id of object with error. Optional.",
            "example" : "3"
          }
        }
      },
      "AppAnalyticsSetting" : {
        "type" : "string",
        "example" : "ENABLE_APP_ANALYTICS",
        "enum" : [ "ENABLE_APP_ANALYTICS", "DISABLE_APP_ANALYTICS" ]
      },
      "AppDynamicsConfig" : {
        "required" : [ "adrumExtUrlHttp", "adrumExtUrlHttps", "adrumScriptHttp", "adrumScriptHttps", "appKey", "beaconUrlHttp", "beaconUrlHttps", "enableEum" ],
        "type" : "object",
        "properties" : {
          "enableEum" : {
            "type" : "boolean",
            "default" : false
          },
          "appKey" : {
            "type" : "string",
            "example" : "AAA-BBB-CCC"
          },
          "adrumExtUrlHttp" : {
            "type" : "string",
            "example" : "http://adrum.example.com"
          },
          "adrumExtUrlHttps" : {
            "type" : "string",
            "example" : "https://adrum.example.com"
          },
          "adrumScriptHttp" : {
            "type" : "string",
            "example" : "http://adrum.example.com/adrum/adrum.js"
          },
          "adrumScriptHttps" : {
            "type" : "string",
            "example" : "https://adrum.example.com/adrum/adrum.js"
          },
          "beaconUrlHttp" : {
            "type" : "string",
            "example" : "http://beacon.example.com"
          },
          "beaconUrlHttps" : {
            "type" : "string",
            "example" : "https://beacon.example.com"
          }
        },
        "description" : "Configuration parameters needed for AppDynamics script initialization."
      },
      "AppPath" : {
        "required" : [ "id", "path" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1"
          },
          "path" : {
            "type" : "string",
            "example" : "/Example/Path/To/App/"
          }
        }
      },
      "AppRequestFormInputField" : {
        "required" : [ "priority", "title" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          },
          "title" : {
            "type" : "string",
            "example" : "Quantity"
          },
          "description" : {
            "type" : "string",
            "nullable" : true,
            "example" : "How many of these would you like?"
          },
          "priority" : {
            "maximum" : 255,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Highest priority is 1, lowest is 255",
            "example" : 1
          }
        }
      },
      "AppRequestFormInputFieldSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 3
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppRequestFormInputField"
            }
          }
        }
      },
      "AppRequestSettings" : {
        "type" : "object",
        "properties" : {
          "isEnabled" : {
            "type" : "boolean",
            "example" : true
          },
          "appStoreLocale" : {
            "type" : "string",
            "description" : "Can be any of the country codes from /v1/app-store-country-codes or \"deviceLocale\" to use each individual device's locale",
            "example" : "deviceLocale"
          },
          "requesterUserGroupId" : {
            "type" : "integer",
            "example" : 1
          },
          "approverEmails" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "jane.doe@company.com, john.doe@company.com"
            }
          }
        }
      },
      "AppleTvDetails" : {
        "type" : "object",
        "properties" : {
          "model" : {
            "type" : "string",
            "example" : "Apple TV 3rd Generation Rev 2"
          },
          "modelIdentifier" : {
            "type" : "string",
            "example" : "AppleTV3,2"
          },
          "modelNumber" : {
            "type" : "string",
            "example" : "MD199LL"
          },
          "isSupervised" : {
            "type" : "boolean",
            "example" : true
          },
          "airplayPassword" : {
            "type" : "string",
            "example" : "1234"
          },
          "deviceId" : {
            "type" : "string",
            "example" : "1"
          },
          "locales" : {
            "type" : "string",
            "example" : "null"
          },
          "purchasing" : {
            "$ref" : "#/components/schemas/Purchasing"
          },
          "configurationProfiles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ConfigurationProfile"
            }
          }
        },
        "description" : "will be populated if the type is appleTv."
      },
      "ApplicationAttributes" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string",
            "example" : "com.jamf.selfservice"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Attributes"
          }
        }
      },
      "ApplicationConfiguration" : {
        "type" : "object",
        "properties" : {
          "configuration" : {
            "type" : "string",
            "example" : "<plist><dict><key>Key</key><string>Value</string></dict></plist>"
          },
          "identifier" : {
            "type" : "string",
            "example" : "com.jamf.selfservice"
          }
        }
      },
      "AssignRemoveProfileResponseSyncState" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "serialNumber" : {
            "type" : "string",
            "example" : "R7QFDE2YCFN4"
          },
          "profileUUID" : {
            "type" : "string",
            "example" : "9164E5F7C74C2A4C4BE90BB15E549F14"
          },
          "syncStatus" : {
            "type" : "string",
            "example" : "ASSIGN_SUCCESS"
          },
          "failureCount" : {
            "type" : "integer",
            "example" : 0
          },
          "timestamp" : {
            "type" : "integer",
            "example" : 1583855813080
          }
        }
      },
      "Attributes" : {
        "type" : "object",
        "properties" : {
          "vpnUuid" : {
            "type" : "string",
            "example" : "aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937"
          },
          "associatedDomains" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "jamf.com"
            }
          },
          "removable" : {
            "type" : "boolean",
            "example" : true
          },
          "enableDirectDownloads" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "AuthAccount" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "username" : {
            "type" : "string",
            "example" : "admin"
          },
          "realName" : {
            "type" : "string",
            "example" : "IT Bob"
          },
          "email" : {
            "type" : "string",
            "example" : "ITBob@Jamf.com"
          },
          "preferences" : {
            "$ref" : "#/components/schemas/AccountPreferences"
          },
          "isMultiSiteAdmin" : {
            "type" : "boolean",
            "example" : true
          },
          "accessLevel" : {
            "type" : "string",
            "example" : "FullAccess",
            "enum" : [ "FullAccess", "SiteAccess", "GroupBasedAccess" ]
          },
          "privilegeSet" : {
            "type" : "string",
            "example" : "CUSTOM",
            "enum" : [ "ADMINISTRATOR", "AUDITOR", "ENROLLMENT", "CUSTOM" ]
          },
          "privilegesBySite" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "example" : {
              "1" : [ "Read SSO Settings", "Delete eBooks" ]
            }
          },
          "groupIds" : {
            "type" : "array",
            "example" : [ 1, 3 ],
            "items" : {
              "type" : "integer"
            }
          },
          "currentSiteId" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "AuthAccountV1" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1"
          },
          "username" : {
            "type" : "string",
            "example" : "admin"
          },
          "realName" : {
            "type" : "string",
            "example" : "IT Bob"
          },
          "email" : {
            "type" : "string",
            "example" : "ITBob@Jamf.com"
          },
          "preferences" : {
            "$ref" : "#/components/schemas/AccountPreferencesV1"
          },
          "multiSiteAdmin" : {
            "type" : "boolean",
            "example" : true
          },
          "accessLevel" : {
            "type" : "string",
            "example" : "FullAccess",
            "enum" : [ "FullAccess", "SiteAccess", "GroupBasedAccess" ]
          },
          "privilegeSet" : {
            "type" : "string",
            "example" : "CUSTOM",
            "enum" : [ "ADMINISTRATOR", "AUDITOR", "ENROLLMENT", "CUSTOM" ]
          },
          "privilegesBySite" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "example" : {
              "1" : [ "Read SSO Settings", "Delete eBooks" ]
            }
          },
          "groupIds" : {
            "type" : "array",
            "example" : [ 1, 3 ],
            "items" : {
              "type" : "string"
            }
          },
          "currentSiteId" : {
            "type" : "string",
            "example" : "1"
          }
        }
      },
      "AuthToken" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string",
            "example" : "eyJhbGciOiJIUzUxMiJ9.eyJhdXRoZW50aWNhdGVkLWFwcCI6IkdFTkVSSUMiLCJhdXRoZW50aWNhdGlvbi10eXBlIjoiSlNTIiwiZ3JvdXBzIjpbXSwic3ViamVjdC10eXBlIjoiSlNTX1VTRVJfSUQiLCJ0b2tlbi11dWlkIjoiNzc0YWY3MGYtYWQ0Yy00N2QzLTk2MzktZjEwMjBhMTIwYzExIiwibGRhcC1zZXJ2ZXItaWQiOi0xLCJzdWIiOiIxIiwiZXhwIjoxNTM5NjE5MzQ4fQ.0t7sgYyIyA7kTTmrM8tMGE7fnXcJ1ZzQODAJp0pzg92-cBMQS0Cv8S9oWjkJD7VJS-CHA1dOppr0G_2dCPOfng"
          },
          "expires" : {
            "type" : "integer",
            "example" : 1539619348124
          }
        }
      },
      "AuthTokenV1" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string",
            "example" : "eyJhbGciOiJIUzUxMiJ9.eyJhdXRoZW50aWNhdGVkLWFwcCI6IkdFTkVSSUMiLCJhdXRoZW50aWNhdGlvbi10eXBlIjoiSlNTIiwiZ3JvdXBzIjpbXSwic3ViamVjdC10eXBlIjoiSlNTX1VTRVJfSUQiLCJ0b2tlbi11dWlkIjoiNzc0YWY3MGYtYWQ0Yy00N2QzLTk2MzktZjEwMjBhMTIwYzExIiwibGRhcC1zZXJ2ZXItaWQiOi0xLCJzdWIiOiIxIiwiZXhwIjoxNTM5NjE5MzQ4fQ.0t7sgYyIyA7kTTmrM8tMGE7fnXcJ1ZzQODAJp0pzg92-cBMQS0Cv8S9oWjkJD7VJS-CHA1dOppr0G_2dCPOfng"
          },
          "expires" : {
            "type" : "string",
            "example" : "2020-04-21T21:09:31.626Z"
          }
        }
      },
      "Authorization" : {
        "type" : "object",
        "properties" : {
          "account" : {
            "$ref" : "#/components/schemas/AuthAccount"
          },
          "accountGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountGroup"
            }
          },
          "sites" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Site"
            }
          },
          "authenticationType" : {
            "type" : "string",
            "example" : "JSS",
            "enum" : [ "JSS", "LDAP", "SAML", "INVITE", "OAUTH", "DEVICE_SIGNATURE", "CLOUD_CONNECTOR", "SYSTEM_ACCOUNT" ]
          }
        }
      },
      "AuthorizationV1" : {
        "type" : "object",
        "properties" : {
          "account" : {
            "$ref" : "#/components/schemas/AuthAccountV1"
          },
          "accountGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountGroup"
            }
          },
          "sites" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/V1Site"
            }
          },
          "authenticationType" : {
            "type" : "string",
            "example" : "JSS",
            "enum" : [ "JSS", "LDAP", "SAML", "INVITE", "OAUTH", "DEVICE_SIGNATURE", "CLOUD_CONNECTOR", "SYSTEM_ACCOUNT" ]
          }
        }
      },
      "AvailableUpdates" : {
        "type" : "object",
        "properties" : {
          "availableUpdates" : {
            "type" : "array",
            "example" : [ "12.0.1", "11.6.1", "11.6", "11.5.2" ],
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AzureAdMigrationReportProcessStatus" : {
        "required" : [ "migrationReportFinishedEpoch", "migrationReportStartedEpoch", "migrationReportStatus", "reportId" ],
        "type" : "object",
        "properties" : {
          "reportId" : {
            "type" : "integer",
            "example" : 1
          },
          "migrationReportStatus" : {
            "type" : "string",
            "example" : "PENDING",
            "enum" : [ "PENDING", "ABORTED", "FAILED", "FINISHED" ]
          },
          "migrationReportStartedEpoch" : {
            "type" : "integer",
            "example" : 1
          },
          "migrationReportFinishedEpoch" : {
            "type" : "integer",
            "example" : 1
          }
        },
        "description" : "Request that start report generation"
      },
      "AzureAdMigrationReportRequest" : {
        "required" : [ "azureMappings", "azureServerId", "ldapServerId" ],
        "type" : "object",
        "properties" : {
          "ldapServerId" : {
            "maximum" : 999,
            "minimum" : 1,
            "type" : "integer",
            "example" : 1
          },
          "azureServerId" : {
            "maximum" : 65535,
            "minimum" : 1001,
            "type" : "integer",
            "example" : 1001
          },
          "azureMappings" : {
            "$ref" : "#/components/schemas/AzureMappings"
          }
        },
        "description" : "Request that start report generation"
      },
      "AzureConfiguration" : {
        "required" : [ "cloudIdPCommon", "server" ],
        "type" : "object",
        "properties" : {
          "cloudIdPCommon" : {
            "$ref" : "#/components/schemas/CloudIdPCommon"
          },
          "server" : {
            "$ref" : "#/components/schemas/AzureServerConfiguration"
          }
        },
        "description" : "A Cloud Identity Provider Azure configuration for responses"
      },
      "AzureConfigurationRequest" : {
        "required" : [ "cloudIdPCommon", "server" ],
        "type" : "object",
        "properties" : {
          "cloudIdPCommon" : {
            "$ref" : "#/components/schemas/CloudIdPCommonRequest"
          },
          "server" : {
            "$ref" : "#/components/schemas/AzureServerConfigurationRequest"
          }
        },
        "description" : "A Cloud Identity Provider Azure configuration for responses"
      },
      "AzureConfigurationUpdate" : {
        "required" : [ "cloudIdPCommon", "server" ],
        "type" : "object",
        "properties" : {
          "cloudIdPCommon" : {
            "$ref" : "#/components/schemas/CloudIdPCommon"
          },
          "server" : {
            "$ref" : "#/components/schemas/AzureServerConfigurationUpdate"
          }
        },
        "description" : "A Cloud Identity Provider Azure configuration for update"
      },
      "AzureMappings" : {
        "required" : [ "building", "department", "email", "groupId", "groupName", "phone", "position", "realName", "room", "userId", "userName" ],
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "string",
            "example" : "id"
          },
          "userName" : {
            "type" : "string",
            "example" : "userPrincipalName"
          },
          "realName" : {
            "type" : "string",
            "example" : "displayName"
          },
          "email" : {
            "type" : "string",
            "example" : "mail"
          },
          "department" : {
            "type" : "string",
            "example" : "department"
          },
          "building" : {
            "type" : "string",
            "example" : "companyName"
          },
          "room" : {
            "type" : "string",
            "example" : "officeLocation"
          },
          "phone" : {
            "type" : "string",
            "example" : "mobilePhone"
          },
          "position" : {
            "type" : "string",
            "example" : "jobTitle"
          },
          "groupId" : {
            "type" : "string",
            "example" : "id"
          },
          "groupName" : {
            "type" : "string",
            "example" : "displayName"
          }
        },
        "description" : "Azure Cloud Identity Provider mappings"
      },
      "AzureServerConfiguration" : {
        "required" : [ "enabled", "id", "mappings", "migrated", "searchTimeout", "tenantId", "transitiveDirectoryMembershipEnabled", "transitiveMembershipEnabled", "transitiveMembershipUserField" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1001"
          },
          "tenantId" : {
            "type" : "string",
            "example" : "db65d325-0350-4a17-9af9-b302d0fc386b"
          },
          "enabled" : {
            "type" : "boolean",
            "example" : true
          },
          "migrated" : {
            "type" : "boolean",
            "example" : true
          },
          "mappings" : {
            "$ref" : "#/components/schemas/AzureMappings"
          },
          "searchTimeout" : {
            "maximum" : 600,
            "minimum" : 5,
            "type" : "integer",
            "example" : 30
          },
          "transitiveMembershipEnabled" : {
            "type" : "boolean",
            "description" : "Use this field to enable transitive membership lookup with Single Sign On",
            "example" : false
          },
          "transitiveMembershipUserField" : {
            "type" : "string",
            "description" : "Use this field to set user field mapping for transitive membership lookup with Single Sign On",
            "example" : "userPrincipalName"
          },
          "transitiveDirectoryMembershipEnabled" : {
            "type" : "boolean",
            "description" : "Use this field to enable transitive membership lookup. This setting would not apply to Single Sign On",
            "example" : false
          }
        },
        "description" : "Azure Cloud Identity Provider configuration"
      },
      "AzureServerConfigurationRequest" : {
        "required" : [ "code", "enabled", "mappings", "searchTimeout", "tenantId", "transitiveDirectoryMembershipEnabled", "transitiveMembershipEnabled", "transitiveMembershipUserField" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1001"
          },
          "tenantId" : {
            "type" : "string",
            "example" : "db65d325-0350-4a17-9af9-b302d0fc386b"
          },
          "enabled" : {
            "type" : "boolean",
            "example" : true
          },
          "mappings" : {
            "$ref" : "#/components/schemas/AzureMappings"
          },
          "searchTimeout" : {
            "maximum" : 600,
            "minimum" : 5,
            "type" : "integer",
            "example" : 30
          },
          "transitiveMembershipEnabled" : {
            "type" : "boolean",
            "description" : "Use this field to enable transitive membership lookup with Single Sign On",
            "example" : false
          },
          "transitiveMembershipUserField" : {
            "type" : "string",
            "description" : "Use this field to set user field mapping for transitive membership lookup with Single Sign On",
            "example" : "userPrincipalName"
          },
          "transitiveDirectoryMembershipEnabled" : {
            "type" : "boolean",
            "description" : "Use this field to enable transitive membership lookup. This setting would not apply to Single Sign On",
            "example" : false
          },
          "code" : {
            "type" : "string",
            "example" : "auth"
          }
        },
        "description" : "Azure Cloud Identity Provider configuration request"
      },
      "AzureServerConfigurationUpdate" : {
        "required" : [ "enabled", "id", "mappings", "searchTimeout", "transitiveDirectoryMembershipEnabled", "transitiveMembershipEnabled", "transitiveMembershipUserField" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1001"
          },
          "enabled" : {
            "type" : "boolean",
            "example" : true
          },
          "mappings" : {
            "$ref" : "#/components/schemas/AzureMappings"
          },
          "searchTimeout" : {
            "maximum" : 600,
            "minimum" : 5,
            "type" : "integer",
            "example" : 30
          },
          "transitiveMembershipEnabled" : {
            "type" : "boolean",
            "description" : "Use this field to enable transitive membership lookup with Single Sign On",
            "example" : false
          },
          "transitiveMembershipUserField" : {
            "type" : "string",
            "description" : "Use this field to set user field mapping for transitive membership lookup with Single Sign On",
            "example" : "userPrincipalName"
          },
          "transitiveDirectoryMembershipEnabled" : {
            "type" : "boolean",
            "description" : "Use this field to enable transitive membership lookup. This setting would not apply to Single Sign On",
            "example" : false
          }
        },
        "description" : "Azure Cloud Identity Provider configuration update"
      },
      "BrandingImageUrl" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string",
            "example" : "https://jamfpro.jamf/image?1"
          }
        }
      },
      "Building" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "name" : {
            "type" : "string",
            "example" : "Apple Park"
          },
          "streetAddress1" : {
            "type" : "string",
            "nullable" : true,
            "example" : "The McIntosh Tree"
          },
          "streetAddress2" : {
            "type" : "string",
            "nullable" : true,
            "example" : "One Apple Park Way"
          },
          "city" : {
            "type" : "string",
            "nullable" : true,
            "example" : "Cupertino"
          },
          "stateProvince" : {
            "type" : "string",
            "nullable" : true,
            "example" : "California"
          },
          "zipPostalCode" : {
            "type" : "string",
            "nullable" : true,
            "example" : "95014"
          },
          "country" : {
            "type" : "string",
            "nullable" : true,
            "example" : "The United States of America"
          }
        }
      },
      "BuildingSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 3
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Building"
            }
          }
        }
      },
      "CacheSettings" : {
        "required" : [ "cacheType", "cacheUniqueId", "memcachedEndpoints", "timeToLiveSeconds" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "default" : "0"
          },
          "name" : {
            "type" : "string",
            "default" : "cache configuration"
          },
          "cacheType" : {
            "type" : "string",
            "example" : "ehcache"
          },
          "timeToLiveSeconds" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 120
          },
          "timeToIdleSeconds" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 120
          },
          "directoryTimeToLiveSeconds" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 120
          },
          "ehcacheMaxBytesLocalHeap" : {
            "type" : "string",
            "default" : "null"
          },
          "cacheUniqueId" : {
            "type" : "string",
            "description" : "The default is for Jamf Pro to generate a UUID, so we can only give an example instead.",
            "example" : "24864549-94ea-4cc1-bb80-d7fb392c6556"
          },
          "elasticache" : {
            "type" : "boolean",
            "default" : false
          },
          "memcachedEndpoints" : {
            "type" : "array",
            "example" : [ ],
            "items" : {
              "$ref" : "#/components/schemas/MemcachedEndpoints"
            }
          }
        }
      },
      "CategoriesSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 3
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Category"
            }
          }
        }
      },
      "Category" : {
        "required" : [ "name", "priority" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "name" : {
            "type" : "string",
            "example" : "The Best"
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 9
          }
        }
      },
      "CertificateDetails" : {
        "type" : "object",
        "properties" : {
          "subject" : {
            "type" : "string",
            "default" : ""
          },
          "serialNumber" : {
            "type" : "string",
            "default" : ""
          }
        }
      },
      "CertificateIdentityV1" : {
        "type" : "object",
        "properties" : {
          "filename" : {
            "type" : "string",
            "default" : "null"
          },
          "keystorePassword" : {
            "type" : "string",
            "default" : ""
          },
          "identityKeystore" : {
            "type" : "string",
            "description" : "The base 64 encoded certificate. Will not be returned on a GET."
          },
          "md5Sum" : {
            "type" : "string",
            "description" : "The md5 checksum of the certificate file. Intended to be used in verifification the cert being used to sign QuickAdd packages.",
            "default" : ""
          }
        }
      },
      "CertificateIdentityV2" : {
        "type" : "object",
        "properties" : {
          "filename" : {
            "type" : "string",
            "default" : "null"
          },
          "keystorePassword" : {
            "type" : "string",
            "writeOnly" : true,
            "default" : ""
          },
          "identityKeystore" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "description" : "The base 64 encoded certificate.",
            "format" : "byte",
            "writeOnly" : true
          },
          "md5Sum" : {
            "type" : "string",
            "description" : "The md5 checksum of the certificate file. Intended to be used in verifification the cert being used to sign QuickAdd packages.",
            "readOnly" : true,
            "default" : ""
          }
        }
      },
      "CertificateKey" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1"
          },
          "valid" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "CertificateRecord" : {
        "type" : "object",
        "properties" : {
          "subjectX500Principal" : {
            "type" : "string",
            "example" : "CN=Jamf JSS Built-in Certificate Authority"
          },
          "issuerX500Principal" : {
            "type" : "string",
            "example" : "CN=Jamf JSS Built-in Certificate Authority"
          },
          "serialNumber" : {
            "type" : "string",
            "example" : "00bc43bea0"
          },
          "version" : {
            "type" : "integer",
            "example" : 3
          },
          "notAfter" : {
            "type" : "integer",
            "example" : 1927739379
          },
          "notBefore" : {
            "type" : "integer",
            "example" : 1612120179
          },
          "signature" : {
            "$ref" : "#/components/schemas/Signature"
          },
          "keyUsage" : {
            "type" : "array",
            "example" : [ "digitalSignature", "keyEncipherment", "keyCertSign", "cRLSign" ],
            "items" : {
              "type" : "string"
            }
          },
          "keyUsageExtended" : {
            "type" : "array",
            "example" : [ "1.3.6.1.5.5.7.3.1" ],
            "items" : {
              "type" : "string"
            }
          },
          "sha1Fingerprint" : {
            "type" : "string",
            "example" : "448a7cc4d899d6a1821258133c24c023a5f558d9"
          },
          "sha256Fingerprint" : {
            "type" : "string",
            "example" : "660958e14891c67491822687d9ac0e3574562664458111ad875b680995ca472b"
          }
        }
      },
      "ClassicLdapMappings" : {
        "required" : [ "userGroupObjectMapGroupNameTo", "userGroupObjectMapIdTo", "userGroupObjectMapUuidTo", "userObjectMapBuildingTo", "userObjectMapDepartmentTo", "userObjectMapEmailTo", "userObjectMapIdTo", "userObjectMapPhoneTo", "userObjectMapPositionTo", "userObjectMapRealNameTo", "userObjectMapRoomTo", "userObjectMapUsernameTo", "userObjectMapUuidTo" ],
        "type" : "object",
        "properties" : {
          "userObjectMapIdTo" : {
            "type" : "string",
            "example" : "mail"
          },
          "userObjectMapUsernameTo" : {
            "type" : "string",
            "example" : "uid"
          },
          "userObjectMapRealNameTo" : {
            "type" : "string",
            "example" : "displayName"
          },
          "userObjectMapEmailTo" : {
            "type" : "string",
            "example" : "mail"
          },
          "userObjectMapDepartmentTo" : {
            "type" : "string",
            "example" : "departmentNumber"
          },
          "userObjectMapBuildingTo" : {
            "type" : "string",
            "default" : ""
          },
          "userObjectMapRoomTo" : {
            "type" : "string",
            "default" : ""
          },
          "userObjectMapPhoneTo" : {
            "type" : "string",
            "default" : ""
          },
          "userObjectMapPositionTo" : {
            "type" : "string",
            "example" : "title"
          },
          "userObjectMapUuidTo" : {
            "type" : "string",
            "example" : "uid"
          },
          "userGroupObjectMapIdTo" : {
            "type" : "string",
            "example" : "name"
          },
          "userGroupObjectMapGroupNameTo" : {
            "type" : "string",
            "example" : "name"
          },
          "userGroupObjectMapUuidTo" : {
            "type" : "string",
            "example" : "uid"
          }
        },
        "description" : "Classic Ldap mappings configuration"
      },
      "ClientCheckInV2" : {
        "type" : "object",
        "properties" : {
          "checkInFrequency" : {
            "type" : "integer",
            "description" : "Suggested values are 5, 15, 30, or 60. Web interface will not display correctly if not one of those. Minimim is 5, maximum is 60.",
            "format" : "int32",
            "default" : 15
          },
          "createHooks" : {
            "type" : "boolean",
            "default" : false
          },
          "hookLog" : {
            "type" : "boolean",
            "default" : false
          },
          "hookPolicies" : {
            "type" : "boolean",
            "default" : false
          },
          "hookHideRestore" : {
            "type" : "boolean",
            "default" : false
          },
          "hookMcx" : {
            "type" : "boolean",
            "default" : false
          },
          "backgroundHooks" : {
            "type" : "boolean",
            "default" : false
          },
          "hookDisplayStatus" : {
            "type" : "boolean",
            "default" : false
          },
          "createStartupScript" : {
            "type" : "boolean",
            "default" : false
          },
          "startupLog" : {
            "type" : "boolean",
            "default" : false
          },
          "startupPolicies" : {
            "type" : "boolean",
            "default" : false
          },
          "startupSsh" : {
            "type" : "boolean",
            "default" : false
          },
          "startupMcx" : {
            "type" : "boolean",
            "default" : false
          },
          "enableLocalConfigurationProfiles" : {
            "type" : "boolean",
            "default" : false
          }
        }
      },
      "ClientCheckInV3" : {
        "type" : "object",
        "properties" : {
          "checkInFrequency" : {
            "type" : "integer",
            "description" : "Suggested values are 5, 15, 30, or 60. Web interface will not display correctly if not one of those. Minimim is 5, maximum is 60.",
            "format" : "int32",
            "default" : 15
          },
          "createHooks" : {
            "type" : "boolean",
            "default" : false
          },
          "hookLog" : {
            "type" : "boolean",
            "default" : false
          },
          "hookPolicies" : {
            "type" : "boolean",
            "default" : false
          },
          "createStartupScript" : {
            "type" : "boolean",
            "default" : false
          },
          "startupLog" : {
            "type" : "boolean",
            "default" : false
          },
          "startupPolicies" : {
            "type" : "boolean",
            "default" : false
          },
          "startupSsh" : {
            "type" : "boolean",
            "default" : false
          },
          "enableLocalConfigurationProfiles" : {
            "type" : "boolean",
            "default" : false
          }
        }
      },
      "CloudIdPCommon" : {
        "required" : [ "displayName", "id", "providerName" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1001"
          },
          "displayName" : {
            "type" : "string",
            "example" : "Google Secure LDAP"
          },
          "providerName" : {
            "type" : "string",
            "example" : "GOOGLE",
            "enum" : [ "GOOGLE", "AZURE" ]
          }
        },
        "description" : "A Cloud Identity Provider information"
      },
      "CloudIdPCommonRequest" : {
        "required" : [ "displayName", "providerName" ],
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "example" : "Google Secure LDAP"
          },
          "providerName" : {
            "type" : "string",
            "example" : "GOOGLE",
            "enum" : [ "GOOGLE", "AZURE" ]
          }
        },
        "description" : "A Cloud Identity Provider information for request"
      },
      "CloudIdPCommonResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "minimum" : 1001,
            "type" : "string",
            "example" : "1001"
          },
          "displayName" : {
            "type" : "string",
            "example" : "Google Secure LDAP"
          },
          "enabled" : {
            "type" : "boolean",
            "example" : true
          },
          "providerName" : {
            "type" : "string",
            "example" : "GOOGLE",
            "enum" : [ "GOOGLE", "AZURE" ]
          }
        },
        "description" : "A Cloud Identity Provider information for responses"
      },
      "CloudLdapConnectionPoolStatistics" : {
        "type" : "object",
        "properties" : {
          "numConnectionsClosedDefunct" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "numConnectionsClosedExpired" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "numConnectionsClosedUnneeded" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "numFailedCheckouts" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "numFailedConnectionAttempts" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "numReleasedValid" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "numSuccessfulCheckouts" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "numSuccessfulCheckoutsNewConnection" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "numSuccessfulConnectionAttempts" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "maximumAvailableConnections" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "numSuccessfulCheckoutsWithoutWaiting" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "numSuccessfulCheckoutsAfterWaiting" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "numAvailableConnections" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          }
        },
        "description" : "Ldap Cloud Identity Provider conection pool statistics"
      },
      "CloudLdapConnectionStatus" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "example" : "Successfully connected"
          }
        },
        "description" : "Status of tested Cloud Ldap connection"
      },
      "CloudLdapKeystore" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "example" : "PKCS12"
          },
          "expirationDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2030-02-21T12:05:47.244Z"
          },
          "subject" : {
            "type" : "string",
            "example" : "ST=California, C=US, OU=GSuite, CN=LDAP Client, L=Mountain View, O=Google Inc."
          },
          "fileName" : {
            "type" : "string",
            "example" : "keystore.p12"
          }
        },
        "description" : "Response with keystore information"
      },
      "CloudLdapKeystoreFile" : {
        "required" : [ "fileBytes", "fileName", "password" ],
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string",
            "format" : "password",
            "writeOnly" : true,
            "example" : "***"
          },
          "fileBytes" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "fileName" : {
            "type" : "string",
            "example" : "keystore.p12"
          }
        },
        "description" : "Request with the Base64-encoded keystore file"
      },
      "CloudLdapMappingsRequest" : {
        "required" : [ "groupMappings", "membershipMappings", "userMappings" ],
        "type" : "object",
        "properties" : {
          "userMappings" : {
            "$ref" : "#/components/schemas/UserMappings"
          },
          "groupMappings" : {
            "$ref" : "#/components/schemas/GroupMappings"
          },
          "membershipMappings" : {
            "$ref" : "#/components/schemas/MembershipMappings"
          }
        },
        "description" : "Mappings configurations request for Ldap Cloud Identity Provider configuration"
      },
      "CloudLdapMappingsResponse" : {
        "type" : "object",
        "properties" : {
          "userMappings" : {
            "$ref" : "#/components/schemas/UserMappings"
          },
          "groupMappings" : {
            "$ref" : "#/components/schemas/GroupMappings"
          },
          "membershipMappings" : {
            "$ref" : "#/components/schemas/MembershipMappings"
          }
        },
        "description" : "Mappings configuration response for Ldap Cloud Identity Provider configuration"
      },
      "CloudLdapServerRequest" : {
        "required" : [ "connectionTimeout", "connectionType", "domainName", "enabled", "keystore", "port", "searchTimeout", "serverUrl", "useWildcards" ],
        "type" : "object",
        "properties" : {
          "serverUrl" : {
            "type" : "string",
            "example" : "ldap.google.com"
          },
          "enabled" : {
            "type" : "boolean",
            "example" : true
          },
          "domainName" : {
            "type" : "string",
            "example" : "jamf.com"
          },
          "port" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "example" : 636
          },
          "keystore" : {
            "$ref" : "#/components/schemas/CloudLdapKeystoreFile"
          },
          "connectionTimeout" : {
            "maximum" : 600.0,
            "minimum" : 5,
            "type" : "integer",
            "example" : 15
          },
          "searchTimeout" : {
            "maximum" : 600.0,
            "minimum" : 5,
            "type" : "integer",
            "example" : 60
          },
          "useWildcards" : {
            "type" : "boolean",
            "example" : true
          },
          "connectionType" : {
            "type" : "string",
            "example" : "LDAPS",
            "enum" : [ "LDAPS", "START_TLS" ]
          }
        },
        "description" : "A Cloud Identity Provider LDAP server configuration for requests"
      },
      "CloudLdapServerResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1001"
          },
          "enabled" : {
            "type" : "boolean",
            "example" : true
          },
          "serverUrl" : {
            "type" : "string",
            "example" : "ldap.google.com"
          },
          "domainName" : {
            "type" : "string",
            "example" : "jamf.com"
          },
          "port" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "example" : 636
          },
          "keystore" : {
            "$ref" : "#/components/schemas/CloudLdapKeystore"
          },
          "connectionTimeout" : {
            "minimum" : 5,
            "type" : "integer",
            "example" : 15
          },
          "searchTimeout" : {
            "minimum" : 5,
            "type" : "integer",
            "example" : 60
          },
          "useWildcards" : {
            "type" : "boolean",
            "example" : true
          },
          "connectionType" : {
            "type" : "string",
            "example" : "LDAPS",
            "enum" : [ "LDAPS", "START_TLS" ]
          }
        },
        "description" : "A Cloud Identity Provider LDAP server configuration for responses"
      },
      "CloudLdapServerUpdate" : {
        "required" : [ "connectionTimeout", "connectionType", "domainName", "enabled", "port", "providerName", "searchTimeout", "serverUrl", "useWildcards" ],
        "type" : "object",
        "properties" : {
          "serverUrl" : {
            "type" : "string",
            "example" : "ldap.google.com"
          },
          "enabled" : {
            "type" : "boolean",
            "example" : true
          },
          "domainName" : {
            "type" : "string",
            "example" : "jamf.com"
          },
          "port" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "example" : 636
          },
          "keystore" : {
            "$ref" : "#/components/schemas/CloudLdapKeystoreFile"
          },
          "connectionTimeout" : {
            "minimum" : 1,
            "type" : "integer",
            "example" : 15
          },
          "searchTimeout" : {
            "minimum" : 1,
            "type" : "integer",
            "example" : 60
          },
          "useWildcards" : {
            "type" : "boolean",
            "example" : true
          },
          "connectionType" : {
            "type" : "string",
            "example" : "LDAPS",
            "enum" : [ "LDAPS", "START_TLS" ]
          }
        },
        "description" : "A Cloud Identity Provider LDAP server configuration for updates"
      },
      "ComputerApplication" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Microsoft Word"
          },
          "path" : {
            "type" : "string",
            "example" : "/usr/local/app"
          },
          "version" : {
            "type" : "string",
            "example" : "1.0.0"
          },
          "macAppStore" : {
            "type" : "boolean",
            "example" : true
          },
          "sizeMegabytes" : {
            "type" : "integer",
            "example" : 25
          },
          "bundleId" : {
            "type" : "string",
            "example" : "1"
          },
          "updateAvailable" : {
            "type" : "boolean",
            "example" : false
          },
          "externalVersionId" : {
            "type" : "string",
            "description" : "The app's external version ID. It can be used in the iTunes Search API to decide if the app needs to be updated",
            "example" : "1"
          }
        }
      },
      "ComputerAttachment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1"
          },
          "name" : {
            "type" : "string",
            "example" : "Attachment.pdf"
          },
          "fileType" : {
            "type" : "string",
            "example" : "application/pdf"
          },
          "sizeBytes" : {
            "type" : "integer",
            "description" : "File size in bytes",
            "format" : "int64",
            "example" : 1024
          }
        }
      },
      "ComputerCertificate" : {
        "type" : "object",
        "properties" : {
          "commonName" : {
            "type" : "string",
            "example" : "jamf.com"
          },
          "identity" : {
            "type" : "boolean",
            "example" : true
          },
          "expirationDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2030-10-31T18:04:13Z"
          },
          "username" : {
            "type" : "string",
            "example" : "test"
          },
          "lifecycleStatus" : {
            "type" : "string",
            "example" : "ACTIVE",
            "enum" : [ "ACTIVE", "INACTIVE" ]
          },
          "certificateStatus" : {
            "type" : "string",
            "example" : "ISSUED",
            "enum" : [ "EXPIRING", "EXPIRED", "REVOKED", "PENDING_REVOKE", "ISSUED" ]
          }
        }
      },
      "ComputerConfigurationProfile" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "username" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "username"
          },
          "lastInstalled" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-31T18:04:13Z"
          },
          "removable" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : true
          },
          "displayName" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Displayed profile"
          },
          "profileIdentifier" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "0ae590fe-9b30-11ea-bb37-0242ac130002"
          }
        }
      },
      "ComputerContentCaching" : {
        "type" : "object",
        "properties" : {
          "computerContentCachingInformationId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "parents" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ComputerContentCachingParent"
            }
          },
          "alerts" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ComputerContentCachingAlert"
            }
          },
          "activated" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : false
          },
          "active" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : false
          },
          "actualCacheBytesUsed" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          },
          "cacheDetails" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ComputerContentCachingCacheDetail"
            }
          },
          "cacheBytesFree" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 23353884672
          },
          "cacheBytesLimit" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          },
          "cacheStatus" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "OK"
          },
          "cacheBytesUsed" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          },
          "dataMigrationCompleted" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : false
          },
          "dataMigrationProgressPercentage" : {
            "type" : "integer",
            "readOnly" : true,
            "example" : 0
          },
          "dataMigrationError" : {
            "$ref" : "#/components/schemas/ComputerContentCachingDataMigrationError"
          },
          "maxCachePressureLast1HourPercentage" : {
            "type" : "integer",
            "readOnly" : true,
            "example" : 0
          },
          "personalCacheBytesFree" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 23353884672
          },
          "personalCacheBytesLimit" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          },
          "personalCacheBytesUsed" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          },
          "port" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          },
          "publicAddress" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "SomeAddress"
          },
          "registrationError" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "NOT_ACTIVATED"
          },
          "registrationResponseCode" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 403
          },
          "registrationStarted" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "example" : "2018-10-31T18:04:13Z"
          },
          "registrationStatus" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "CONTENT_CACHING_FAILED",
            "enum" : [ "CONTENT_CACHING_FAILED", "CONTENT_CACHING_PENDING", "CONTENT_CACHING_SUCCEEDED" ]
          },
          "restrictedMedia" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : false
          },
          "serverGuid" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "CD1E1291-4AF9-4468-B5D5-0F780C13DB2F"
          },
          "startupStatus" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "FAILED"
          },
          "tetheratorStatus" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "CONTENT_CACHING_DISABLED",
            "enum" : [ "CONTENT_CACHING_UNKNOWN", "CONTENT_CACHING_DISABLED", "CONTENT_CACHING_ENABLED" ]
          },
          "totalBytesAreSince" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "example" : "2018-10-31T18:04:13Z"
          },
          "totalBytesDropped" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          },
          "totalBytesImported" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          },
          "totalBytesReturnedToChildren" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          },
          "totalBytesReturnedToClients" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          },
          "totalBytesReturnedToPeers" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          },
          "totalBytesStoredFromOrigin" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          },
          "totalBytesStoredFromParents" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          },
          "totalBytesStoredFromPeers" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          }
        }
      },
      "ComputerContentCachingAlert" : {
        "type" : "object",
        "properties" : {
          "cacheBytesLimit" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          },
          "className" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "SomeClass"
          },
          "pathPreventingAccess" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "/some/path"
          },
          "postDate" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "example" : "2018-10-31T18:04:13Z"
          },
          "reservedVolumeBytes" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          },
          "resource" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "SomeResource"
          }
        }
      },
      "ComputerContentCachingCacheDetail" : {
        "type" : "object",
        "properties" : {
          "computerContentCachingCacheDetailsId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "categoryName" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "SomeCategory"
          },
          "diskSpaceBytesUsed" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          }
        }
      },
      "ComputerContentCachingDataMigrationError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          },
          "domain" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "SomeDomain"
          },
          "userInfo" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ComputerContentCachingDataMigrationErrorUserInfo"
            }
          }
        }
      },
      "ComputerContentCachingDataMigrationErrorUserInfo" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "foo"
          },
          "value" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "bar"
          }
        }
      },
      "ComputerContentCachingParent" : {
        "type" : "object",
        "properties" : {
          "contentCachingParentId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "address" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "SomeAddress"
          },
          "alerts" : {
            "$ref" : "#/components/schemas/ComputerContentCachingParentAlert"
          },
          "details" : {
            "$ref" : "#/components/schemas/ComputerContentCachingParentDetails"
          },
          "guid" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "CD1E1291-4AF9-4468-B5D5-0F780C13DB2F"
          },
          "healthy" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : true
          },
          "port" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          },
          "version" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          }
        }
      },
      "ComputerContentCachingParentAlert" : {
        "type" : "object",
        "properties" : {
          "contentCachingParentAlertId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "addresses" : {
            "type" : "array",
            "readOnly" : true,
            "example" : [ ],
            "items" : {
              "type" : "string"
            }
          },
          "className" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "SomeClass"
          },
          "postDate" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "example" : "2018-10-31T18:04:13Z"
          }
        }
      },
      "ComputerContentCachingParentCapabilities" : {
        "type" : "object",
        "properties" : {
          "contentCachingParentCapabilitiesId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "imports" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : true
          },
          "namespaces" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : true
          },
          "personalContent" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : true
          },
          "queryParameters" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : true
          },
          "sharedContent" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : true
          },
          "prioritization" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : true
          }
        }
      },
      "ComputerContentCachingParentDetails" : {
        "type" : "object",
        "properties" : {
          "contentCachingParentDetailsId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "acPower" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : true
          },
          "cacheSizeBytes" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 0
          },
          "capabilities" : {
            "$ref" : "#/components/schemas/ComputerContentCachingParentCapabilities"
          },
          "portable" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : true
          },
          "localNetwork" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerContentCachingParentLocalNetwork"
            }
          }
        }
      },
      "ComputerContentCachingParentLocalNetwork" : {
        "type" : "object",
        "properties" : {
          "contentCachingParentLocalNetworkId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "speed" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 5000
          },
          "wired" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : true
          }
        }
      },
      "ComputerDisk" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "170"
          },
          "device" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "disk0"
          },
          "model" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "APPLE HDD TOSHIBA MK5065GSXF"
          },
          "revision" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "5"
          },
          "serialNumber" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "a8598f013366"
          },
          "sizeMegabytes" : {
            "type" : "integer",
            "description" : "Disk Size in MB.",
            "format" : "int64",
            "readOnly" : true,
            "example" : 262144
          },
          "smartStatus" : {
            "type" : "string",
            "description" : "S.M.A.R.T Status",
            "readOnly" : true,
            "example" : "OK"
          },
          "type" : {
            "type" : "string",
            "description" : "Connection type attribute.",
            "readOnly" : true,
            "example" : "false"
          },
          "partitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerPartition"
            }
          }
        }
      },
      "ComputerDiskEncryption" : {
        "type" : "object",
        "properties" : {
          "bootPartitionEncryptionDetails" : {
            "$ref" : "#/components/schemas/ComputerPartitionEncryption"
          },
          "individualRecoveryKeyValidityStatus" : {
            "type" : "string",
            "example" : "Valid",
            "enum" : [ "VALID", "INVALID", "UNKNOWN", "NOT_APPLICABLE" ]
          },
          "institutionalRecoveryKeyPresent" : {
            "type" : "boolean",
            "example" : true
          },
          "diskEncryptionConfigurationName" : {
            "type" : "string",
            "example" : "Test configuration"
          },
          "fileVault2EnabledUserNames" : {
            "type" : "array",
            "example" : [ "admin" ],
            "items" : {
              "type" : "string"
            }
          },
          "fileVault2EligibilityMessage" : {
            "type" : "string",
            "example" : "Not a boot partition"
          }
        }
      },
      "ComputerExtensionAttribute" : {
        "type" : "object",
        "properties" : {
          "definitionId" : {
            "type" : "string",
            "description" : "An identifier of extension attribute definition.",
            "nullable" : false,
            "example" : "23"
          },
          "name" : {
            "type" : "string",
            "description" : "A human-readable name by which attribute can be referred to.",
            "nullable" : false,
            "readOnly" : true,
            "example" : "Some Attribute"
          },
          "description" : {
            "type" : "string",
            "description" : "An additional explanation of exact attribute meaning, possible values, etc.",
            "nullable" : true,
            "readOnly" : true,
            "example" : "Some Attribute defines how much Foo impacts Bar."
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : false,
            "readOnly" : true,
            "example" : true
          },
          "multiValue" : {
            "type" : "boolean",
            "nullable" : false,
            "readOnly" : true,
            "example" : true
          },
          "values" : {
            "type" : "array",
            "description" : "A value of extension attribute, in some rare cases there may be multiple values present, hence the array.\n",
            "nullable" : true,
            "readOnly" : false,
            "example" : [ "foo", "bar" ],
            "items" : {
              "type" : "string"
            }
          },
          "dataType" : {
            "type" : "string",
            "description" : "A data type of extension attribute.",
            "nullable" : true,
            "readOnly" : true,
            "example" : "STRING",
            "enum" : [ "STRING", "INTEGER", "DATE_TIME" ]
          },
          "options" : {
            "type" : "array",
            "description" : "A closed list of possible values (applies to `popup` input type).\n",
            "nullable" : true,
            "readOnly" : true,
            "example" : [ "foo", "bar" ],
            "items" : {
              "type" : "string"
            }
          },
          "inputType" : {
            "type" : "string",
            "description" : "The input method. `text` is most common and means simply free text, `popup` i a closed list of values from\nwhich one or many can be selected and `script` value is calculated and can never be set directly.\n",
            "nullable" : true,
            "readOnly" : true,
            "example" : "TEXT",
            "enum" : [ "TEXT", "POPUP", "SCRIPT", "LDAP" ]
          }
        }
      },
      "ComputerFont" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "font name"
          },
          "version" : {
            "type" : "string",
            "example" : "1.02"
          },
          "path" : {
            "type" : "string",
            "example" : "/Applications/"
          }
        }
      },
      "ComputerGeneral" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Boalime"
          },
          "lastIpAddress" : {
            "type" : "string",
            "example" : "247.185.82.186"
          },
          "lastReportedIp" : {
            "type" : "string",
            "example" : "247.185.82.186"
          },
          "jamfBinaryVersion" : {
            "type" : "string",
            "example" : "9.27"
          },
          "platform" : {
            "type" : "string",
            "example" : "Mac"
          },
          "barcode1" : {
            "type" : "string",
            "example" : "5 12345 678900"
          },
          "barcode2" : {
            "type" : "string",
            "example" : "5 12345 678900"
          },
          "assetTag" : {
            "type" : "string",
            "example" : "304822"
          },
          "remoteManagement" : {
            "$ref" : "#/components/schemas/ComputerRemoteManagement"
          },
          "supervised" : {
            "type" : "boolean",
            "example" : true
          },
          "mdmCapable" : {
            "$ref" : "#/components/schemas/ComputerMdmCapability"
          },
          "reportDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-31T18:04:13Z"
          },
          "lastContactTime" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-31T18:04:13Z"
          },
          "lastCloudBackupDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-31T18:04:13Z"
          },
          "lastEnrolledDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-31T18:04:13Z"
          },
          "mdmProfileExpiration" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-31T18:04:13Z"
          },
          "initialEntryDate" : {
            "type" : "string",
            "format" : "date",
            "example" : "2018-10-31"
          },
          "distributionPoint" : {
            "type" : "string",
            "example" : "distribution point name"
          },
          "enrollmentMethod" : {
            "$ref" : "#/components/schemas/EnrollmentMethod"
          },
          "site" : {
            "$ref" : "#/components/schemas/V1Site"
          },
          "itunesStoreAccountActive" : {
            "type" : "boolean",
            "example" : true
          },
          "enrolledViaAutomatedDeviceEnrollment" : {
            "type" : "boolean",
            "example" : true
          },
          "userApprovedMdm" : {
            "type" : "boolean",
            "example" : true
          },
          "extensionAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerExtensionAttribute"
            }
          }
        }
      },
      "ComputerGeneralUpdate" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Boalime"
          },
          "lastIpAddress" : {
            "type" : "string",
            "example" : "247.185.82.186"
          },
          "barcode1" : {
            "type" : "string",
            "example" : "5 12345 678900"
          },
          "barcode2" : {
            "type" : "string",
            "example" : "5 12345 678900"
          },
          "assetTag" : {
            "type" : "string",
            "example" : "304822"
          },
          "extensionAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerExtensionAttribute"
            }
          }
        }
      },
      "ComputerHardware" : {
        "type" : "object",
        "properties" : {
          "make" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Apple"
          },
          "model" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "13-inch MacBook Pro (Mid 2012)"
          },
          "modelIdentifier" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "MacBookPro9,2"
          },
          "serialNumber" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "C02ZC2QYLVDL"
          },
          "processorSpeedMhz" : {
            "type" : "integer",
            "description" : "Processor Speed in MHz.",
            "format" : "int64",
            "readOnly" : true,
            "example" : 2100
          },
          "processorCount" : {
            "type" : "integer",
            "readOnly" : true,
            "example" : 2
          },
          "coreCount" : {
            "type" : "integer",
            "readOnly" : true,
            "example" : 2
          },
          "processorType" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Intel Core i5"
          },
          "processorArchitecture" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "i386"
          },
          "busSpeedMhz" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 2133
          },
          "cacheSizeKilobytes" : {
            "type" : "integer",
            "description" : "Cache Size in KB.",
            "format" : "int64",
            "readOnly" : true,
            "example" : 3072
          },
          "networkAdapterType" : {
            "type" : "string",
            "example" : "Foo"
          },
          "macAddress" : {
            "type" : "string",
            "example" : "6A:2C:4B:B7:65:B5"
          },
          "altNetworkAdapterType" : {
            "type" : "string",
            "example" : "Bar"
          },
          "altMacAddress" : {
            "type" : "string",
            "example" : "82:45:58:44:dc:01"
          },
          "totalRamMegabytes" : {
            "type" : "integer",
            "description" : "Total RAM Size in MB.",
            "format" : "int64",
            "readOnly" : true,
            "example" : 4096
          },
          "openRamSlots" : {
            "type" : "integer",
            "description" : "Available RAM slots.",
            "readOnly" : true,
            "example" : 0
          },
          "batteryCapacityPercent" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Remaining percentage of battery power.",
            "readOnly" : true,
            "example" : 85
          },
          "smcVersion" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "2.2f38"
          },
          "nicSpeed" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "N/A"
          },
          "opticalDrive" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "MATSHITA DVD-R UJ-8A8"
          },
          "bootRom" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "MBP91.00D3.B08"
          },
          "bleCapable" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : false
          },
          "supportsIosAppInstalls" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : false
          },
          "appleSilicon" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : false
          },
          "extensionAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerExtensionAttribute"
            }
          }
        }
      },
      "ComputerHardwareUpdate" : {
        "type" : "object",
        "properties" : {
          "networkAdapterType" : {
            "type" : "string",
            "example" : "Foo"
          },
          "macAddress" : {
            "type" : "string",
            "example" : "6A:2C:4B:B7:65:B5"
          },
          "altNetworkAdapterType" : {
            "type" : "string",
            "example" : "Bar"
          },
          "altMacAddress" : {
            "type" : "string",
            "example" : "82:45:58:44:dc:01"
          },
          "extensionAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerExtensionAttribute"
            }
          }
        }
      },
      "ComputerIbeacon" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "room A"
          }
        }
      },
      "ComputerInventoryCollectionPreferences" : {
        "type" : "object",
        "properties" : {
          "monitorApplicationUsage" : {
            "type" : "boolean",
            "example" : true,
            "default" : false
          },
          "includeFonts" : {
            "type" : "boolean",
            "example" : true,
            "default" : false
          },
          "includePlugins" : {
            "type" : "boolean",
            "example" : true,
            "default" : false
          },
          "includePackages" : {
            "type" : "boolean",
            "example" : true,
            "default" : false
          },
          "includeSoftwareUpdates" : {
            "type" : "boolean",
            "example" : true,
            "default" : false
          },
          "includeAccounts" : {
            "type" : "boolean",
            "example" : true,
            "default" : false
          },
          "calculateSizes" : {
            "type" : "boolean",
            "example" : false,
            "default" : false
          },
          "includeHiddenAccounts" : {
            "type" : "boolean",
            "example" : true,
            "default" : false
          },
          "includePrinters" : {
            "type" : "boolean",
            "example" : true,
            "default" : false
          },
          "includeServices" : {
            "type" : "boolean",
            "example" : true,
            "default" : false
          },
          "collectSyncedMobileDeviceInfo" : {
            "type" : "boolean",
            "example" : false,
            "default" : false
          },
          "updateLdapInfoOnComputerInventorySubmissions" : {
            "type" : "boolean",
            "example" : false,
            "default" : false
          },
          "monitorBeacons" : {
            "type" : "boolean",
            "example" : true,
            "default" : false
          },
          "allowChangingUserAndLocation" : {
            "type" : "boolean",
            "example" : true,
            "default" : true
          },
          "useUnixUserPaths" : {
            "type" : "boolean",
            "example" : true,
            "default" : true
          }
        }
      },
      "ComputerInventoryCollectionSettings" : {
        "type" : "object",
        "properties" : {
          "computerInventoryCollectionPreferences" : {
            "$ref" : "#/components/schemas/ComputerInventoryCollectionPreferences"
          },
          "applicationPaths" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppPath"
            }
          },
          "fontPaths" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FontPath"
            }
          },
          "pluginPaths" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PluginPath"
            }
          }
        }
      },
      "ComputerInventoryRecoveryLockPasswordResponse" : {
        "type" : "object",
        "properties" : {
          "recoveryLockPassword" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "password123"
          }
        }
      },
      "ComputerInventoryResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "udid" : {
            "type" : "string",
            "example" : "123"
          },
          "general" : {
            "$ref" : "#/components/schemas/ComputerGeneral"
          },
          "diskEncryption" : {
            "$ref" : "#/components/schemas/ComputerDiskEncryption"
          },
          "purchasing" : {
            "$ref" : "#/components/schemas/ComputerPurchase"
          },
          "applications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerApplication"
            }
          },
          "storage" : {
            "$ref" : "#/components/schemas/ComputerStorage"
          },
          "userAndLocation" : {
            "$ref" : "#/components/schemas/ComputerUserAndLocation"
          },
          "configurationProfiles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerConfigurationProfile"
            }
          },
          "printers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerPrinter"
            }
          },
          "services" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerService"
            }
          },
          "hardware" : {
            "$ref" : "#/components/schemas/ComputerHardware"
          },
          "localUserAccounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerLocalUserAccount"
            }
          },
          "certificates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerCertificate"
            }
          },
          "attachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerAttachment"
            }
          },
          "plugins" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerPlugin"
            }
          },
          "packageReceipts" : {
            "$ref" : "#/components/schemas/ComputerPackageReceipts"
          },
          "fonts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerFont"
            }
          },
          "security" : {
            "$ref" : "#/components/schemas/ComputerSecurity"
          },
          "operatingSystem" : {
            "$ref" : "#/components/schemas/ComputerOperatingSystem"
          },
          "licensedSoftware" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerLicensedSoftware"
            }
          },
          "ibeacons" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerIbeacon"
            }
          },
          "softwareUpdates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerSoftwareUpdate"
            }
          },
          "extensionAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerExtensionAttribute"
            }
          },
          "contentCaching" : {
            "$ref" : "#/components/schemas/ComputerContentCaching"
          },
          "groupMemberships" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GroupMembership"
            }
          }
        }
      },
      "ComputerInventorySearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 3
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerInventoryResponse"
            }
          }
        }
      },
      "ComputerInventoryUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "udid" : {
            "type" : "string",
            "example" : "45436edf-864e-4364-982a-330b01d39e65"
          },
          "general" : {
            "$ref" : "#/components/schemas/ComputerGeneralUpdate"
          },
          "purchasing" : {
            "$ref" : "#/components/schemas/ComputerPurchase"
          },
          "userAndLocation" : {
            "$ref" : "#/components/schemas/ComputerUserAndLocation"
          },
          "hardware" : {
            "$ref" : "#/components/schemas/ComputerHardwareUpdate"
          },
          "operatingSystem" : {
            "$ref" : "#/components/schemas/ComputerOperatingSystemUpdate"
          },
          "extensionAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerExtensionAttribute"
            }
          }
        }
      },
      "ComputerLicensedSoftware" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1"
          },
          "name" : {
            "type" : "string",
            "example" : "Microsoft Word"
          }
        }
      },
      "ComputerLocalUserAccount" : {
        "type" : "object",
        "properties" : {
          "uid" : {
            "type" : "string",
            "example" : "501"
          },
          "username" : {
            "type" : "string",
            "example" : "jamf"
          },
          "fullName" : {
            "type" : "string",
            "example" : "John Jamf"
          },
          "admin" : {
            "type" : "boolean",
            "example" : true
          },
          "homeDirectory" : {
            "type" : "string",
            "example" : "/Users/jamf"
          },
          "homeDirectorySizeMb" : {
            "type" : "integer",
            "description" : "Home directory size in MB.",
            "format" : "int64",
            "readOnly" : true,
            "example" : 131072
          },
          "fileVault2Enabled" : {
            "type" : "boolean",
            "example" : true
          },
          "userAccountType" : {
            "type" : "string",
            "example" : "LOCAL",
            "enum" : [ "LOCAL", "MOBILE", "UNKNOWN" ]
          },
          "passwordMinLength" : {
            "type" : "integer",
            "example" : 4
          },
          "passwordMaxAge" : {
            "type" : "integer",
            "example" : 5
          },
          "passwordMinComplexCharacters" : {
            "type" : "integer",
            "example" : 5
          },
          "passwordHistoryDepth" : {
            "type" : "integer",
            "example" : 5
          },
          "passwordRequireAlphanumeric" : {
            "type" : "boolean",
            "example" : true
          },
          "computerAzureActiveDirectoryId" : {
            "type" : "string",
            "example" : "1"
          },
          "userAzureActiveDirectoryId" : {
            "type" : "string",
            "example" : "1"
          },
          "azureActiveDirectoryId" : {
            "type" : "string",
            "example" : "ACTIVATED",
            "enum" : [ "ACTIVATED", "DEACTIVATED", "UNRESPONSIVE", "UNKNOWN" ]
          }
        }
      },
      "ComputerLocation" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "example" : "admin"
          },
          "position" : {
            "type" : "string",
            "example" : "IT Team Lead"
          },
          "room" : {
            "type" : "string",
            "example" : "4th Floor - Quad 3"
          }
        }
      },
      "ComputerMdmCapability" : {
        "type" : "object",
        "properties" : {
          "capable" : {
            "type" : "boolean",
            "example" : true
          },
          "capableUsers" : {
            "type" : "array",
            "example" : [ "admin", "rootadmin" ],
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ComputerOperatingSystem" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Mac OS X"
          },
          "version" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "10.9.5"
          },
          "build" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "13A603"
          },
          "activeDirectoryStatus" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Not Bound"
          },
          "fileVault2Status" : {
            "type" : "string",
            "example" : "ALL_ENCRYPTED",
            "enum" : [ "NOT_APPLICABLE", "NOT_ENCRYPTED", "BOOT_ENCRYPTED", "SOME_ENCRYPTED", "ALL_ENCRYPTED" ]
          },
          "softwareUpdateDeviceId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "J132AP"
          },
          "extensionAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerExtensionAttribute"
            }
          }
        }
      },
      "ComputerOperatingSystemUpdate" : {
        "type" : "object",
        "properties" : {
          "extensionAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerExtensionAttribute"
            }
          }
        }
      },
      "ComputerOverview" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "7"
          },
          "location" : {
            "$ref" : "#/components/schemas/ComputerLocation"
          },
          "name" : {
            "type" : "string",
            "example" : "Zach's hand me down MacBook Pro"
          },
          "udid" : {
            "type" : "string",
            "example" : "6E47EF55-5318-494F-A09E-70F613E0AFD1"
          },
          "serialNumber" : {
            "type" : "string",
            "example" : "C02L29ECF8J1"
          },
          "lastContactDate" : {
            "type" : "string",
            "example" : "2000-04-25T21:09:31.661Z"
          },
          "lastReportDate" : {
            "type" : "string",
            "example" : "2000-04-25T21:09:31.661Z"
          },
          "lastEnrolledDate" : {
            "type" : "string",
            "example" : "2000-04-25T21:09:31.661Z"
          },
          "operatingSystemVersion" : {
            "type" : "string",
            "example" : "10.9.5"
          },
          "operatingSystemBuild" : {
            "type" : "string",
            "example" : "TK421"
          },
          "ipAddress" : {
            "type" : "string",
            "example" : "93.184.216.34"
          },
          "macAddress" : {
            "type" : "string",
            "example" : "F3:7C:6F:2C:B6:76"
          },
          "assetTag" : {
            "type" : "string",
            "example" : "A123BC"
          },
          "modelIdentifier" : {
            "type" : "string",
            "example" : "MNYF2XX/A"
          },
          "mdmAccessRights" : {
            "type" : "integer",
            "example" : 1
          },
          "isManaged" : {
            "type" : "boolean",
            "example" : true
          },
          "managementId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "73226fb6-61df-4c10-9552-eb9bc353d507"
          }
        }
      },
      "ComputerPackageReceipts" : {
        "type" : "object",
        "properties" : {
          "installedByJamfPro" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "com.jamf.protect.JamfProtect"
            }
          },
          "installedByInstallerSwu" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "com.apple.pkg.Core"
            }
          },
          "cached" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "com.jamf.protect.JamfProtect"
            }
          }
        },
        "description" : "All package receipts are listed by their package name"
      },
      "ComputerPartition" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Foo"
          },
          "sizeMegabytes" : {
            "type" : "integer",
            "description" : "Partition Size in MB.",
            "format" : "int64",
            "readOnly" : true,
            "example" : 262144
          },
          "availableMegabytes" : {
            "type" : "integer",
            "description" : "Available space in MB.",
            "format" : "int64",
            "readOnly" : true,
            "example" : 131072
          },
          "partitionType" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "BOOT",
            "enum" : [ "BOOT", "RECOVERY", "OTHER" ]
          },
          "percentUsed" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Percentage of space used.",
            "readOnly" : true,
            "example" : 25
          },
          "fileVault2State" : {
            "$ref" : "#/components/schemas/ComputerPartitionFileVault2State"
          },
          "fileVault2ProgressPercent" : {
            "type" : "integer",
            "description" : "Percentage progress of current FileVault 2 operation.",
            "nullable" : true,
            "example" : 45
          },
          "lvmManaged" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : true
          }
        }
      },
      "ComputerPartitionEncryption" : {
        "type" : "object",
        "properties" : {
          "partitionName" : {
            "type" : "string",
            "example" : "main"
          },
          "partitionFileVault2State" : {
            "$ref" : "#/components/schemas/ComputerPartitionFileVault2State"
          },
          "partitionFileVault2Percent" : {
            "type" : "integer",
            "example" : 100
          }
        }
      },
      "ComputerPartitionFileVault2State" : {
        "type" : "string",
        "example" : "VALID",
        "enum" : [ "UNKNOWN", "UNENCRYPTED", "INELIGIBLE", "DECRYPTED", "DECRYPTING", "ENCRYPTED", "ENCRYPTING", "RESTART_NEEDED", "OPTIMIZING", "DECRYPTING_PAUSED", "ENCRYPTING_PAUSED" ]
      },
      "ComputerPlugin" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "plugin name"
          },
          "version" : {
            "type" : "string",
            "example" : "1.02"
          },
          "path" : {
            "type" : "string",
            "example" : "/Applications/"
          }
        }
      },
      "ComputerPrestage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DeviceEnrollmentPrestage"
        }, {
          "required" : [ "customPackageDistributionPointId", "customPackageIds", "isInstallProfilesDuringSetup", "prestageInstalledProfileIds" ],
          "type" : "object",
          "properties" : {
            "isInstallProfilesDuringSetup" : {
              "type" : "boolean",
              "example" : true
            },
            "prestageInstalledProfileIds" : {
              "type" : "array",
              "items" : {
                "type" : "integer",
                "example" : 1
              }
            },
            "customPackageIds" : {
              "type" : "array",
              "items" : {
                "type" : "integer",
                "example" : 1
              }
            },
            "customPackageDistributionPointId" : {
              "type" : "integer",
              "example" : 1
            }
          }
        } ]
      },
      "ComputerPrestageSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GetComputerPrestage"
            }
          }
        }
      },
      "ComputerPrestageSearchResultsV2" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GetComputerPrestageV2"
            }
          }
        }
      },
      "ComputerPrestageV2" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DeviceEnrollmentPrestageV2"
        }, {
          "required" : [ "customPackageDistributionPointId", "customPackageIds", "installProfilesDuringSetup", "prestageInstalledProfileIds" ],
          "type" : "object",
          "properties" : {
            "installProfilesDuringSetup" : {
              "type" : "boolean",
              "example" : true
            },
            "prestageInstalledProfileIds" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "example" : "1"
              }
            },
            "customPackageIds" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "example" : "1"
              }
            },
            "customPackageDistributionPointId" : {
              "type" : "string",
              "example" : "1"
            },
            "enableRecoveryLock" : {
              "type" : "boolean",
              "example" : true
            },
            "recoveryLockPasswordType" : {
              "type" : "string",
              "example" : "MANUAL",
              "enum" : [ "MANUAL", "RANDOM" ]
            },
            "rotateRecoveryLockPassword" : {
              "type" : "boolean",
              "example" : true
            }
          }
        } ]
      },
      "ComputerPrinter" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "My Printer"
          },
          "type" : {
            "type" : "string",
            "example" : "XYZ 1122"
          },
          "uri" : {
            "type" : "string",
            "example" : "ipp://10.0.0.5"
          },
          "location" : {
            "type" : "string",
            "example" : "7th floor"
          }
        }
      },
      "ComputerPurchase" : {
        "type" : "object",
        "properties" : {
          "leased" : {
            "type" : "boolean",
            "example" : true
          },
          "purchased" : {
            "type" : "boolean",
            "example" : true
          },
          "poNumber" : {
            "type" : "string",
            "example" : "53-1"
          },
          "poDate" : {
            "type" : "string",
            "format" : "date",
            "example" : "2019-01-01"
          },
          "vendor" : {
            "type" : "string",
            "example" : "Example Vendor"
          },
          "warrantyDate" : {
            "type" : "string",
            "format" : "date",
            "example" : "2019-01-01"
          },
          "appleCareId" : {
            "type" : "string",
            "example" : "abcd"
          },
          "leaseDate" : {
            "type" : "string",
            "format" : "date",
            "example" : "2019-01-01"
          },
          "purchasePrice" : {
            "type" : "string",
            "example" : "$500"
          },
          "lifeExpectancy" : {
            "type" : "integer",
            "example" : 5
          },
          "purchasingAccount" : {
            "type" : "string",
            "example" : "admin"
          },
          "purchasingContact" : {
            "type" : "string",
            "example" : "true"
          },
          "extensionAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerExtensionAttribute"
            }
          }
        }
      },
      "ComputerRemoteManagement" : {
        "type" : "object",
        "properties" : {
          "managed" : {
            "type" : "boolean",
            "example" : true
          },
          "managementUsername" : {
            "type" : "string",
            "example" : "rootname"
          },
          "managementPassword" : {
            "type" : "string",
            "writeOnly" : true,
            "example" : "example password"
          }
        }
      },
      "ComputerSection" : {
        "type" : "string",
        "example" : "general",
        "enum" : [ "GENERAL", "DISK_ENCRYPTION", "PURCHASING", "APPLICATIONS", "STORAGE", "USER_AND_LOCATION", "CONFIGURATION_PROFILES", "PRINTERS", "SERVICES", "HARDWARE", "LOCAL_USER_ACCOUNTS", "CERTIFICATES", "ATTACHMENTS", "PLUGINS", "PACKAGE_RECEIPTS", "FONTS", "SECURITY", "OPERATING_SYSTEM", "LICENSED_SOFTWARE", "IBEACONS", "SOFTWARE_UPDATES", "EXTENSION_ATTRIBUTES", "CONTENT_CACHING", "GROUP_MEMBERSHIPS" ]
      },
      "ComputerSecurity" : {
        "type" : "object",
        "properties" : {
          "sipStatus" : {
            "type" : "string",
            "example" : "ENABLED",
            "enum" : [ "NOT_COLLECTED", "NOT_AVAILABLE", "DISABLED", "ENABLED" ]
          },
          "gatekeeperStatus" : {
            "type" : "string",
            "example" : "APP_STORE_AND_IDENTIFIED_DEVELOPERS",
            "enum" : [ "NOT_COLLECTED", "DISABLED", "APP_STORE_AND_IDENTIFIED_DEVELOPERS", "APP_STORE" ]
          },
          "xprotectVersion" : {
            "type" : "string",
            "example" : "1.2.3"
          },
          "autoLoginDisabled" : {
            "type" : "boolean",
            "example" : false
          },
          "remoteDesktopEnabled" : {
            "type" : "boolean",
            "description" : "Collected for macOS 10.14.4 or later",
            "example" : true
          },
          "activationLockEnabled" : {
            "type" : "boolean",
            "description" : "Collected for macOS 10.15.0 or later",
            "example" : true
          },
          "recoveryLockEnabled" : {
            "type" : "boolean",
            "example" : true
          },
          "firewallEnabled" : {
            "type" : "boolean",
            "example" : true
          },
          "secureBootLevel" : {
            "type" : "string",
            "description" : "Collected for macOS 10.15.0 or later",
            "example" : "FULL_SECURITY",
            "enum" : [ "NO_SECURITY", "MEDIUM_SECURITY", "FULL_SECURITY", "NOT_SUPPORTED", "UNKNOWN" ]
          },
          "externalBootLevel" : {
            "type" : "string",
            "description" : "Collected for macOS 10.15.0 or later",
            "example" : "ALLOW_BOOTING_FROM_EXTERNAL_MEDIA",
            "enum" : [ "ALLOW_BOOTING_FROM_EXTERNAL_MEDIA", "DISALLOW_BOOTING_FROM_EXTERNAL_MEDIA", "NOT_SUPPORTED", "UNKNOWN" ]
          },
          "bootstrapTokenAllowed" : {
            "type" : "boolean",
            "description" : "Collected for macOS 11 or later",
            "example" : true
          }
        }
      },
      "ComputerService" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "SomeService"
          }
        }
      },
      "ComputerSoftwareUpdate" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "BEdit"
          },
          "version" : {
            "type" : "string",
            "example" : "1.15.2"
          },
          "packageName" : {
            "type" : "string",
            "example" : "com.apple.pkg.AdditionalEssentials"
          }
        }
      },
      "ComputerStorage" : {
        "type" : "object",
        "properties" : {
          "bootDriveAvailableSpaceMegabytes" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "example" : 3072
          },
          "disks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerDisk"
            }
          }
        }
      },
      "ComputerUserAndLocation" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "example" : "Madison Anderson"
          },
          "realname" : {
            "type" : "string",
            "example" : "13-inch MacBook"
          },
          "email" : {
            "type" : "string",
            "example" : "email@com.pl"
          },
          "position" : {
            "type" : "string",
            "example" : "IT Team Lead"
          },
          "phone" : {
            "type" : "string",
            "example" : "123-456-789"
          },
          "departmentId" : {
            "type" : "string",
            "example" : "1"
          },
          "buildingId" : {
            "type" : "string",
            "example" : "1"
          },
          "room" : {
            "type" : "string",
            "example" : "5"
          },
          "extensionAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerExtensionAttribute"
            }
          }
        }
      },
      "ComputersSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 3
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComputerOverview"
            }
          }
        }
      },
      "ConfigurationProfile" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "example" : "Test WiFi"
          },
          "version" : {
            "type" : "string",
            "example" : "1"
          },
          "uuid" : {
            "type" : "string",
            "example" : "D29DD9FB-0D5B-422F-A3A2-ABBC5848E949"
          },
          "identifier" : {
            "type" : "string",
            "example" : "ac2-server4.D0EFAC2D-326C-4BB6-87E6-2BCB88490AAA"
          }
        }
      },
      "ConfigurationSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CloudIdPCommonResponse"
            }
          }
        },
        "description" : "A list with Cloud Identity Providers informations about configurations"
      },
      "ConnectionConfigurationCandidateRequest" : {
        "required" : [ "displayName", "enabled", "scriptToken", "sessionTimeout", "siteId" ],
        "type" : "object",
        "properties" : {
          "siteId" : {
            "type" : "string",
            "description" : "An identifier of a site which Team Viewer Remote Administration will be configured on",
            "example" : "1"
          },
          "displayName" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string",
            "description" : "Name for Team Viewer Connection Configuration",
            "example" : "teamViewerConfiguration"
          },
          "scriptToken" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string",
            "description" : "Token which is used for connecting to Team Viewer",
            "example" : "12847340-nPAX96bsaADH4Gz6K6i2"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Defines the intent to enable or disable Team Viewer connection",
            "example" : true
          },
          "sessionTimeout" : {
            "maximum" : 1440,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Number of minutes before the session expires",
            "example" : 15
          }
        },
        "description" : "Request that creates configuration and initialize connection between Jamf Pro and Team Viewer"
      },
      "ConnectionConfigurationResponse" : {
        "required" : [ "displayName", "enabled", "id", "sessionTimeout", "siteId" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "An identifier of connection configuration for Team Viewer Remote Administration",
            "example" : "1"
          },
          "siteId" : {
            "type" : "string",
            "description" : "An identifier of a site which Team Viewer Remote Administration is configured on",
            "example" : "1"
          },
          "displayName" : {
            "type" : "string",
            "description" : "Name for Team Viewer Connection Configuration",
            "example" : "teamViewerConfiguration"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Describes if Team Viewer connection is enabled or disabled",
            "example" : true
          },
          "sessionTimeout" : {
            "maximum" : 1440,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Number of minutes before the session expires",
            "example" : 15
          }
        },
        "description" : "Response that contains information about connection configuration for Team Viewer"
      },
      "ConnectionConfigurationStatusResponse" : {
        "required" : [ "connectionVerificationResult" ],
        "type" : "object",
        "properties" : {
          "connectionVerificationResult" : {
            "type" : "string",
            "description" : "connection configuration status for Team Viewer",
            "example" : "VALID"
          }
        },
        "description" : "Response that contains connection configuration status for Team Viewer"
      },
      "ConnectionConfigurationUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Name for Team Viewer Connection Configuration",
            "example" : "teamViewerConfiguration"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Defines the intent to enable or disable Team Viewer connection",
            "example" : true
          },
          "sessionTimeout" : {
            "maximum" : 1440,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Number of minutes before the session expires",
            "example" : 15
          },
          "token" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Script token for Team Viewer Connection Configuration",
            "example" : "12843140-nPAX96bsaADH4Gz6K6i2"
          }
        },
        "description" : "Request that updates configuration connection between Jamf Pro and Team Viewer"
      },
      "Country" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "example" : "US"
          },
          "name" : {
            "type" : "string",
            "example" : "United States"
          }
        }
      },
      "CountryCodes" : {
        "type" : "object",
        "properties" : {
          "countryCodes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Country"
            }
          }
        }
      },
      "CreatePath" : {
        "required" : [ "path", "scope" ],
        "type" : "object",
        "properties" : {
          "scope" : {
            "type" : "string",
            "example" : "APP",
            "enum" : [ "APP", "FONT", "PLUGIN" ]
          },
          "path" : {
            "type" : "string",
            "example" : "/Example/Path/"
          }
        }
      },
      "CsaToken" : {
        "type" : "object",
        "properties" : {
          "refreshExpiration" : {
            "type" : "integer",
            "example" : 1584544108
          },
          "scopes" : {
            "type" : "array",
            "example" : [ "read mobile_device", "write mobile_device" ],
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CurrentAccount" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "username" : {
            "type" : "string",
            "example" : "admin"
          },
          "realName" : {
            "type" : "string",
            "example" : "IT Bob"
          },
          "email" : {
            "type" : "string",
            "example" : "ITBob@Jamf.com"
          },
          "preferences" : {
            "$ref" : "#/components/schemas/AccountPreferences"
          },
          "isMultiSiteAdmin" : {
            "type" : "boolean",
            "example" : true
          },
          "accessLevel" : {
            "type" : "string",
            "example" : "FullAccess",
            "enum" : [ "FullAccess", "SiteAccess", "GroupBasedAccess" ]
          },
          "privilegeSet" : {
            "type" : "string",
            "example" : "CUSTOM",
            "enum" : [ "ADMINISTRATOR", "AUDITOR", "ENROLLMENT", "CUSTOM" ]
          },
          "privileges" : {
            "type" : "array",
            "example" : [ "Read SSO Settings", "Delete eBooks" ],
            "items" : {
              "type" : "string"
            }
          },
          "groupIds" : {
            "type" : "array",
            "example" : [ 1, 3 ],
            "items" : {
              "type" : "integer"
            }
          },
          "currentSiteId" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "CurrentAuthorization" : {
        "type" : "object",
        "properties" : {
          "account" : {
            "$ref" : "#/components/schemas/CurrentAccount"
          },
          "sites" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Site"
            }
          },
          "authenticationType" : {
            "type" : "string",
            "example" : "JSS",
            "enum" : [ "JSS", "LDAP", "SAML", "INVITE", "OAUTH", "DEVICE_SIGNATURE", "CLOUD_CONNECTOR", "SYSTEM_ACCOUNT" ]
          }
        }
      },
      "DataRoamingSetting" : {
        "type" : "string",
        "example" : "ENABLE_DATA_ROAMING",
        "enum" : [ "ENABLE_DATA_ROAMING", "DISABLE_DATA_ROAMING" ]
      },
      "DatabasePassword" : {
        "required" : [ "password" ],
        "type" : "object",
        "properties" : {
          "password" : {
            "minLength" : 1,
            "type" : "string",
            "format" : "password",
            "writeOnly" : true,
            "example" : "12345"
          }
        }
      },
      "DayOfWeek" : {
        "type" : "string",
        "enum" : [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ]
      },
      "DeleteUserCommand" : {
        "type" : "object",
        "properties" : {
          "userName" : {
            "type" : "string",
            "example" : "user123"
          },
          "forceDeletion" : {
            "type" : "boolean",
            "example" : true
          },
          "deleteAllUsers" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "Department" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "name" : {
            "maxLength" : 225,
            "minLength" : 1,
            "type" : "string",
            "example" : "Department of Redundancy Department"
          }
        }
      },
      "DepartmentsSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 3
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Department"
            }
          }
        }
      },
      "DeploymentTask" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "82"
          },
          "computerId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "111"
          },
          "computerName" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Polka dot Stratocaster"
          },
          "version" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "2.3.4"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "example" : "2021-05-07T21:20:34.35Z"
          },
          "status" : {
            "type" : "string",
            "description" : "Status of this Jamf Connect deployment task. \"Command\" below refers to an `InstallEnterpriseApplication` command. Tasks that are not finished (i.e., `COMPLETE` or `GAVE_UP`) are evaluated once every thirty minutes, so the status value for a device may lag behind a successful Jamf Connect package install up to thirty minutes. * `COMMAND_QUEUED` - command has been queued * `NO_COMMAND` - command has not yet been queued * `PENDING_MANIFEST` - task is waiting to obtain a valid package manifest before a command can be queued * `COMPLETE` - command has been completed successfully * `GAVE_UP` - the command failed with an error or the device did not process it in a reasonable amount of time * `UNKNOWN` - unknown; tasks in this state will be evaluated\n",
            "example" : "COMPLETE",
            "enum" : [ "COMMAND_QUEUED", "NO_COMMAND", "PENDING_MANIFEST", "COMPLETE", "GAVE_UP", "UNKNOWN" ]
          }
        }
      },
      "DeploymentTaskSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 13
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeploymentTask"
            }
          }
        }
      },
      "DeprecatedConfigurationRequest" : {
        "required" : [ "server" ],
        "type" : "object",
        "properties" : {
          "server" : {
            "$ref" : "#/components/schemas/DeprecatedServerRequest"
          },
          "mappings" : {
            "$ref" : "#/components/schemas/CloudLdapMappingsRequest"
          }
        },
        "description" : "An old Cloud Identity Provider configuration for requests"
      },
      "DeprecatedConfigurationResponse" : {
        "required" : [ "id", "server" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "minimum" : 1001,
            "type" : "string",
            "example" : "1001"
          },
          "server" : {
            "$ref" : "#/components/schemas/DeprecatedServerResponse"
          },
          "mappings" : {
            "$ref" : "#/components/schemas/CloudLdapMappingsResponse"
          }
        },
        "description" : "An old Cloud Identity Provider configuration for responses"
      },
      "DeprecatedConfigurationSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeprecatedConfigurationResponse"
            }
          }
        },
        "description" : "A list with old Cloud Identity Providers configurations"
      },
      "DeprecatedConfigurationUpdate" : {
        "required" : [ "server" ],
        "type" : "object",
        "properties" : {
          "server" : {
            "$ref" : "#/components/schemas/DeprecatedServerUpdate"
          },
          "mappings" : {
            "$ref" : "#/components/schemas/CloudLdapMappingsRequest"
          }
        },
        "description" : "An old Cloud Identity Provider configuration for updates"
      },
      "DeprecatedServerRequest" : {
        "required" : [ "connectionTimeout", "connectionType", "displayName", "domainName", "enabled", "keystore", "port", "providerName", "searchTimeout", "serverUrl", "useWildcards" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "example" : true
          },
          "providerName" : {
            "type" : "string",
            "example" : "Google"
          },
          "displayName" : {
            "type" : "string",
            "example" : "Google Secure LDAP"
          },
          "serverUrl" : {
            "type" : "string",
            "example" : "ldap.google.com"
          },
          "domainName" : {
            "type" : "string",
            "example" : "jamf.com"
          },
          "port" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "example" : 636
          },
          "keystore" : {
            "$ref" : "#/components/schemas/CloudLdapKeystoreFile"
          },
          "connectionTimeout" : {
            "maximum" : 600.0,
            "minimum" : 5,
            "type" : "integer",
            "example" : 15
          },
          "searchTimeout" : {
            "maximum" : 600.0,
            "minimum" : 5,
            "type" : "integer",
            "example" : 60
          },
          "useWildcards" : {
            "type" : "boolean",
            "example" : true
          },
          "connectionType" : {
            "type" : "string",
            "example" : "LDAPS",
            "enum" : [ "LDAPS", "START_TLS" ]
          }
        },
        "description" : "An old Cloud Identity Provider LDAP server configuration for requests"
      },
      "DeprecatedServerResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1001"
          },
          "enabled" : {
            "type" : "boolean",
            "example" : true
          },
          "providerName" : {
            "type" : "string",
            "example" : "Google"
          },
          "displayName" : {
            "type" : "string",
            "example" : "Google Secure LDAP"
          },
          "serverUrl" : {
            "type" : "string",
            "example" : "ldap.google.com"
          },
          "domainName" : {
            "type" : "string",
            "example" : "jamf.com"
          },
          "port" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "example" : 636
          },
          "keystore" : {
            "$ref" : "#/components/schemas/CloudLdapKeystore"
          },
          "connectionTimeout" : {
            "maximum" : 600.0,
            "minimum" : 5,
            "type" : "integer",
            "example" : 15
          },
          "searchTimeout" : {
            "maximum" : 600.0,
            "minimum" : 5,
            "type" : "integer",
            "example" : 60
          },
          "useWildcards" : {
            "type" : "boolean",
            "example" : true
          },
          "connectionType" : {
            "type" : "string",
            "example" : "LDAPS",
            "enum" : [ "LDAPS", "START_TLS" ]
          }
        },
        "description" : "An old Cloud Identity Provider LDAP server configuration for responses"
      },
      "DeprecatedServerUpdate" : {
        "required" : [ "connectionTimeout", "connectionType", "displayName", "domainName", "enabled", "id", "port", "providerName", "searchTimeout", "serverUrl", "useWildcards" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1001"
          },
          "enabled" : {
            "type" : "boolean",
            "example" : false
          },
          "providerName" : {
            "type" : "string",
            "example" : "Google"
          },
          "displayName" : {
            "type" : "string",
            "example" : "Google Secure LDAP"
          },
          "serverUrl" : {
            "type" : "string",
            "example" : "ldap.google.com"
          },
          "domainName" : {
            "type" : "string",
            "example" : "jamf.com"
          },
          "port" : {
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer",
            "example" : 636
          },
          "keystore" : {
            "$ref" : "#/components/schemas/CloudLdapKeystoreFile"
          },
          "connectionTimeout" : {
            "minimum" : 1,
            "type" : "integer",
            "example" : 15
          },
          "searchTimeout" : {
            "minimum" : 1,
            "type" : "integer",
            "example" : 60
          },
          "useWildcards" : {
            "type" : "boolean",
            "example" : true
          },
          "connectionType" : {
            "type" : "string",
            "example" : "LDAPS",
            "enum" : [ "LDAPS", "START_TLS" ]
          }
        },
        "description" : "An old Cloud Identity Provider LDAP server configuration for updates"
      },
      "DeviceCommunicationSettings" : {
        "type" : "object",
        "properties" : {
          "autoRenewMobileDeviceMdmProfileWhenCaRenewed" : {
            "type" : "boolean",
            "example" : true
          },
          "autoRenewMobileDeviceMdmProfileWhenDeviceIdentityCertExpiring" : {
            "type" : "boolean",
            "example" : true
          },
          "autoRenewComputerMdmProfileWhenCaRenewed" : {
            "type" : "boolean",
            "example" : true
          },
          "autoRenewComputerMdmProfileWhenDeviceIdentityCertExpiring" : {
            "type" : "boolean",
            "example" : true
          },
          "mdmProfileMobileDeviceExpirationLimitInDays" : {
            "type" : "integer",
            "enum" : [ 90, 120, 180 ],
            "default" : 180
          },
          "mdmProfileComputerExpirationLimitInDays" : {
            "type" : "integer",
            "enum" : [ 90, 120, 180 ],
            "default" : 180
          }
        }
      },
      "DeviceComplianceInformation" : {
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "type" : "string",
            "description" : "ID of the device",
            "example" : "1"
          },
          "applicable" : {
            "type" : "boolean",
            "description" : "If device is applicable for compliance calculation",
            "example" : true
          },
          "complianceState" : {
            "type" : "string",
            "description" : "Device compliance state. Possible values are:\n* `UNKNOWN` for unknow compliance state, this usually means that the compliance state is being calculated,\n* `NON_COMPLIANT` for non compliant state,\n* `COMPLIANT` for compliant state\n",
            "example" : "COMPLIANT",
            "enum" : [ "UNKNOWN", "NON_COMPLIANT", "COMPLIANT" ]
          },
          "complianceVendor" : {
            "type" : "string",
            "description" : "Name of the compliance vendor",
            "example" : "Vendor A"
          }
        },
        "description" : "Device compliance information record"
      },
      "DeviceEnrollmentDevice" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1"
          },
          "deviceEnrollmentProgramInstanceId" : {
            "type" : "string",
            "example" : "1"
          },
          "prestageId" : {
            "type" : "string",
            "example" : "1"
          },
          "serialNumber" : {
            "type" : "string",
            "example" : "R7QFDE2YCFN4"
          },
          "description" : {
            "type" : "string",
            "example" : "MBP 15.4"
          },
          "model" : {
            "type" : "string",
            "example" : "Macbook Pro 15 Retina"
          },
          "color" : {
            "type" : "string",
            "example" : "BLACK"
          },
          "assetTag" : {
            "type" : "string",
            "example" : "ACME-1234"
          },
          "profileStatus" : {
            "type" : "string",
            "example" : "ASSIGNED",
            "enum" : [ "EMPTY", "ASSIGNED", "PUSHED", "REMOVED" ]
          },
          "syncState" : {
            "$ref" : "#/components/schemas/AssignRemoveProfileResponseSyncState"
          },
          "profileAssignTime" : {
            "type" : "string",
            "example" : "2000-10-30T18:00:00-00:00"
          },
          "profilePushTime" : {
            "type" : "string",
            "example" : "2000-10-30T18:00:00-00:00"
          },
          "deviceAssignedDate" : {
            "type" : "string",
            "example" : "2000-10-30T18:00:00-00:00"
          }
        }
      },
      "DeviceEnrollmentDeviceSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceEnrollmentDevice"
            }
          }
        }
      },
      "DeviceEnrollmentDisownBody" : {
        "type" : "object",
        "properties" : {
          "devices" : {
            "type" : "array",
            "example" : [ "1a2s3d4f5g", "0o9i8u7y6t" ],
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "DeviceEnrollmentDisownResponse" : {
        "type" : "object",
        "properties" : {
          "devices" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "example" : {
              "a2s3d4f5" : "SUCCESS",
              "0o9i8u7y6t" : "FAILED"
            }
          }
        }
      },
      "DeviceEnrollmentInstance" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "name" : {
            "type" : "string",
            "example" : "Example Device Enrollment Instance"
          },
          "supervisionIdentityId" : {
            "type" : "string",
            "example" : "1"
          },
          "siteId" : {
            "type" : "string",
            "example" : "-1"
          },
          "serverName" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Acme ASM"
          },
          "serverUuid" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "BASD08C11F3C455"
          },
          "adminId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "admin1234"
          },
          "orgName" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Acme Enterprises"
          },
          "orgEmail" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "admin@test.com"
          },
          "orgPhone" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "555-0123"
          },
          "orgAddress" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "124 Conch Street, Bikini Bottom, Pacific Ocean"
          },
          "tokenExpirationDate" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "2000-10-30"
          }
        }
      },
      "DeviceEnrollmentInstanceSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceEnrollmentInstance"
            }
          }
        }
      },
      "DeviceEnrollmentInstanceSyncStatus" : {
        "type" : "object",
        "properties" : {
          "syncState" : {
            "type" : "string",
            "example" : "CONNECTION_ERROR"
          },
          "instanceId" : {
            "type" : "string",
            "example" : "1"
          },
          "timestamp" : {
            "type" : "string",
            "example" : "2019-04-17T14:08:06.706+0000"
          }
        }
      },
      "DeviceEnrollmentPrestage" : {
        "required" : [ "authenticationPrompt", "department", "deviceEnrollmentProgramInstanceId", "displayName", "enrollmentSiteId", "isDefaultPrestage", "isEnableDeviceBasedActivationLock", "isKeepExistingLocationInformation", "isKeepExistingSiteMembership", "isMandatory", "isMdmRemovable", "isPreventActivationLock", "isRequireAuthentication", "locationInformation", "purchasingInformation", "supportEmailAddress", "supportPhoneNumber" ],
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "example" : "Example Mobile Prestage Name"
          },
          "isMandatory" : {
            "type" : "boolean",
            "example" : false
          },
          "isMdmRemovable" : {
            "type" : "boolean",
            "example" : true
          },
          "supportPhoneNumber" : {
            "type" : "string",
            "example" : "5555555555"
          },
          "supportEmailAddress" : {
            "type" : "string",
            "example" : "example@example.com"
          },
          "department" : {
            "type" : "string",
            "example" : "Oxbow"
          },
          "isDefaultPrestage" : {
            "type" : "boolean",
            "example" : false
          },
          "enrollmentSiteId" : {
            "type" : "integer",
            "example" : -1
          },
          "isKeepExistingSiteMembership" : {
            "type" : "boolean",
            "example" : true
          },
          "isKeepExistingLocationInformation" : {
            "type" : "boolean",
            "example" : true
          },
          "isRequireAuthentication" : {
            "type" : "boolean",
            "example" : true
          },
          "authenticationPrompt" : {
            "type" : "string",
            "example" : "LDAP authentication prompt"
          },
          "isPreventActivationLock" : {
            "type" : "boolean",
            "example" : true
          },
          "isEnableDeviceBasedActivationLock" : {
            "type" : "boolean",
            "example" : true
          },
          "deviceEnrollmentProgramInstanceId" : {
            "type" : "integer",
            "example" : 5
          },
          "skipSetupItems" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean"
            },
            "example" : {
              "Location" : true,
              "Privacy" : false
            }
          },
          "locationInformation" : {
            "$ref" : "#/components/schemas/LocationInformation"
          },
          "purchasingInformation" : {
            "$ref" : "#/components/schemas/PrestagePurchasingInformation"
          },
          "anchorCertificates" : {
            "type" : "array",
            "description" : "The Base64 encoded PEM Certificate",
            "items" : {
              "type" : "string",
              "example" : "xNE5HRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
          },
          "enrollmentCustomizationId" : {
            "type" : "integer",
            "example" : 2
          }
        }
      },
      "DeviceEnrollmentPrestageV2" : {
        "required" : [ "authenticationPrompt", "autoAdvanceSetup", "defaultPrestage", "department", "deviceEnrollmentProgramInstanceId", "displayName", "enableDeviceBasedActivationLock", "enrollmentSiteId", "keepExistingLocationInformation", "keepExistingSiteMembership", "locationInformation", "mandatory", "mdmRemovable", "preventActivationLock", "purchasingInformation", "requireAuthentication", "supportEmailAddress", "supportPhoneNumber" ],
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "example" : "Example Mobile Prestage Name"
          },
          "mandatory" : {
            "type" : "boolean",
            "example" : false
          },
          "mdmRemovable" : {
            "type" : "boolean",
            "example" : true
          },
          "supportPhoneNumber" : {
            "type" : "string",
            "example" : "5555555555"
          },
          "supportEmailAddress" : {
            "type" : "string",
            "example" : "example@example.com"
          },
          "department" : {
            "type" : "string",
            "example" : "Oxbow"
          },
          "defaultPrestage" : {
            "type" : "boolean",
            "example" : false
          },
          "enrollmentSiteId" : {
            "type" : "string",
            "example" : "-1"
          },
          "keepExistingSiteMembership" : {
            "type" : "boolean",
            "example" : true
          },
          "keepExistingLocationInformation" : {
            "type" : "boolean",
            "example" : true
          },
          "requireAuthentication" : {
            "type" : "boolean",
            "example" : true
          },
          "authenticationPrompt" : {
            "type" : "string",
            "example" : "LDAP authentication prompt"
          },
          "preventActivationLock" : {
            "type" : "boolean",
            "example" : true
          },
          "enableDeviceBasedActivationLock" : {
            "type" : "boolean",
            "example" : true
          },
          "deviceEnrollmentProgramInstanceId" : {
            "type" : "string",
            "example" : "5"
          },
          "skipSetupItems" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean"
            },
            "example" : {
              "Location" : true,
              "Privacy" : false
            }
          },
          "locationInformation" : {
            "$ref" : "#/components/schemas/LocationInformationV2"
          },
          "purchasingInformation" : {
            "$ref" : "#/components/schemas/PrestagePurchasingInformationV2"
          },
          "anchorCertificates" : {
            "type" : "array",
            "description" : "The Base64 encoded PEM Certificate",
            "items" : {
              "type" : "string",
              "example" : "xNE5HRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
          },
          "enrollmentCustomizationId" : {
            "type" : "string",
            "example" : "2"
          },
          "language" : {
            "type" : "string",
            "example" : "en"
          },
          "region" : {
            "type" : "string",
            "example" : "US"
          },
          "autoAdvanceSetup" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "DeviceEnrollmentToken" : {
        "type" : "object",
        "properties" : {
          "tokenFileName" : {
            "type" : "string",
            "description" : "Optional name of the token to be saved, if no name is provided one will be auto-generated",
            "example" : "Acme MDM Token"
          },
          "encodedToken" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "description" : "The base 64 encoded token",
            "format" : "byte"
          }
        }
      },
      "DiagnosticSubmissionSetting" : {
        "type" : "string",
        "example" : "ENABLE_DIAGNOSTIC_SUBMISSION",
        "enum" : [ "ENABLE_DIAGNOSTIC_SUBMISSION", "DISABLE_DIAGNOSTIC_SUBMISSION" ]
      },
      "Ebook" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1"
          },
          "name" : {
            "type" : "string",
            "example" : "The Neverending API"
          },
          "kind" : {
            "type" : "string",
            "example" : "IBOOKS",
            "enum" : [ "UNKNOWN", "PDF", "EPUB", "IBOOKS" ]
          },
          "url" : {
            "type" : "string",
            "example" : "https://jamf.com/ibooks/the_neverending_api.just_kidding"
          },
          "free" : {
            "type" : "boolean",
            "example" : true
          },
          "version" : {
            "type" : "string",
            "example" : "10.9.0"
          },
          "author" : {
            "type" : "string",
            "example" : "IT Bob"
          },
          "deployAsManaged" : {
            "type" : "boolean",
            "description" : "If true, it will be automatically installed",
            "example" : false
          },
          "installAutomatically" : {
            "type" : "boolean",
            "example" : false
          },
          "categoryId" : {
            "type" : "string",
            "example" : "-1"
          },
          "siteId" : {
            "type" : "string",
            "example" : "-1"
          }
        }
      },
      "EbookExclusions" : {
        "type" : "object",
        "properties" : {
          "computerIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "-1"
            }
          },
          "computerGroupIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "-1"
            }
          },
          "mobileDeviceIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "-1"
            }
          },
          "mobileDeviceGroupIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "-1"
            }
          },
          "buildingIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "-1"
            }
          },
          "departmentIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "-1"
            }
          },
          "userIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "-1"
            }
          },
          "userGroupIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "-1"
            }
          },
          "limitations" : {
            "$ref" : "#/components/schemas/EbookLimitations"
          }
        }
      },
      "EbookLimitations" : {
        "type" : "object",
        "properties" : {
          "networkSegments" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "1"
            }
          },
          "users" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "name" : {
                  "type" : "string",
                  "example" : "admin"
                }
              }
            }
          },
          "userGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "1"
            }
          }
        }
      },
      "EbookScope" : {
        "type" : "object",
        "properties" : {
          "allComputers" : {
            "type" : "boolean",
            "example" : false
          },
          "allMobileDevices" : {
            "type" : "boolean",
            "example" : false
          },
          "allUsers" : {
            "type" : "boolean",
            "example" : false
          },
          "computerIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "-1"
            }
          },
          "computerGroupIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "-1"
            }
          },
          "mobileDeviceIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "-1"
            }
          },
          "mobileDeviceGroupIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "-1"
            }
          },
          "buildingIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "-1"
            }
          },
          "departmentIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "-1"
            }
          },
          "userIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "-1"
            }
          },
          "userGroupIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "-1"
            }
          },
          "classroomIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "-1"
            }
          },
          "limitations" : {
            "$ref" : "#/components/schemas/EbookLimitations"
          },
          "exclusions" : {
            "$ref" : "#/components/schemas/EbookExclusions"
          }
        }
      },
      "EbookSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 3
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Ebook"
            }
          }
        }
      },
      "EnableLostModeCommand" : {
        "type" : "object",
        "properties" : {
          "lostModeMessage" : {
            "type" : "string",
            "example" : "Lost Mode Message"
          },
          "lostModePhone" : {
            "type" : "string",
            "example" : "123-456-7890"
          },
          "lostModeFootnote" : {
            "type" : "string",
            "example" : "This is a footnote"
          }
        }
      },
      "Engage" : {
        "type" : "object",
        "properties" : {
          "isEnabled" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "EnrollmentAccessGroup" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "ldapServerId" : {
            "type" : "integer",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "Grade School Pupils"
          },
          "siteId" : {
            "type" : "integer",
            "example" : 1
          },
          "isEnableEnterpriseEnrollment" : {
            "type" : "boolean",
            "example" : false
          },
          "isEnablePersonalEnrollment" : {
            "type" : "boolean",
            "example" : false
          },
          "isRequireEula" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "EnrollmentAccessGroupPreview" : {
        "required" : [ "ldapServerId", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Autogenerated ID",
            "readOnly" : true,
            "example" : "1"
          },
          "groupId" : {
            "type" : "string",
            "description" : "LDAP Group ID",
            "example" : "1"
          },
          "ldapServerId" : {
            "type" : "string",
            "example" : "1"
          },
          "name" : {
            "type" : "string",
            "example" : "Grade School Pupils"
          },
          "siteId" : {
            "type" : "string",
            "example" : "-1"
          },
          "enterpriseEnrollmentEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "personalEnrollmentEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "requireEula" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "EnrollmentAccessGroupV2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Group ID.",
            "readOnly" : true,
            "example" : "1"
          },
          "ldapServerId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "name" : {
            "type" : "string",
            "example" : "Grade School Pupils"
          },
          "siteId" : {
            "type" : "string",
            "example" : "1"
          },
          "enterpriseEnrollmentEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "personalEnrollmentEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "accountDrivenUserEnrollmentEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "requireEula" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "EnrollmentCustomization" : {
        "required" : [ "description", "displayName", "enrollmentCustomizationBrandingSettings", "siteId" ],
        "type" : "object",
        "properties" : {
          "siteId" : {
            "type" : "integer",
            "example" : 2
          },
          "displayName" : {
            "type" : "string",
            "example" : "Example"
          },
          "description" : {
            "type" : "string",
            "example" : "Example description"
          },
          "enrollmentCustomizationBrandingSettings" : {
            "$ref" : "#/components/schemas/EnrollmentCustomizationBrandingSettings"
          }
        }
      },
      "EnrollmentCustomizationBrandingSettings" : {
        "required" : [ "backgroundColor", "buttonColor", "buttonTextColor", "iconUrl", "textColor" ],
        "type" : "object",
        "properties" : {
          "textColor" : {
            "type" : "string",
            "example" : "0000FF"
          },
          "buttonColor" : {
            "type" : "string",
            "example" : "0000FF"
          },
          "buttonTextColor" : {
            "type" : "string",
            "example" : "0000FF"
          },
          "backgroundColor" : {
            "type" : "string",
            "example" : "0000FF"
          },
          "iconUrl" : {
            "type" : "string",
            "example" : "https://jamfUrl/stored-images?id=1"
          }
        }
      },
      "EnrollmentCustomizationDependencies" : {
        "type" : "object",
        "properties" : {
          "dependencies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnrollmentCustomizationDependency"
            }
          }
        }
      },
      "EnrollmentCustomizationDependency" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Name"
          },
          "humanReadableName" : {
            "type" : "string",
            "example" : "Enrollment Customization"
          },
          "hyperlink" : {
            "type" : "string",
            "example" : "/enrollment-customization/id"
          }
        }
      },
      "EnrollmentCustomizationLdapGroupAccess" : {
        "type" : "object",
        "properties" : {
          "ldapServerId" : {
            "type" : "integer",
            "example" : 1
          },
          "groupName" : {
            "type" : "string",
            "example" : "admins"
          }
        }
      },
      "EnrollmentCustomizationPanel" : {
        "required" : [ "displayName", "rank" ],
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "example" : "A Panel"
          },
          "rank" : {
            "type" : "integer",
            "example" : 0
          }
        }
      },
      "EnrollmentCustomizationPanelLdapAuth" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EnrollmentCustomizationPanel"
        }, {
          "required" : [ "backButtonText", "continueButtonText", "passwordLabel", "title", "usernameLabel" ],
          "type" : "object",
          "properties" : {
            "usernameLabel" : {
              "type" : "string",
              "example" : "Username"
            },
            "passwordLabel" : {
              "type" : "string",
              "example" : "Password"
            },
            "title" : {
              "pattern" : "\\S",
              "type" : "string",
              "example" : "My Ldap Panel"
            },
            "backButtonText" : {
              "type" : "string",
              "example" : "Back"
            },
            "continueButtonText" : {
              "type" : "string",
              "example" : "Continue"
            },
            "ldapGroupAccess" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/EnrollmentCustomizationLdapGroupAccess"
              }
            }
          }
        } ]
      },
      "EnrollmentCustomizationPanelList" : {
        "type" : "object",
        "properties" : {
          "panels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GetEnrollmentCustomizationPanel"
            }
          }
        }
      },
      "EnrollmentCustomizationPanelSsoAuth" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EnrollmentCustomizationPanel"
        }, {
          "required" : [ "groupEnrollmentAccessName", "isGroupEnrollmentAccessEnabled", "isUseJamfConnect", "longNameAttribute", "shortNameAttribute" ],
          "type" : "object",
          "properties" : {
            "isUseJamfConnect" : {
              "type" : "boolean",
              "example" : false
            },
            "longNameAttribute" : {
              "type" : "string",
              "example" : "long name"
            },
            "shortNameAttribute" : {
              "type" : "string",
              "example" : "name"
            },
            "isGroupEnrollmentAccessEnabled" : {
              "type" : "boolean",
              "example" : false
            },
            "groupEnrollmentAccessName" : {
              "type" : "string",
              "example" : "GroupNameA",
              "default" : ""
            }
          }
        } ]
      },
      "EnrollmentCustomizationPanelText" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EnrollmentCustomizationPanel"
        }, {
          "required" : [ "backButtonText", "body", "continueButtonText", "title" ],
          "type" : "object",
          "properties" : {
            "body" : {
              "type" : "string",
              "example" : "Welcome!"
            },
            "subtext" : {
              "type" : "string",
              "example" : "World!"
            },
            "title" : {
              "type" : "string",
              "example" : "My text panel"
            },
            "backButtonText" : {
              "type" : "string",
              "example" : "Back"
            },
            "continueButtonText" : {
              "type" : "string",
              "example" : "Continue"
            }
          }
        } ]
      },
      "EnrollmentCustomizationSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GetEnrollmentCustomization"
            }
          }
        }
      },
      "EnrollmentCustomizationSearchResultsV2" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnrollmentCustomizationV2"
            }
          }
        }
      },
      "EnrollmentCustomizationV2" : {
        "required" : [ "description", "displayName", "enrollmentCustomizationBrandingSettings" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "siteId" : {
            "type" : "string",
            "example" : "2"
          },
          "displayName" : {
            "type" : "string",
            "example" : "Example"
          },
          "description" : {
            "type" : "string",
            "example" : "Example description"
          },
          "enrollmentCustomizationBrandingSettings" : {
            "$ref" : "#/components/schemas/EnrollmentCustomizationBrandingSettings"
          }
        }
      },
      "EnrollmentMethod" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "objectName" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "user@domain.com"
          },
          "objectType" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "User-initiated - no invitation"
          }
        }
      },
      "EnrollmentProcessTextObject" : {
        "type" : "object",
        "properties" : {
          "languageCode" : {
            "type" : "string",
            "example" : "en"
          },
          "name" : {
            "type" : "string",
            "example" : "English"
          },
          "title" : {
            "type" : "string",
            "example" : "Enroll Your Device"
          },
          "loginDescription" : {
            "type" : "string",
            "example" : "Log in to enroll your device."
          },
          "username" : {
            "type" : "string",
            "example" : "admin"
          },
          "password" : {
            "type" : "string",
            "example" : "12345"
          },
          "loginButton" : {
            "type" : "string",
            "example" : "Log in"
          },
          "deviceClassDescription" : {
            "type" : "string",
            "example" : "Specify if this device is institutionally owned or personally owned."
          },
          "deviceClassPersonal" : {
            "type" : "string",
            "example" : "Personally Owned"
          },
          "deviceClassPersonalDescription" : {
            "type" : "string",
            "example" : "For personally owned devices, IT administrators **can**\n\n         *   Lock the device\n         *   Apply institutional settings\n         *   Install and remove institutional data\n         *   Install and remove institutional apps\n\n\n         For personally owned devices, IT administrators **cannot**\n\n         *   Wipe all data and settings from your device\n         *   Track the location of your device\n         *   Remove anything they did not install\n         *   Add/remove configuration profiles\n         *   Add/remove provisioning profiles\n"
          },
          "deviceClassEnterprise" : {
            "type" : "string",
            "example" : "Institutionally Owned"
          },
          "deviceClassEnterpriseDescription" : {
            "type" : "string",
            "example" : "For institutionally owned devices, IT administrators **can**\n\n         *   Wipe all data and settings from the device\n         *   Lock the device\n         *   Remove the passcode\n         *   Apply institutional settings\n         *   Install and remove institutional data\n         *   Install and remove institutional apps\n         *   Add/remove configuration profiles\n         *   Add/remove provisioning profiles\n\n         For institutionally owned devices, IT administrators **cannot**:\n\n         *   Remove anything they did not install\n"
          },
          "deviceClassButton" : {
            "type" : "string",
            "example" : "Enroll"
          },
          "personalEula" : {
            "type" : "string",
            "example" : "Personal Eula"
          },
          "enterpriseEula" : {
            "type" : "string",
            "example" : "Enterprise Eula"
          },
          "eulaButton" : {
            "type" : "string",
            "example" : "Accept"
          },
          "siteDescription" : {
            "type" : "string",
            "example" : "Select the site to use for enrolling this computer or mobile device."
          },
          "certificateText" : {
            "type" : "string",
            "example" : "To continue with enrollment, you need to install the CA certificate for your organization."
          },
          "certificateButton" : {
            "type" : "string",
            "example" : "Continue"
          },
          "certificateProfileName" : {
            "type" : "string",
            "example" : "CA Certificate"
          },
          "certificateProfileDescription" : {
            "type" : "string",
            "example" : "CA Certificate for mobile device management"
          },
          "personalText" : {
            "type" : "string",
            "example" : "To continue with enrollment, you need to install the MDM profile."
          },
          "personalButton" : {
            "type" : "string",
            "example" : "Enroll"
          },
          "personalProfileName" : {
            "type" : "string",
            "example" : "MDM Profile"
          },
          "personalProfileDescription" : {
            "type" : "string",
            "example" : "MDM Profile for mobile device management"
          },
          "userEnrollmentText" : {
            "type" : "string",
            "default" : "Enter your Managed Apple id to install the MDM Profile."
          },
          "userEnrollmentButton" : {
            "type" : "string",
            "default" : "Continue"
          },
          "userEnrollmentProfileName" : {
            "type" : "string",
            "default" : "MDM Profile"
          },
          "userEnrollmentProfileDescription" : {
            "type" : "string",
            "default" : "MDM Profile for mobile device management"
          },
          "enterpriseText" : {
            "type" : "string",
            "example" : "To continue with enrollment, you need to install the MDM profile for your organization."
          },
          "enterpriseButton" : {
            "type" : "string",
            "example" : "Continue"
          },
          "enterpriseProfileName" : {
            "type" : "string",
            "example" : "MDM Profile"
          },
          "enterpriseProfileDescription" : {
            "type" : "string",
            "example" : "MDM Profile for mobile device management"
          },
          "enterprisePending" : {
            "type" : "string",
            "example" : "To continue with enrollment, install the CA Certificate and MDM Profile that were downloaded to your computer."
          },
          "quickAddText" : {
            "type" : "string",
            "example" : "Download and install this package."
          },
          "quickAddButton" : {
            "type" : "string",
            "example" : "Download"
          },
          "quickAddName" : {
            "type" : "string",
            "default" : "QuickAdd.pkg"
          },
          "quickAddPending" : {
            "type" : "string",
            "example" : "Install the downloaded QuickAdd.pkg."
          },
          "completeMessage" : {
            "type" : "string",
            "example" : "The enrollment process is complete."
          },
          "failedMessage" : {
            "type" : "string",
            "example" : "The enrollment process could not be completed. Contact your IT administrator."
          },
          "tryAgainButton" : {
            "type" : "string",
            "example" : "Try Again"
          },
          "checkNowButton" : {
            "type" : "string",
            "example" : "Proceed"
          },
          "checkEnrollmentMessage" : {
            "type" : "string",
            "example" : "Tap \"Proceed\" to view the enrollment status for this device."
          },
          "logoutButton" : {
            "type" : "string",
            "example" : "Log Out"
          }
        }
      },
      "EnrollmentSettings" : {
        "required" : [ "flushMdmCommandsOnReenroll", "isEnabledMacosEnterpriseEnrollment", "managementUsername", "passwordType", "personalDeviceEnrollmentType" ],
        "type" : "object",
        "properties" : {
          "isInstallSingleProfile" : {
            "type" : "boolean",
            "default" : false
          },
          "isSigningMdmProfileEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "mdmSigningCertificate" : {
            "$ref" : "#/components/schemas/MdmSigningCertificate"
          },
          "isRestrictReenrollment" : {
            "type" : "boolean",
            "default" : false
          },
          "isFlushLocationInformation" : {
            "type" : "boolean",
            "default" : false
          },
          "isFlushLocationHistoryInformation" : {
            "type" : "boolean",
            "default" : false
          },
          "isFlushPolicyHistory" : {
            "type" : "boolean",
            "default" : false
          },
          "isFlushExtensionAttributes" : {
            "type" : "boolean",
            "default" : false
          },
          "flushMdmCommandsOnReenroll" : {
            "type" : "string",
            "enum" : [ "DELETE_NOTHING", "DELETE_ERRORS", "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED", "DELETE_EVERYTHING" ],
            "default" : "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED"
          },
          "isEnabledMacosEnterpriseEnrollment" : {
            "type" : "boolean",
            "default" : false
          },
          "managementUsername" : {
            "type" : "string",
            "example" : "radmin",
            "default" : ""
          },
          "managementPassword" : {
            "type" : "string",
            "default" : "null"
          },
          "passwordType" : {
            "type" : "string",
            "enum" : [ "STATIC", "RANDOM" ],
            "default" : "STATIC"
          },
          "randomPasswordLength" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 8
          },
          "isCreateManagementAccount" : {
            "type" : "boolean",
            "default" : true
          },
          "isHideManagementAccount" : {
            "type" : "boolean",
            "default" : false
          },
          "isAllowSshOnlyManagementAccount" : {
            "type" : "boolean",
            "default" : false
          },
          "isEnsureSshRunning" : {
            "type" : "boolean",
            "default" : true
          },
          "isLaunchSelfService" : {
            "type" : "boolean",
            "default" : false
          },
          "isSignQuickAdd" : {
            "type" : "boolean",
            "default" : false
          },
          "developerCertificateIdentity" : {
            "$ref" : "#/components/schemas/CertificateIdentityV1"
          },
          "developerCertificateIdentityDetails" : {
            "$ref" : "#/components/schemas/CertificateDetails"
          },
          "mdmSigningCertificateDetails" : {
            "$ref" : "#/components/schemas/CertificateDetails"
          },
          "isEnableIosEnterpriseEnrollment" : {
            "type" : "boolean",
            "default" : true
          },
          "isEnableIosPersonalEnrollment" : {
            "type" : "boolean",
            "default" : false
          },
          "personalDeviceEnrollmentType" : {
            "type" : "string",
            "enum" : [ "USERENROLLMENT", "PERSONALDEVICEPROFILES" ],
            "default" : "PERSONALDEVICEPROFILES"
          }
        }
      },
      "EnrollmentSettingsV2" : {
        "required" : [ "managementUsername" ],
        "type" : "object",
        "properties" : {
          "installSingleProfile" : {
            "type" : "boolean",
            "default" : false
          },
          "signingMdmProfileEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "mdmSigningCertificate" : {
            "$ref" : "#/components/schemas/CertificateIdentityV2"
          },
          "restrictReenrollment" : {
            "type" : "boolean",
            "default" : false
          },
          "flushLocationInformation" : {
            "type" : "boolean",
            "default" : false
          },
          "flushLocationHistoryInformation" : {
            "type" : "boolean",
            "default" : false
          },
          "flushPolicyHistory" : {
            "type" : "boolean",
            "default" : false
          },
          "flushExtensionAttributes" : {
            "type" : "boolean",
            "default" : false
          },
          "flushMdmCommandsOnReenroll" : {
            "type" : "string",
            "enum" : [ "DELETE_NOTHING", "DELETE_ERRORS", "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED", "DELETE_EVERYTHING" ],
            "default" : "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED"
          },
          "macOsEnterpriseEnrollmentEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "managementUsername" : {
            "type" : "string",
            "example" : "radmin",
            "default" : ""
          },
          "managementPassword" : {
            "type" : "string",
            "writeOnly" : true,
            "default" : "null"
          },
          "managementPasswordSet" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : true
          },
          "passwordType" : {
            "type" : "string",
            "enum" : [ "STATIC", "RANDOM" ],
            "default" : "STATIC"
          },
          "randomPasswordLength" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 8
          },
          "createManagementAccount" : {
            "type" : "boolean",
            "default" : true
          },
          "hideManagementAccount" : {
            "type" : "boolean",
            "default" : false
          },
          "allowSshOnlyManagementAccount" : {
            "type" : "boolean",
            "default" : false
          },
          "ensureSshRunning" : {
            "type" : "boolean",
            "default" : true
          },
          "launchSelfService" : {
            "type" : "boolean",
            "default" : false
          },
          "signQuickAdd" : {
            "type" : "boolean",
            "default" : false
          },
          "developerCertificateIdentity" : {
            "$ref" : "#/components/schemas/CertificateIdentityV2"
          },
          "developerCertificateIdentityDetails" : {
            "$ref" : "#/components/schemas/CertificateDetails"
          },
          "mdmSigningCertificateDetails" : {
            "$ref" : "#/components/schemas/CertificateDetails"
          },
          "iosEnterpriseEnrollmentEnabled" : {
            "type" : "boolean",
            "default" : true
          },
          "iosPersonalEnrollmentEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "personalDeviceEnrollmentType" : {
            "type" : "string",
            "enum" : [ "USERENROLLMENT", "PERSONALDEVICEPROFILES" ],
            "default" : "PERSONALDEVICEPROFILES"
          },
          "accountDrivenUserEnrollmentEnabled" : {
            "type" : "boolean",
            "default" : false
          }
        }
      },
      "ExportField" : {
        "type" : "object",
        "properties" : {
          "fieldName" : {
            "type" : "string",
            "description" : "English name of the field to be exported.",
            "example" : "id"
          },
          "fieldLabelOverride" : {
            "type" : "string",
            "description" : "Name which should be used for the label in the response - can be in any language. When null the fieldName itself will be used as the label.",
            "nullable" : true,
            "example" : "identiteit"
          }
        },
        "description" : "Field to be included in the export operation."
      },
      "ExportParameters" : {
        "type" : "object",
        "properties" : {
          "page" : {
            "type" : "integer",
            "nullable" : true,
            "example" : 0,
            "default" : 0
          },
          "pageSize" : {
            "type" : "integer",
            "nullable" : true,
            "example" : 100,
            "default" : 100
          },
          "sort" : {
            "type" : "array",
            "description" : "Sorting criteria in the format: [<property>[:asc/desc]. Default direction when not stated is ascending.",
            "nullable" : true,
            "example" : [ "id:asc" ],
            "items" : {
              "type" : "string"
            },
            "default" : [ "id:desc" ]
          },
          "filter" : {
            "type" : "string",
            "nullable" : true,
            "example" : "id>=100"
          },
          "fields" : {
            "type" : "array",
            "description" : "Used to change default order or ignore some of the fields. When null or empty array, all fields will be exported.",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/ExportField"
            }
          }
        }
      },
      "ExtensionAttribute" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "Example EA"
          },
          "type" : {
            "type" : "string",
            "example" : "STRING",
            "enum" : [ "STRING", "INTEGER", "DATE" ]
          },
          "value" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "EA Value"
            }
          },
          "isExtensionAttributeCollectionAllowed" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "ExtensionAttributeV2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "name" : {
            "type" : "string",
            "example" : "Example EA"
          },
          "type" : {
            "type" : "string",
            "example" : "STRING",
            "enum" : [ "STRING", "INTEGER", "DATE" ]
          },
          "value" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "EA Value"
            }
          },
          "extensionAttributeCollectionAllowed" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "ExternalRecipient" : {
        "required" : [ "email", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "minLength" : 1,
            "type" : "string",
            "example" : "Bob Exampleman"
          },
          "email" : {
            "minLength" : 1,
            "type" : "string",
            "example" : "bob@example.com"
          }
        }
      },
      "FileAttachment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "receipt.pdf"
          }
        }
      },
      "FileAttachmentDelete" : {
        "type" : "object",
        "properties" : {
          "ids" : {
            "type" : "array",
            "example" : [ 1, 3 ],
            "items" : {
              "type" : "integer"
            }
          }
        }
      },
      "FileAttachmentV2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1"
          },
          "name" : {
            "type" : "string",
            "example" : "receipt.pdf"
          }
        }
      },
      "Filter" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string",
            "example" : "name"
          },
          "operator" : {
            "type" : "string",
            "example" : "EQUALS",
            "enum" : [ "EQUALS", "NOT_EQUALS", "GREATER_THAN", "LESS_THAN", "GREATER_THAN_EQUAL", "LESS_THAN_EQUAL" ]
          },
          "value" : {
            "type" : "string",
            "example" : "value"
          }
        }
      },
      "FontPath" : {
        "required" : [ "id", "path" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "2"
          },
          "path" : {
            "type" : "string",
            "example" : "/Example/Path/To/Font/"
          }
        }
      },
      "GetComputerPrestage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComputerPrestage"
        }, {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer",
              "example" : 1
            },
            "profileUUID" : {
              "type" : "string",
              "example" : "29d-a8d8f-b8sdjndf-dsa9"
            },
            "siteId" : {
              "type" : "integer",
              "example" : 5
            },
            "versionLock" : {
              "type" : "integer",
              "example" : 0
            }
          }
        } ]
      },
      "GetComputerPrestageV2" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComputerPrestageV2"
        }, {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "readOnly" : true,
              "example" : "1"
            },
            "profileUuid" : {
              "type" : "string",
              "example" : "29d-a8d8f-b8sdjndf-dsa9"
            },
            "siteId" : {
              "type" : "string",
              "example" : "5"
            },
            "versionLock" : {
              "type" : "integer",
              "example" : 0
            }
          }
        } ]
      },
      "GetEnrollmentCustomization" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EnrollmentCustomization"
        }, {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer",
              "example" : 1
            }
          }
        } ]
      },
      "GetEnrollmentCustomizationPanel" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EnrollmentCustomizationPanel"
        }, {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer",
              "example" : 2
            },
            "type" : {
              "type" : "string",
              "example" : "text"
            }
          }
        } ]
      },
      "GetEnrollmentCustomizationPanelLdapAuth" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EnrollmentCustomizationPanelLdapAuth"
        }, {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer",
              "example" : 2
            },
            "type" : {
              "type" : "string",
              "example" : "ldap"
            }
          }
        } ]
      },
      "GetEnrollmentCustomizationPanelSsoAuth" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EnrollmentCustomizationPanelSsoAuth"
        }, {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer",
              "example" : 2
            },
            "type" : {
              "type" : "string",
              "example" : "sso"
            }
          }
        } ]
      },
      "GetEnrollmentCustomizationPanelText" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EnrollmentCustomizationPanelText"
        }, {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer",
              "example" : 2
            },
            "type" : {
              "type" : "string",
              "example" : "text"
            }
          }
        } ]
      },
      "GetMobileDevicePrestage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MobileDevicePrestage"
        }, {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "integer",
              "example" : 1
            },
            "profileUUID" : {
              "type" : "string",
              "example" : "29d-a8d8f-b8sdjndf-dsa9"
            },
            "siteId" : {
              "type" : "integer",
              "example" : 5
            },
            "versionLock" : {
              "type" : "integer",
              "example" : 0
            }
          }
        } ]
      },
      "GetMobileDevicePrestageV2" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MobileDevicePrestageV2"
        }, {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "example" : "1"
            },
            "profileUuid" : {
              "type" : "string",
              "example" : "29d-a8d8f-b8sdjndf-dsa9"
            },
            "siteId" : {
              "type" : "string",
              "example" : "5"
            },
            "versionLock" : {
              "type" : "integer",
              "example" : 0
            }
          }
        } ]
      },
      "GroupMappings" : {
        "required" : [ "groupID", "groupName", "groupUuid", "objectClassLimitation", "objectClasses", "searchBase", "searchScope" ],
        "type" : "object",
        "properties" : {
          "objectClassLimitation" : {
            "type" : "string",
            "example" : "ANY_OBJECT_CLASSES",
            "enum" : [ "ANY_OBJECT_CLASSES", "ALL_OBJECT_CLASSES" ]
          },
          "objectClasses" : {
            "type" : "string",
            "example" : "groupOfNames"
          },
          "searchBase" : {
            "type" : "string",
            "example" : "ou=Groups"
          },
          "searchScope" : {
            "type" : "string",
            "example" : "ALL_SUBTREES",
            "enum" : [ "ALL_SUBTREES", "FIRST_LEVEL_ONLY" ]
          },
          "groupID" : {
            "type" : "string",
            "example" : "cn"
          },
          "groupName" : {
            "type" : "string",
            "example" : "cn"
          },
          "groupUuid" : {
            "type" : "string",
            "example" : "gidNumber"
          }
        },
        "description" : "Cloud Identity Provider user group mappings configuration"
      },
      "GroupMembership" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "string",
            "example" : "1"
          },
          "groupName" : {
            "type" : "string",
            "example" : "groupOne"
          },
          "smartGroup" : {
            "type" : "boolean",
            "description" : "Indicates that group is smart group",
            "example" : true
          }
        }
      },
      "GroupTestSearch" : {
        "type" : "object",
        "properties" : {
          "distinguishedName" : {
            "type" : "string",
            "example" : "cn=users,ou=Groups,dc=jamf,dc=com"
          },
          "id" : {
            "type" : "string",
            "example" : "users"
          },
          "uuid" : {
            "type" : "string",
            "example" : "121100023"
          },
          "serverId" : {
            "type" : "string",
            "example" : "1001"
          },
          "name" : {
            "type" : "string",
            "example" : "users"
          }
        }
      },
      "GroupTestSearchRequest" : {
        "required" : [ "groupname" ],
        "type" : "object",
        "properties" : {
          "groupname" : {
            "type" : "string",
            "example" : "users"
          }
        }
      },
      "GroupTestSearchResponse" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GroupTestSearch"
            }
          }
        }
      },
      "HistorySearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectHistory"
            }
          }
        }
      },
      "HistorySearchResultsV1" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectHistoryV1"
            }
          }
        }
      },
      "HrefResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1"
          },
          "href" : {
            "type" : "string",
            "example" : "https://yourJamfProUrl.jamf/api/v1/resource/1"
          }
        }
      },
      "IconResponse" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string",
            "example" : "https://stage-ics.services.jamfcloud.com/icon/hash_c315ef577b84505de1bfcb50b0c4b1c963da30b2a805f84b24ad09f282b7fad4"
          },
          "id" : {
            "type" : "integer",
            "example" : 5
          }
        }
      },
      "IdAndName" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "A name"
          }
        }
      },
      "IdAndNameV2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1"
          },
          "name" : {
            "type" : "string",
            "example" : "A name"
          }
        }
      },
      "Ids" : {
        "type" : "object",
        "properties" : {
          "ids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "1"
            }
          }
        }
      },
      "Initialize" : {
        "required" : [ "activationCode", "institutionName", "isEulaAccepted", "jssUrl", "password", "username" ],
        "type" : "object",
        "properties" : {
          "activationCode" : {
            "maxLength" : 39,
            "minLength" : 39,
            "type" : "string",
            "example" : "VFAB-YDAB-DFAB-UDAB-DEAB-EFAB-ABAB-DEAB"
          },
          "institutionName" : {
            "minLength" : 1,
            "type" : "string",
            "example" : "Jamf"
          },
          "isEulaAccepted" : {
            "type" : "boolean",
            "example" : false
          },
          "username" : {
            "minLength" : 1,
            "type" : "string",
            "example" : "admin"
          },
          "password" : {
            "minLength" : 1,
            "type" : "string",
            "format" : "password",
            "writeOnly" : true,
            "example" : "12345"
          },
          "email" : {
            "type" : "string",
            "example" : "ITBob@jamf.com"
          },
          "jssUrl" : {
            "minLength" : 1,
            "type" : "string",
            "example" : "https://jamf.jamfcloud.com"
          }
        },
        "description" : "Initial Jamf Pro setup data"
      },
      "InitializeV1" : {
        "required" : [ "activationCode", "eulaAccepted", "institutionName", "jssUrl", "password", "username" ],
        "type" : "object",
        "properties" : {
          "activationCode" : {
            "maxLength" : 39,
            "minLength" : 39,
            "type" : "string",
            "example" : "VFAB-YDAB-DFAB-UDAB-DEAB-EFAB-ABAB-DEAB"
          },
          "institutionName" : {
            "minLength" : 1,
            "type" : "string",
            "example" : "Jamf"
          },
          "eulaAccepted" : {
            "type" : "boolean",
            "example" : false
          },
          "username" : {
            "minLength" : 1,
            "type" : "string",
            "example" : "admin"
          },
          "password" : {
            "minLength" : 1,
            "type" : "string",
            "format" : "password",
            "writeOnly" : true,
            "example" : "12345"
          },
          "email" : {
            "type" : "string",
            "example" : "ITBob@jamf.com"
          },
          "jssUrl" : {
            "minLength" : 1,
            "type" : "string",
            "example" : "https://jamf.jamfcloud.com"
          }
        },
        "description" : "Initial Jamf Pro setup data"
      },
      "InstallPackage" : {
        "required" : [ "manifest" ],
        "type" : "object",
        "properties" : {
          "manifest" : {
            "$ref" : "#/components/schemas/PackageManifest"
          },
          "installAsManaged" : {
            "type" : "boolean",
            "example" : false
          },
          "devices" : {
            "type" : "array",
            "example" : [ 1, 2, 3 ],
            "items" : {
              "type" : "integer"
            }
          },
          "groupId" : {
            "type" : "string",
            "example" : "1"
          }
        },
        "description" : "Either devices or groupId must be provided"
      },
      "IntegerWrapper" : {
        "type" : "integer"
      },
      "InternalRecipient" : {
        "required" : [ "accountId" ],
        "type" : "object",
        "properties" : {
          "accountId" : {
            "pattern" : "^\\d+$",
            "type" : "string",
            "example" : "1"
          },
          "frequency" : {
            "type" : "string",
            "example" : "DAILY",
            "enum" : [ "DAILY" ],
            "default" : "DAILY"
          }
        }
      },
      "InventoryInformation" : {
        "type" : "object",
        "properties" : {
          "managedComputers" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Number of managed computers in inventory.",
            "readOnly" : true,
            "example" : 1200
          },
          "unmanagedComputers" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Number of unmanaged computers in inventory.",
            "readOnly" : true,
            "example" : 1100
          },
          "managedDevices" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Number of managed devices in inventory.",
            "readOnly" : true,
            "example" : 1200
          },
          "unmanagedDevices" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Number of unmanaged devices in inventory.",
            "readOnly" : true,
            "example" : 1100
          }
        },
        "description" : "Jamf Pro Inventory statistics object. Aggregates managed/unmanaged devices and computers counters"
      },
      "InventoryPreloadCsvError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "example" : "SIZE_EXCEEDED"
          },
          "description" : {
            "type" : "string",
            "example" : "Field 'vendor' exceeds max size 60"
          },
          "field" : {
            "type" : "string",
            "example" : "vendor"
          },
          "value" : {
            "type" : "string",
            "example" : "abcdefghijklmnopqrstuwxyzabcdefghijklmnopqrstuwxyzabcdefghijklmnopqrstuwxyz"
          },
          "serialNumber" : {
            "type" : "string",
            "example" : "R7QFDE2YCFN4"
          },
          "line" : {
            "type" : "integer",
            "example" : 5
          },
          "fieldSize" : {
            "type" : "integer",
            "example" : 60
          },
          "deviceType" : {
            "type" : "string",
            "example" : "Computer"
          }
        }
      },
      "InventoryPreloadCsvValidationError" : {
        "type" : "object",
        "properties" : {
          "httpStatus" : {
            "type" : "integer",
            "description" : "HTTP status of the response",
            "example" : 400
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InventoryPreloadCsvValidationErrorCause"
            }
          }
        }
      },
      "InventoryPreloadCsvValidationErrorCause" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiErrorCause"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "example" : "abcdefghijklmnopqrstuwxyzabcdefghijklmnopqrstuwxyzabcdefghijklmnopqrstuwxyz"
            },
            "serialNumber" : {
              "type" : "string",
              "example" : "R7QFDE2YCFN4"
            },
            "line" : {
              "type" : "integer",
              "example" : 5
            },
            "fieldSize" : {
              "type" : "integer",
              "example" : 60
            },
            "deviceType" : {
              "type" : "string",
              "example" : "Computer"
            }
          }
        } ]
      },
      "InventoryPreloadCsvValidationSuccess" : {
        "type" : "object",
        "properties" : {
          "recordCount" : {
            "type" : "integer",
            "example" : 10
          }
        }
      },
      "InventoryPreloadExtensionAttribute" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "foo"
          },
          "value" : {
            "type" : "string",
            "example" : "42"
          }
        }
      },
      "InventoryPreloadExtensionAttributeColumn" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "eaColumn1"
          },
          "fullName" : {
            "type" : "string",
            "example" : "Column 1"
          }
        }
      },
      "InventoryPreloadExtensionAttributeColumnResult" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 10
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InventoryPreloadExtensionAttributeColumn"
            }
          }
        }
      },
      "InventoryPreloadInvalidCsvResponse" : {
        "type" : "object",
        "properties" : {
          "httpsStatus" : {
            "type" : "integer",
            "example" : 400
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InventoryPreloadCsvError"
            }
          }
        }
      },
      "InventoryPreloadRecord" : {
        "required" : [ "deviceType", "serialNumber" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          },
          "serialNumber" : {
            "type" : "string",
            "example" : "C02L29ECF8J1"
          },
          "deviceType" : {
            "type" : "string",
            "example" : "Computer",
            "enum" : [ "Computer", "Mobile Device", "Unknown" ]
          },
          "username" : {
            "type" : "string",
            "example" : "admin"
          },
          "fullName" : {
            "type" : "string",
            "example" : "Name"
          },
          "emailAddress" : {
            "type" : "string",
            "example" : "ITBob@jamf.com"
          },
          "phoneNumber" : {
            "type" : "string",
            "example" : "555-555-5555"
          },
          "position" : {
            "type" : "string",
            "example" : "IT Team Lead"
          },
          "department" : {
            "type" : "string",
            "example" : "IT"
          },
          "building" : {
            "type" : "string",
            "example" : "Eau Claire"
          },
          "room" : {
            "type" : "string",
            "example" : "4th Floor - Quad 3"
          },
          "poNumber" : {
            "type" : "string",
            "example" : "8675309"
          },
          "poDate" : {
            "type" : "string",
            "example" : "2019-02-04T21:09:31.661Z"
          },
          "warrantyExpiration" : {
            "type" : "string",
            "example" : "2012-07-21"
          },
          "appleCareId" : {
            "type" : "string",
            "example" : "5678"
          },
          "lifeExpectancy" : {
            "type" : "string",
            "example" : "5 years"
          },
          "purchasePrice" : {
            "type" : "string",
            "example" : "$399"
          },
          "purchasingContact" : {
            "type" : "string",
            "example" : "Nick in IT"
          },
          "purchasingAccount" : {
            "type" : "string",
            "example" : "IT Budget"
          },
          "leaseExpiration" : {
            "type" : "string",
            "example" : "2015-06-19"
          },
          "barCode1" : {
            "type" : "string",
            "example" : "123456789"
          },
          "barCode2" : {
            "type" : "string",
            "example" : "123456789"
          },
          "assetTag" : {
            "type" : "string",
            "example" : "ABCDEFG12345"
          },
          "vendor" : {
            "type" : "string",
            "example" : "Apple"
          },
          "extensionAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InventoryPreloadExtensionAttribute"
            }
          }
        }
      },
      "InventoryPreloadRecordSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 10
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InventoryPreloadRecord"
            }
          }
        }
      },
      "InventoryPreloadRecordSearchResultsV2" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 10
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InventoryPreloadRecordV2"
            }
          }
        }
      },
      "InventoryPreloadRecordV2" : {
        "required" : [ "deviceType", "serialNumber" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "serialNumber" : {
            "type" : "string",
            "example" : "C02L29ECF8J1"
          },
          "deviceType" : {
            "type" : "string",
            "example" : "Computer",
            "enum" : [ "Computer", "Mobile Device", "Unknown" ]
          },
          "username" : {
            "type" : "string",
            "nullable" : true,
            "example" : "admin"
          },
          "fullName" : {
            "type" : "string",
            "nullable" : true,
            "example" : "Name"
          },
          "emailAddress" : {
            "type" : "string",
            "nullable" : true,
            "example" : "ITBob@jamf.com"
          },
          "phoneNumber" : {
            "type" : "string",
            "nullable" : true,
            "example" : "555-555-5555"
          },
          "position" : {
            "type" : "string",
            "nullable" : true,
            "example" : "IT Team Lead"
          },
          "department" : {
            "type" : "string",
            "nullable" : true,
            "example" : "IT"
          },
          "building" : {
            "type" : "string",
            "nullable" : true,
            "example" : "Eau Claire"
          },
          "room" : {
            "type" : "string",
            "nullable" : true,
            "example" : "4th Floor - Quad 3"
          },
          "poNumber" : {
            "type" : "string",
            "nullable" : true,
            "example" : "8675309"
          },
          "poDate" : {
            "type" : "string",
            "nullable" : true,
            "example" : "2019-02-04T21:09:31.661Z"
          },
          "warrantyExpiration" : {
            "type" : "string",
            "nullable" : true,
            "example" : "2012-07-21"
          },
          "appleCareId" : {
            "type" : "string",
            "nullable" : true,
            "example" : "5678"
          },
          "lifeExpectancy" : {
            "type" : "string",
            "nullable" : true,
            "example" : "5 years"
          },
          "purchasePrice" : {
            "type" : "string",
            "nullable" : true,
            "example" : "$399"
          },
          "purchasingContact" : {
            "type" : "string",
            "nullable" : true,
            "example" : "Nick in IT"
          },
          "purchasingAccount" : {
            "type" : "string",
            "nullable" : true,
            "example" : "IT Budget"
          },
          "leaseExpiration" : {
            "type" : "string",
            "nullable" : true,
            "example" : "2015-06-19"
          },
          "barCode1" : {
            "type" : "string",
            "nullable" : true,
            "example" : "123456789"
          },
          "barCode2" : {
            "type" : "string",
            "nullable" : true,
            "example" : "123456789"
          },
          "assetTag" : {
            "type" : "string",
            "nullable" : true,
            "example" : "ABCDEFG12345"
          },
          "vendor" : {
            "type" : "string",
            "nullable" : true,
            "example" : "Apple"
          },
          "extensionAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InventoryPreloadExtensionAttribute"
            }
          }
        }
      },
      "IosBrandingConfiguration" : {
        "required" : [ "brandingName", "brandingNameColorCode", "headerBackgroundColorCode", "menuIconColorCode", "statusBarTextColor" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "brandingName" : {
            "type" : "string",
            "example" : "Self Service"
          },
          "iconId" : {
            "type" : "integer",
            "example" : 1
          },
          "headerBackgroundColorCode" : {
            "type" : "string",
            "example" : "FFFFFF"
          },
          "menuIconColorCode" : {
            "type" : "string",
            "example" : "000001"
          },
          "brandingNameColorCode" : {
            "type" : "string",
            "example" : "000000"
          },
          "statusBarTextColor" : {
            "type" : "string",
            "example" : "dark"
          }
        }
      },
      "IosBrandingSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IosBrandingConfiguration"
            }
          }
        }
      },
      "IosDetails" : {
        "type" : "object",
        "properties" : {
          "model" : {
            "type" : "string",
            "example" : "iPad 5th Generation (Wi-Fi)"
          },
          "modelIdentifier" : {
            "type" : "string",
            "example" : "ipad6,11"
          },
          "modelNumber" : {
            "type" : "string",
            "example" : "MP2F2LL"
          },
          "isSupervised" : {
            "type" : "boolean",
            "example" : true
          },
          "batteryLevel" : {
            "type" : "integer",
            "example" : 100
          },
          "lastBackupTimestamp" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-15T16:39:56.307Z"
          },
          "capacityMb" : {
            "type" : "integer",
            "example" : 27503
          },
          "availableMb" : {
            "type" : "integer",
            "example" : 26646
          },
          "percentageUsed" : {
            "type" : "integer",
            "example" : 3
          },
          "isShared" : {
            "type" : "boolean",
            "example" : false
          },
          "isDeviceLocatorServiceEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "isDoNotDisturbEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "isCloudBackupEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "lastCloudBackupTimestamp" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-15T16:39:56.307Z"
          },
          "isLocationServicesEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "isITunesStoreAccountActive" : {
            "type" : "boolean",
            "example" : false
          },
          "isBleCapable" : {
            "type" : "boolean",
            "example" : false
          },
          "computer" : {
            "$ref" : "#/components/schemas/IdAndName"
          },
          "purchasing" : {
            "$ref" : "#/components/schemas/Purchasing"
          },
          "security" : {
            "$ref" : "#/components/schemas/Security"
          },
          "network" : {
            "$ref" : "#/components/schemas/Network"
          },
          "applications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MobileDeviceApplication"
            }
          },
          "certificates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MobileDeviceCertificateV1"
            }
          },
          "ebooks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MobileDeviceEbook"
            }
          },
          "configurationProfiles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ConfigurationProfile"
            }
          },
          "provisioningProfiles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProvisioningProfile"
            }
          },
          "attachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MobileDeviceAttachment"
            }
          }
        },
        "description" : "will be populated if the type is ios."
      },
      "IosDetailsV2" : {
        "type" : "object",
        "properties" : {
          "model" : {
            "type" : "string",
            "example" : "iPad 5th Generation (Wi-Fi)"
          },
          "modelIdentifier" : {
            "type" : "string",
            "example" : "ipad6,11"
          },
          "modelNumber" : {
            "type" : "string",
            "example" : "MP2F2LL"
          },
          "supervised" : {
            "type" : "boolean",
            "example" : true
          },
          "batteryLevel" : {
            "type" : "integer",
            "example" : 100
          },
          "lastBackupTimestamp" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-15T16:39:56Z"
          },
          "capacityMb" : {
            "type" : "integer",
            "example" : 27503
          },
          "availableMb" : {
            "type" : "integer",
            "example" : 26646
          },
          "percentageUsed" : {
            "type" : "integer",
            "example" : 3
          },
          "shared" : {
            "type" : "boolean",
            "example" : false
          },
          "deviceLocatorServiceEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "doNotDisturbEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "cloudBackupEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "lastCloudBackupTimestamp" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-15T16:39:56.307Z"
          },
          "locationServicesEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "iTunesStoreAccountActive" : {
            "type" : "boolean",
            "example" : false
          },
          "bleCapable" : {
            "type" : "boolean",
            "example" : false
          },
          "computer" : {
            "$ref" : "#/components/schemas/IdAndNameV2"
          },
          "purchasing" : {
            "$ref" : "#/components/schemas/PurchasingV2"
          },
          "security" : {
            "$ref" : "#/components/schemas/SecurityV2"
          },
          "network" : {
            "$ref" : "#/components/schemas/NetworkV2"
          },
          "applications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MobileDeviceApplication"
            }
          },
          "certificates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MobileDeviceCertificateV2"
            }
          },
          "ebooks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MobileDeviceEbook"
            }
          },
          "configurationProfiles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ConfigurationProfile"
            }
          },
          "provisioningProfiles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProvisioningProfile"
            }
          },
          "attachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MobileDeviceAttachmentV2"
            }
          }
        },
        "description" : "will be populated if the type is ios."
      },
      "JamfApplicationResponse" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "example" : "Jamf Connect"
          },
          "releaseHistoryUrl" : {
            "type" : "string",
            "example" : "https://docs.jamf.com/jamf-connect/administrator-guide/Release_History.html"
          },
          "artifacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/JamfPackageResponse"
            }
          }
        }
      },
      "JamfNationCredentials" : {
        "type" : "object",
        "properties" : {
          "emailAddress" : {
            "type" : "string",
            "example" : "emailAddress@mail.com"
          },
          "password" : {
            "type" : "string",
            "example" : "12345"
          }
        }
      },
      "JamfPackageResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "B84F9904-868B-4862-A8F5-33706AADED71"
          },
          "filename" : {
            "type" : "string",
            "example" : "JamfProtect-1.2.2.pkg"
          },
          "version" : {
            "type" : "string",
            "example" : "1.2.2"
          },
          "created" : {
            "type" : "string",
            "example" : "1970-01-01T00:00:00Z"
          },
          "url" : {
            "type" : "string",
            "example" : "https://example.jamf.com/path/to/JamfProtect-1.2.2.pkg"
          }
        }
      },
      "JamfProInformation" : {
        "type" : "object",
        "properties" : {
          "isVppTokenEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "isDepAccountEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "isByodEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "isUserMigrationEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "isCloudDeploymentsEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "isPatchEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "isSsoSamlEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "isSmtpEnabled" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "JamfProServerUrl" : {
        "required" : [ "unsecuredEnrollmentUrl", "url" ],
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string",
            "example" : "https://example.com:8443"
          },
          "unsecuredEnrollmentUrl" : {
            "type" : "string",
            "example" : "http://example.com"
          }
        }
      },
      "JamfProVersion" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string",
            "example" : "10.9.0"
          }
        }
      },
      "JamfProtectPlan" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "b999dfd3-8fde-4bf2-aa56-b167c8b68071"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "d265dfd3-8fde-4bf2-aa56-b167c8b68069"
          },
          "name" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Main Plan"
          },
          "description" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Plan for the majority of the company's computers"
          },
          "profileId" : {
            "type" : "integer",
            "readOnly" : true,
            "example" : 12
          },
          "profileName" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Main Plan (Jamf Protect)"
          },
          "scopeDescription" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "All Computers"
          }
        }
      },
      "LanguageCode" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "example" : "en"
          },
          "name" : {
            "type" : "string",
            "example" : "English"
          }
        }
      },
      "LdapConfigurationRequest" : {
        "required" : [ "cloudIdPCommon", "server" ],
        "type" : "object",
        "properties" : {
          "cloudIdPCommon" : {
            "$ref" : "#/components/schemas/CloudIdPCommonRequest"
          },
          "server" : {
            "$ref" : "#/components/schemas/CloudLdapServerRequest"
          },
          "mappings" : {
            "$ref" : "#/components/schemas/CloudLdapMappingsRequest"
          }
        },
        "description" : "A Cloud Identity Provider LDAP configuration for requests"
      },
      "LdapConfigurationResponse" : {
        "required" : [ "cloudIdPCommon", "server" ],
        "type" : "object",
        "properties" : {
          "cloudIdPCommon" : {
            "$ref" : "#/components/schemas/CloudIdPCommon"
          },
          "server" : {
            "$ref" : "#/components/schemas/CloudLdapServerResponse"
          },
          "mappings" : {
            "$ref" : "#/components/schemas/CloudLdapMappingsResponse"
          }
        },
        "description" : "A Cloud Identity Provider LDAP configuration for responses"
      },
      "LdapConfigurationUpdate" : {
        "required" : [ "cloudIdPCommon", "server" ],
        "type" : "object",
        "properties" : {
          "cloudIdPCommon" : {
            "$ref" : "#/components/schemas/CloudIdPCommon"
          },
          "server" : {
            "$ref" : "#/components/schemas/CloudLdapServerUpdate"
          },
          "mappings" : {
            "$ref" : "#/components/schemas/CloudLdapMappingsRequest"
          }
        },
        "description" : "A Cloud Identity Provider LDAP configuration for updates"
      },
      "LdapGroup" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1"
          },
          "uuid" : {
            "type" : "string",
            "example" : "89AF33FC-123C-1231-AEFD-9C3ED123AFCC"
          },
          "ldapServerId" : {
            "type" : "integer",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "Grade School Teachers"
          },
          "distinguishedName" : {
            "type" : "string",
            "example" : "Grade School Teachers"
          }
        },
        "description" : "An LDAP group."
      },
      "LdapGroupSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 3
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LdapGroup"
            }
          }
        }
      },
      "LdapServer" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "Server name"
          }
        },
        "description" : "An LDAP Server."
      },
      "LinkedConnectProfile" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "d265dfd3-8fde-4bf2-aa56-b167c8b68069"
          },
          "profileId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "d265dfd3-8fde-4bf2-aa56-b167c8b68069"
          },
          "profileName" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Best Plans of Mice"
          },
          "profileScopeDescription" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Plan for all of the mouse computers at our org"
          },
          "version" : {
            "type" : "string",
            "description" : "Must be a valid Jamf Connect version 2.3.0 or higher. Versions are listed here `https://www.jamf.com/resources/product-documentation/jamf-connect-administrators-guide/`",
            "example" : "2.3.0"
          },
          "autoDeploymentType" : {
            "type" : "string",
            "description" : "Determines how the server will behave regarding application updates and installs on the devices that have the configuration profile installed. * `PATCH_UPDATES` - Server handles initial installation of the application and any patch updates. * `MINOR_AND_PATCH_UPDATES` - Server handles initial installation of the application and any patch and minor updates. * `INITIAL_INSTALLATION_ONLY` - Server only handles initial installation of the application. Updates will have to be done manually. * `NONE` - Server does not handle any installations or updates for the application. Version is ignored for this type.\n",
            "enum" : [ "PATCH_UPDATES", "MINOR_AND_PATCH_UPDATES", "INITIAL_INSTALLATION_ONLY", "NONE" ],
            "default" : "NONE"
          }
        }
      },
      "LinkedConnectProfileSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 13
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LinkedConnectProfile"
            }
          }
        }
      },
      "Locale" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "English (United States)"
          },
          "identifier" : {
            "type" : "string",
            "example" : "en_US"
          }
        }
      },
      "Location" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "example" : "admin"
          },
          "realName" : {
            "type" : "string",
            "example" : "IT Bob"
          },
          "emailAddress" : {
            "type" : "string",
            "example" : "ITBob@jamf.com"
          },
          "position" : {
            "type" : "string",
            "example" : "IT Team Lead"
          },
          "phoneNumber" : {
            "type" : "string",
            "example" : "555-555-5555"
          },
          "department" : {
            "$ref" : "#/components/schemas/IdAndName"
          },
          "building" : {
            "$ref" : "#/components/schemas/IdAndName"
          },
          "room" : {
            "type" : "string",
            "example" : "4th Floor - Quad 3"
          }
        }
      },
      "LocationInformation" : {
        "required" : [ "buildingId", "departmentId", "email", "id", "phone", "position", "realname", "room", "username", "versionLock" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "example" : "name"
          },
          "realname" : {
            "type" : "string",
            "example" : "realName"
          },
          "phone" : {
            "type" : "string",
            "example" : "123-456-7890"
          },
          "email" : {
            "type" : "string",
            "example" : "test@jamf.com"
          },
          "room" : {
            "type" : "string",
            "example" : "room"
          },
          "position" : {
            "type" : "string",
            "example" : "postion"
          },
          "departmentId" : {
            "type" : "integer",
            "example" : 1
          },
          "buildingId" : {
            "type" : "integer",
            "example" : 1
          },
          "id" : {
            "type" : "integer",
            "example" : 0
          },
          "versionLock" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "LocationInformationV2" : {
        "required" : [ "buildingId", "departmentId", "email", "id", "phone", "position", "realname", "room", "username", "versionLock" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "example" : "name"
          },
          "realname" : {
            "type" : "string",
            "example" : "realName"
          },
          "phone" : {
            "type" : "string",
            "example" : "123-456-7890"
          },
          "email" : {
            "type" : "string",
            "example" : "test@jamf.com"
          },
          "room" : {
            "type" : "string",
            "example" : "room"
          },
          "position" : {
            "type" : "string",
            "example" : "postion"
          },
          "departmentId" : {
            "type" : "string",
            "example" : "1"
          },
          "buildingId" : {
            "type" : "string",
            "example" : "1"
          },
          "id" : {
            "type" : "string",
            "example" : "-1"
          },
          "versionLock" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "LocationV2" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "example" : "admin"
          },
          "realName" : {
            "type" : "string",
            "example" : "IT Bob"
          },
          "emailAddress" : {
            "type" : "string",
            "example" : "ITBob@jamf.com"
          },
          "position" : {
            "type" : "string",
            "example" : "IT Team Lead"
          },
          "phoneNumber" : {
            "type" : "string",
            "example" : "555-555-5555"
          },
          "departmentId" : {
            "type" : "string",
            "example" : "1"
          },
          "buildingId" : {
            "type" : "string",
            "example" : "1"
          },
          "room" : {
            "type" : "string",
            "example" : "4th Floor - Quad 3"
          }
        }
      },
      "LogOutUserCommand" : {
        "type" : "object"
      },
      "MacOsBrandingConfiguration" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "applicationName" : {
            "type" : "string",
            "example" : "Self Service"
          },
          "brandingName" : {
            "type" : "string",
            "example" : "Self Service"
          },
          "brandingNameSecondary" : {
            "type" : "string",
            "example" : "Self Service"
          },
          "iconId" : {
            "type" : "integer",
            "example" : 1
          },
          "brandingHeaderImageId" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "MacOsBrandingSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MacOsBrandingConfiguration"
            }
          }
        }
      },
      "MacOsManagedSoftwareUpdate" : {
        "required" : [ "deviceIds" ],
        "type" : "object",
        "properties" : {
          "deviceIds" : {
            "type" : "array",
            "example" : [ "1", "2", "3", "4" ],
            "items" : {
              "type" : "string"
            }
          },
          "maxDeferrals" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Allow users to defer the update the provided number of times before macOS forces the update. If a value is provided, the Software Update will use the InstallLater install action.",
            "example" : 7
          },
          "version" : {
            "type" : "string",
            "description" : "If no value is provided, the version will default to latest version based on device eligibility.",
            "example" : "12.0.1"
          },
          "updateAction" : {
            "type" : "string",
            "description" : "MaxDeferral is ignored if using the DownloadOnly install action.",
            "example" : "DOWNLOAD_AND_INSTALL",
            "enum" : [ "DOWNLOAD_AND_INSTALL", "DOWNLOAD_ONLY" ]
          }
        }
      },
      "MacOsManagedSoftwareUpdateResponse" : {
        "type" : "object",
        "properties" : {
          "responses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HrefResponse"
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApiErrorCause"
            }
          }
        }
      },
      "Markdown" : {
        "type" : "object",
        "properties" : {
          "markdown" : {
            "type" : "string",
            "example" : "**markdown**"
          }
        }
      },
      "MdmClientType" : {
        "type" : "string",
        "example" : "MOBILE_DEVICE",
        "enum" : [ "MOBILE_DEVICE", "TV", "COMPUTER", "COMPUTER_USER", "MOBILE_DEVICE_USER" ]
      },
      "MdmCommand" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "example" : "aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937"
          },
          "dateSent" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-05-16T20:43:43.945Z"
          },
          "client" : {
            "$ref" : "#/components/schemas/MdmCommandClient"
          },
          "commandState" : {
            "$ref" : "#/components/schemas/MdmCommandState"
          },
          "commandType" : {
            "$ref" : "#/components/schemas/MdmCommandType"
          }
        }
      },
      "MdmCommandClient" : {
        "type" : "object",
        "properties" : {
          "managementId" : {
            "type" : "string",
            "example" : "aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937"
          },
          "clientType" : {
            "$ref" : "#/components/schemas/MdmClientType"
          }
        }
      },
      "MdmCommandRequest" : {
        "type" : "object",
        "properties" : {
          "clientData" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MdmCommandClient"
            }
          },
          "commandData" : {
            "type" : "object",
            "properties" : {
              "commandType" : {
                "$ref" : "#/components/schemas/MdmCommandType"
              }
            },
            "discriminator" : {
              "propertyName" : "commandType"
            },
            "oneOf" : [ {
              "$ref" : "#/components/schemas/EnableLostModeCommand"
            }, {
              "$ref" : "#/components/schemas/DeleteUserCommand"
            }, {
              "$ref" : "#/components/schemas/LogOutUserCommand"
            }, {
              "$ref" : "#/components/schemas/SettingsCommand"
            }, {
              "$ref" : "#/components/schemas/RestartDeviceCommand"
            }, {
              "$ref" : "#/components/schemas/SetRecoveryLockCommand"
            } ]
          }
        }
      },
      "MdmCommandState" : {
        "type" : "string",
        "example" : "PENDING",
        "enum" : [ "PENDING", "ACKNOWLEDGED", "NOT_NOW", "ERROR" ]
      },
      "MdmCommandType" : {
        "type" : "string",
        "example" : "ENABLE_LOST_MODE",
        "enum" : [ "DEVICE_LOCATION", "ENABLE_LOST_MODE", "ACTIVATION_LOCK_BYPASS_CODE", "CLEAR_ACTIVATION_LOCK_BYPASS_CODE", "ACCOUNT_CONFIGURATION", "REFRESH_CELLULAR_PLANS", "SETTINGS", "CONTENT_CACHING_INFORMATION", "UNMANAGE_DEVICE", "ERASE_DEVICE", "DEVICE_LOCK", "CLEAR_PASSCODE", "DELETE_USER", "DEVICE_INFORMATION", "SHUT_DOWN_DEVICE", "RESTART_DEVICE", "INSTALL_BYO_PROFILE", "REMOVE_PROFILE", "INSTALL_PROFILE", "REINSTALL_PROFILE", "INSTALL_PROVISIONING_PROFILE", "PROFILE_LIST", "REMOVE_PROVISIONING_PROFILE", "CERTIFICATE_LIST", "INSTALLED_APPLICATION_LIST", "MANAGED_APPLICATION_LIST", "INSTALL_APPLICATION", "INSTALL_ENTERPRISE_APPLICATION", "INSTALL_PACKAGE", "REMOVE_APPLICATION", "MANAGED_MEDIA_LIST", "INSTALL_MEDIA", "REMOVE_MEDIA", "APPLY_REDEMPTION_CODE", "SETTINGS_ENABLE_PERSONAL_HOTSPOT", "SETTINGS_DISABLE_PERSONAL_HOTSPOT", "UPDATE_INVENTORY", "WALLPAPER", "DEVICE_CONFIGURED", "RESTRICTIONS", "ENABLE_REMOTE_DESKTOP", "DISABLE_REMOTE_DESKTOP", "SECURITY_INFO", "MARK_AS_UNMANAGED", "QUERY_RESPONSES", "AVAILABLE_OS_UPDATES", "PROVISIONING_PROFILE_LIST", "SCHEDULE_OS_UPDATE", "OS_UPDATE_STATUS", "INVITE_TO_PROGRAM", "PUSH_TRIGGER", "CLEAR_RESTRICTIONS_PASSWORD", "BLANK_PUSH", "CORPORATE_WIPE", "DEVICE_INFO_ACCOUNT_HASH", "DEVICE_INFO_ITUNES_ACTIVE", "DEVICE_INFO_LAST_CLOUD_BACKUP_DATE", "DEVICE_INFO_ACTIVE_MANAGED_USERS", "DEVICE_NAME", "ENABLE_ACTIVATION_LOCK", "DISABLE_ACTIVATION_LOCK", "LAST_CLOUD_BACKUP_DATE", "MARK_AS_CORPORATE_WIPE", "REQUEST_MIRRORING", "SETTINGS_DISABLE_DATA_ROAMING", "SETTINGS_DISABLE_VOICE_ROAMING", "SETTINGS_DISABLE_DIAGNOSTIC_SUBMISSION", "SETTINGS_DISABLE_APP_ANALYTICS", "SETTINGS_ENABLE_DATA_ROAMING", "SETTINGS_ENABLE_VOICE_ROAMING", "SETTINGS_ENABLE_DIAGNOSTIC_SUBMISSION", "SETTINGS_ENABLE_APP_ANALYTICS", "SETTINGS_ENABLE_BLUETOOTH", "SETTINGS_DISABLE_BLUETOOTH", "SETTINGS_MOBILE_DEVICE_PER_APP_VPN", "SETTINGS_MOBILE_DEVICE_APPLICATION_ATTRIBUTES", "STOP_MIRRORING", "PASSCODE_LOCK_GRACE_PERIOD", "SCHEDULE_OS_UPDATE_SCAN", "PLAY_LOST_MODE_SOUND", "DISABLE_LOST_MODE", "LOG_OUT_USER", "USER_LIST", "VALIDATE_APPLICATIONS", "UNLOCK_USER_ACCOUNT", "SET_RECOVERY_LOCK", "UNKNOWN" ]
      },
      "MdmSigningCertificate" : {
        "type" : "object",
        "properties" : {
          "filename" : {
            "type" : "string",
            "default" : ""
          },
          "keystorePassword" : {
            "type" : "string",
            "default" : ""
          },
          "identityKeystore" : {
            "type" : "string",
            "description" : "The the certificate base 64 encoded. Will not be returned on a GET.",
            "default" : ""
          },
          "md5Sum" : {
            "type" : "string",
            "description" : "The md5 checksum of the certificate file. Intended to be used in verifification the cert being used to sign MDM profiles.",
            "default" : ""
          }
        }
      },
      "MembershipMappings" : {
        "required" : [ "groupMembershipMapping" ],
        "type" : "object",
        "properties" : {
          "groupMembershipMapping" : {
            "type" : "string",
            "example" : "memberOf"
          }
        },
        "description" : "Cloud Identity Provider user group membership mappings configuration"
      },
      "MembershipTestSearchRequest" : {
        "required" : [ "groupname", "username" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "example" : "admin"
          },
          "groupname" : {
            "type" : "string",
            "example" : "users"
          }
        }
      },
      "MembershipTestSearchResponse" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "example" : "admin"
          },
          "isMember" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "MemcachedEndpoints" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "name" : {
            "type" : "string",
            "example" : "Jamf Fake Example Memcache"
          },
          "hostName" : {
            "type" : "string",
            "example" : "https://memcache.jamf.com"
          },
          "port" : {
            "type" : "integer",
            "example" : 9001
          },
          "enabled" : {
            "type" : "boolean",
            "example" : true
          },
          "jssCacheConfigurationId" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "MobileDevice" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "iPad"
          },
          "serialNumber" : {
            "type" : "string",
            "example" : "DMQVGC0DHLA0"
          },
          "wifiMacAddress" : {
            "type" : "string",
            "example" : "C4:84:66:92:78:00"
          },
          "udid" : {
            "type" : "string",
            "example" : "0dad565fb40b010a9e490440188063a378721069"
          },
          "phoneNumber" : {
            "type" : "string",
            "example" : "651-555-5555 Ext111"
          },
          "model" : {
            "type" : "string",
            "example" : "iPad 5th Generation (Wi-Fi)"
          },
          "modelIdentifier" : {
            "type" : "string",
            "example" : "iPad6,11"
          },
          "username" : {
            "type" : "string",
            "example" : "admin"
          },
          "type" : {
            "type" : "string",
            "example" : "ios",
            "enum" : [ "ios", "appleTv", "android", "unknown" ]
          },
          "softwareUpdateDeviceId" : {
            "type" : "string",
            "example" : "J132AP"
          }
        }
      },
      "MobileDeviceApplication" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string",
            "example" : "com.apple.airport.mobileairportutility"
          },
          "name" : {
            "type" : "string",
            "example" : "AirPort Utility"
          },
          "version" : {
            "type" : "string",
            "example" : "135.24"
          },
          "shortVersion" : {
            "type" : "string",
            "example" : "7.0"
          }
        }
      },
      "MobileDeviceAttachment" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Bob's Attachment"
          },
          "id" : {
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          }
        }
      },
      "MobileDeviceAttachmentV2" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Bob's Attachment"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          }
        }
      },
      "MobileDeviceCertificateV1" : {
        "type" : "object",
        "properties" : {
          "commonName" : {
            "type" : "string",
            "example" : "3B259E4B-FAD5-4860-B1DD-336ADA786EBA"
          },
          "isIdentity" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "MobileDeviceCertificateV2" : {
        "type" : "object",
        "properties" : {
          "commonName" : {
            "type" : "string",
            "example" : "3B259E4B-FAD5-4860-B1DD-336ADA786EBA"
          },
          "identity" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "MobileDeviceDetails" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "Jon's iPad"
          },
          "assetTag" : {
            "type" : "string",
            "example" : "12345"
          },
          "lastInventoryUpdateTimestamp" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-15T16:39:56.307Z"
          },
          "osVersion" : {
            "type" : "string",
            "example" : "11.4"
          },
          "osBuild" : {
            "type" : "string",
            "example" : "15F79"
          },
          "softwareUpdateDeviceId" : {
            "type" : "string",
            "example" : "J132AP"
          },
          "serialNumber" : {
            "type" : "string",
            "example" : "DMQVGC0DHLF0"
          },
          "udid" : {
            "type" : "string",
            "example" : "0dad565fb40b010a9e490440188063a378721069"
          },
          "ipAddress" : {
            "type" : "string",
            "example" : "10.0.0.1"
          },
          "wifiMacAddress" : {
            "type" : "string",
            "example" : "ee:00:7c:f0:e5:ff"
          },
          "bluetoothMacAddress" : {
            "type" : "string",
            "example" : "ee:00:7c:f0:e5:aa"
          },
          "isManaged" : {
            "type" : "boolean",
            "example" : true
          },
          "initialEntryTimestamp" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-15T16:39:56.307Z"
          },
          "lastEnrollmentTimestamp" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-15T16:39:56.307Z"
          },
          "deviceOwnershipLevel" : {
            "type" : "string",
            "example" : "institutional"
          },
          "site" : {
            "$ref" : "#/components/schemas/IdAndName"
          },
          "extensionAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtensionAttribute"
            }
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "type" : {
            "type" : "string",
            "description" : "Based on the value of this either ios, appleTv, android objects will be populated.",
            "example" : "ios",
            "enum" : [ "ios", "appleTv", "android", "unknown" ]
          },
          "ios" : {
            "$ref" : "#/components/schemas/IosDetails"
          },
          "appleTv" : {
            "$ref" : "#/components/schemas/AppleTvDetails"
          },
          "android" : {
            "$ref" : "#/components/schemas/AndroidDetails"
          }
        }
      },
      "MobileDeviceDetailsGetV2" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MobileDeviceDetailsV2"
        }, {
          "type" : "object",
          "properties" : {
            "managementId" : {
              "type" : "string",
              "readOnly" : true,
              "example" : "73226fb6-61df-4c10-9552-eb9bc353d507"
            }
          }
        } ]
      },
      "MobileDeviceDetailsV2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "name" : {
            "type" : "string",
            "description" : "Mobile device name.",
            "example" : "Jon's iPad"
          },
          "enforceName" : {
            "type" : "boolean",
            "description" : "Enforce the mobile device name. Device must be supervised. If set to true, Jamf Pro will revert the Mobile Device Name to the ‘name’ value each time the device checks in.",
            "example" : false
          },
          "assetTag" : {
            "type" : "string",
            "example" : "12345"
          },
          "lastInventoryUpdateTimestamp" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-15T16:39:56Z"
          },
          "osVersion" : {
            "type" : "string",
            "example" : "11.4"
          },
          "osBuild" : {
            "type" : "string",
            "example" : "15F79"
          },
          "softwareUpdateDeviceId" : {
            "type" : "string",
            "example" : "J132AP"
          },
          "serialNumber" : {
            "type" : "string",
            "example" : "DMQVGC0DHLF0"
          },
          "udid" : {
            "type" : "string",
            "example" : "0dad565fb40b010a9e490440188063a378721069"
          },
          "ipAddress" : {
            "type" : "string",
            "example" : "10.0.0.1"
          },
          "wifiMacAddress" : {
            "type" : "string",
            "example" : "ee:00:7c:f0:e5:ff"
          },
          "bluetoothMacAddress" : {
            "type" : "string",
            "example" : "ee:00:7c:f0:e5:aa"
          },
          "managed" : {
            "type" : "boolean",
            "example" : true
          },
          "timeZone" : {
            "type" : "string",
            "example" : "Europe/Warsaw"
          },
          "initialEntryTimestamp" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-15T16:39:56.307Z"
          },
          "lastEnrollmentTimestamp" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-15T16:39:56.307Z"
          },
          "mdmProfileExpirationTimestamp" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-15T16:39:56.307Z"
          },
          "deviceOwnershipLevel" : {
            "type" : "string",
            "example" : "institutional"
          },
          "enrollmentMethod" : {
            "type" : "string",
            "example" : "User-initiated - no invitation"
          },
          "site" : {
            "$ref" : "#/components/schemas/V1Site"
          },
          "extensionAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtensionAttributeV2"
            }
          },
          "location" : {
            "$ref" : "#/components/schemas/LocationV2"
          },
          "type" : {
            "type" : "string",
            "description" : "Based on the value of this either ios, appleTv, android objects will be populated.",
            "example" : "ios",
            "enum" : [ "ios", "tvos", "unknown" ]
          },
          "ios" : {
            "$ref" : "#/components/schemas/IosDetailsV2"
          },
          "tvos" : {
            "$ref" : "#/components/schemas/TvOsDetails"
          }
        }
      },
      "MobileDeviceEbook" : {
        "type" : "object",
        "properties" : {
          "author" : {
            "type" : "string",
            "example" : "Homer J Simpson"
          },
          "title" : {
            "type" : "string",
            "example" : "The Odyssey"
          },
          "version" : {
            "type" : "string",
            "example" : "0.1"
          }
        }
      },
      "MobileDeviceExtensionAttributeResults" : {
        "type" : "object",
        "properties" : {
          "extensionAttributes" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "name" : {
                  "type" : "string",
                  "example" : "extAttribute1"
                }
              }
            }
          }
        }
      },
      "MobileDeviceGroup" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "All Managed iPads"
          },
          "isSmartGroup" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "MobileDevicePrestage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DeviceEnrollmentPrestage"
        }, {
          "required" : [ "isAllowPairing", "isAutoAdvanceSetup", "isConfigureDeviceBeforeSetupAssistant", "isMultiUser", "isSupervised", "maximumSharedAccounts" ],
          "type" : "object",
          "properties" : {
            "isAllowPairing" : {
              "type" : "boolean",
              "example" : true
            },
            "isMultiUser" : {
              "type" : "boolean",
              "example" : true
            },
            "isSupervised" : {
              "type" : "boolean",
              "example" : true
            },
            "maximumSharedAccounts" : {
              "type" : "integer",
              "example" : 10
            },
            "isAutoAdvanceSetup" : {
              "type" : "boolean",
              "example" : true
            },
            "isConfigureDeviceBeforeSetupAssistant" : {
              "type" : "boolean",
              "example" : true
            },
            "language" : {
              "type" : "string",
              "example" : "en"
            },
            "region" : {
              "type" : "string",
              "example" : "US"
            },
            "names" : {
              "$ref" : "#/components/schemas/MobileDevicePrestageNames"
            }
          }
        } ]
      },
      "MobileDevicePrestageName" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "deviceName" : {
            "type" : "string",
            "example" : "iPad"
          },
          "isUsed" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "MobileDevicePrestageNameV2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1"
          },
          "deviceName" : {
            "type" : "string",
            "example" : "iPad"
          },
          "used" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "MobileDevicePrestageNames" : {
        "type" : "object",
        "properties" : {
          "assignNamesUsing" : {
            "type" : "string",
            "example" : "List of Names"
          },
          "prestageDeviceNames" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MobileDevicePrestageName"
            }
          },
          "deviceNamePrefix" : {
            "type" : "string",
            "example" : "prefix"
          },
          "deviceNameSuffix" : {
            "type" : "string",
            "example" : "suffix"
          },
          "singleDeviceName" : {
            "type" : "string",
            "example" : "name"
          },
          "isManageNames" : {
            "type" : "boolean",
            "example" : true
          },
          "isDeviceNamingConfigured" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "MobileDevicePrestageNamesV2" : {
        "type" : "object",
        "properties" : {
          "assignNamesUsing" : {
            "type" : "string",
            "example" : "List of Names"
          },
          "prestageDeviceNames" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MobileDevicePrestageNameV2"
            }
          },
          "deviceNamePrefix" : {
            "type" : "string",
            "example" : "prefix"
          },
          "deviceNameSuffix" : {
            "type" : "string",
            "example" : "suffix"
          },
          "singleDeviceName" : {
            "type" : "string",
            "example" : "name"
          },
          "manageNames" : {
            "type" : "boolean",
            "example" : true
          },
          "deviceNamingConfigured" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "MobileDevicePrestageSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GetMobileDevicePrestage"
            }
          }
        }
      },
      "MobileDevicePrestageSearchResultsV2" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GetMobileDevicePrestageV2"
            }
          }
        }
      },
      "MobileDevicePrestageV2" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DeviceEnrollmentPrestageV2"
        }, {
          "required" : [ "allowPairing", "configureDeviceBeforeSetupAssistant", "maximumSharedAccounts", "multiUser", "sendTimezone", "storageQuotaSizeMegabytes", "supervised", "timezone", "useStorageQuotaSize" ],
          "type" : "object",
          "properties" : {
            "allowPairing" : {
              "type" : "boolean",
              "example" : true
            },
            "multiUser" : {
              "type" : "boolean",
              "example" : true
            },
            "supervised" : {
              "type" : "boolean",
              "example" : true
            },
            "maximumSharedAccounts" : {
              "type" : "integer",
              "example" : 10
            },
            "configureDeviceBeforeSetupAssistant" : {
              "type" : "boolean",
              "example" : true
            },
            "names" : {
              "$ref" : "#/components/schemas/MobileDevicePrestageNamesV2"
            },
            "sendTimezone" : {
              "type" : "boolean",
              "example" : true
            },
            "timezone" : {
              "type" : "string",
              "example" : "America/Chicago"
            },
            "storageQuotaSizeMegabytes" : {
              "type" : "integer",
              "example" : 4096
            },
            "useStorageQuotaSize" : {
              "type" : "boolean",
              "example" : true
            },
            "temporarySessionOnly" : {
              "type" : "boolean",
              "example" : false
            },
            "enforceTemporarySessionTimeout" : {
              "type" : "boolean",
              "example" : false
            },
            "temporarySessionTimeout" : {
              "type" : "integer",
              "example" : 30
            },
            "enforceUserSessionTimeout" : {
              "type" : "boolean",
              "example" : false
            },
            "userSessionTimeout" : {
              "type" : "integer",
              "example" : 30
            }
          }
        } ]
      },
      "MobileDeviceSearchParams" : {
        "type" : "object",
        "properties" : {
          "pageNumber" : {
            "type" : "integer",
            "example" : 1
          },
          "pageSize" : {
            "type" : "integer",
            "example" : 100
          },
          "isLoadToEnd" : {
            "type" : "boolean",
            "example" : false
          },
          "orderBy" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrderBy"
            }
          },
          "udid" : {
            "type" : "string",
            "example" : "2b6f0cc904d137be2e1730235f5664094b831186"
          },
          "macAddress" : {
            "type" : "string",
            "example" : "ee:00:7c:f0:e5:aa"
          },
          "name" : {
            "type" : "string",
            "example" : "Jan's MObile Device"
          },
          "serialNumber" : {
            "type" : "string",
            "example" : "C02L29ECF8J1"
          },
          "osType" : {
            "type" : "string",
            "example" : "IOS"
          },
          "isManaged" : {
            "type" : "boolean",
            "example" : false
          },
          "excludedIds" : {
            "type" : "array",
            "example" : [ 1, 3 ],
            "items" : {
              "type" : "integer"
            }
          }
        }
      },
      "MobileDeviceSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 3
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MobileDevice"
            }
          }
        }
      },
      "MobileDeviceSearchResultsV2" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 3
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MobileDeviceV2"
            }
          }
        }
      },
      "MobileDeviceV2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "name" : {
            "type" : "string",
            "example" : "iPad"
          },
          "serialNumber" : {
            "type" : "string",
            "example" : "DMQVGC0DHLA0"
          },
          "wifiMacAddress" : {
            "type" : "string",
            "example" : "C4:84:66:92:78:00"
          },
          "udid" : {
            "type" : "string",
            "example" : "0dad565fb40b010a9e490440188063a378721069"
          },
          "phoneNumber" : {
            "type" : "string",
            "example" : "651-555-5555 Ext111"
          },
          "model" : {
            "type" : "string",
            "example" : "iPad 5th Generation (Wi-Fi)"
          },
          "modelIdentifier" : {
            "type" : "string",
            "example" : "iPad6,11"
          },
          "username" : {
            "type" : "string",
            "example" : "admin"
          },
          "type" : {
            "type" : "string",
            "example" : "ios",
            "enum" : [ "ios", "tvos", "unknown" ]
          },
          "managementId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "73226fb6-61df-4c10-9552-eb9bc353d507"
          },
          "softwareUpdateDeviceId" : {
            "type" : "string",
            "example" : "J132AP"
          }
        }
      },
      "Network" : {
        "type" : "object",
        "properties" : {
          "cellularTechnology" : {
            "type" : "string",
            "example" : "Unknown"
          },
          "isVoiceRoamingEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "imei" : {
            "type" : "string",
            "example" : "59 105109 176278 3"
          },
          "iccid" : {
            "type" : "string",
            "example" : "8991101200003204514"
          },
          "meid" : {
            "type" : "string",
            "example" : "15302309236898"
          },
          "carrierSettingsVersion" : {
            "type" : "string",
            "example" : "33.1"
          },
          "currentCarrierNetwork" : {
            "type" : "string",
            "example" : "Verizon Wireless"
          },
          "currentMobileCountryCode" : {
            "type" : "string",
            "example" : "311"
          },
          "currentMobileNetworkCode" : {
            "type" : "string",
            "example" : "480"
          },
          "homeCarrierNetwork" : {
            "type" : "string",
            "example" : "Verizon"
          },
          "homeMobileCountryCode" : {
            "type" : "string",
            "example" : "US"
          },
          "homeMobileNetworkCode" : {
            "type" : "string",
            "example" : "480"
          },
          "isDataRoamingEnabled" : {
            "type" : "boolean",
            "example" : true
          },
          "isRoaming" : {
            "type" : "boolean",
            "example" : false
          },
          "isPersonalHotspotEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "phoneNumber" : {
            "type" : "string",
            "example" : "555-555-5555 ext 5"
          }
        }
      },
      "NetworkV2" : {
        "type" : "object",
        "properties" : {
          "cellularTechnology" : {
            "type" : "string",
            "example" : "Unknown"
          },
          "voiceRoamingEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "imei" : {
            "type" : "string",
            "example" : "59 105109 176278 3"
          },
          "iccid" : {
            "type" : "string",
            "example" : "8991101200003204514"
          },
          "meid" : {
            "type" : "string",
            "example" : "15302309236898"
          },
          "eid" : {
            "type" : "string",
            "description" : "EID or \"embedded identity document\" is a number associated with the eSIM on a device",
            "readOnly" : true,
            "example" : "12547444452496388545569920380795"
          },
          "carrierSettingsVersion" : {
            "type" : "string",
            "example" : "33.1"
          },
          "currentCarrierNetwork" : {
            "type" : "string",
            "example" : "Verizon Wireless"
          },
          "currentMobileCountryCode" : {
            "type" : "string",
            "example" : "311"
          },
          "currentMobileNetworkCode" : {
            "type" : "string",
            "example" : "480"
          },
          "homeCarrierNetwork" : {
            "type" : "string",
            "example" : "Verizon"
          },
          "homeMobileCountryCode" : {
            "type" : "string",
            "example" : "US"
          },
          "homeMobileNetworkCode" : {
            "type" : "string",
            "example" : "480"
          },
          "dataRoamingEnabled" : {
            "type" : "boolean",
            "example" : true
          },
          "roaming" : {
            "type" : "boolean",
            "example" : false
          },
          "personalHotspotEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "phoneNumber" : {
            "type" : "string",
            "example" : "555-555-5555 ext 5"
          }
        }
      },
      "Notification" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "example" : "EXCEEDED_LICENSE_COUNT"
          },
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "params" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "example" : { }
          }
        },
        "description" : "Jamf Pro notification used for important alerts."
      },
      "NotificationType" : {
        "type" : "string",
        "enum" : [ "APNS_CERT_REVOKED", "APNS_CONNECTION_FAILURE", "APPLE_SCHOOL_MANAGER_T_C_NOT_SIGNED", "BUILT_IN_CA_EXPIRED", "BUILT_IN_CA_EXPIRING", "BUILT_IN_CA_RENEWAL_FAILED", "BUILT_IN_CA_RENEWAL_SUCCESS", "CLOUD_LDAP_CERT_EXPIRED", "CLOUD_LDAP_CERT_WILL_EXPIRE", "COMPUTER_SECURITY_SSL_DISABLED", "DEP_INSTANCE_EXPIRED", "DEP_INSTANCE_WILL_EXPIRE", "DEVICE_ENROLLMENT_PROGRAM_T_C_NOT_SIGNED", "EXCEEDED_LICENSE_COUNT", "FREQUENT_INVENTORY_COLLECTION_POLICY", "GSX_CERT_EXPIRED", "GSX_CERT_WILL_EXPIRE", "HCL_BIND_ERROR", "HCL_ERROR", "INSECURE_LDAP", "INVALID_REFERENCES_EXT_ATTR", "INVALID_REFERENCES_POLICIES", "INVALID_REFERENCES_SCRIPTS", "JAMF_CONNECT_UPDATE", "JAMF_PROTECT_UPDATE", "JIM_ERROR", "LDAP_CONNECTION_CHECK_THROUGH_JIM_FAILED", "LDAP_CONNECTION_CHECK_THROUGH_JIM_SUCCESSFUL", "MDM_EXTERNAL_SIGNING_CERTIFICATE_EXPIRED", "MDM_EXTERNAL_SIGNING_CERTIFICATE_EXPIRING", "MDM_EXTERNAL_SIGNING_CERTIFICATE_EXPIRING_TODAY", "MII_HEARTBEAT_FAILED_NOTIFICATION", "MII_INVENTORY_UPLOAD_FAILED_NOTIFICATION", "MII_UNATHORIZED_RESPONSE_NOTIFICATION", "PATCH_EXTENTION_ATTRIBUTE", "PATCH_UPDATE", "POLICY_MANAGEMENT_ACCOUNT_PAYLOAD_SECURITY_MULTIPLE", "POLICY_MANAGEMENT_ACCOUNT_PAYLOAD_SECURITY_SINGLE", "PUSH_CERT_EXPIRED", "PUSH_CERT_WILL_EXPIRE", "PUSH_PROXY_CERT_EXPIRED", "SSO_CERT_EXPIRED", "SSO_CERT_WILL_EXPIRE", "TOMCAT_SSL_CERT_EXPIRED", "TOMCAT_SSL_CERT_WILL_EXPIRE", "USER_INITIATED_ENROLLMENT_MANAGEMENT_ACCOUNT_SECURITY_ISSUE", "USER_MAID_DUPLICATE_ERROR", "USER_MAID_MISMATCH_ERROR", "USER_MAID_ROSTER_DUPLICATE_ERROR", "VPP_ACCOUNT_EXPIRED", "VPP_ACCOUNT_WILL_EXPIRE", "VPP_TOKEN_REVOKED", "DEVICE_COMPLIANCE_CONNECTION_ERROR", "CONDITIONAL_ACCESS_CONNECTION_ERROR", "AZURE_AD_MIGRATION_REPORT_GENERATED" ]
      },
      "NotificationV1" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/NotificationType"
          },
          "id" : {
            "type" : "string",
            "example" : "1"
          },
          "params" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "example" : { }
          }
        },
        "description" : "Jamf Pro notification used for important alerts."
      },
      "ObjectHistory" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "username" : {
            "type" : "string",
            "example" : "admin"
          },
          "date" : {
            "type" : "string",
            "example" : "2019-02-04T21:09:31.661Z"
          },
          "note" : {
            "type" : "string",
            "example" : "Sso settings update"
          },
          "details" : {
            "type" : "string",
            "example" : "Is SSO Enabled false\\nSelected SSO Provider"
          }
        }
      },
      "ObjectHistoryNote" : {
        "required" : [ "note" ],
        "type" : "object",
        "properties" : {
          "note" : {
            "type" : "string",
            "example" : "A generic note can sometimes be useful, but generally not."
          }
        }
      },
      "ObjectHistoryV1" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1"
          },
          "username" : {
            "type" : "string",
            "example" : "admin"
          },
          "date" : {
            "type" : "string",
            "example" : "2019-02-04T21:09:31.661Z"
          },
          "note" : {
            "type" : "string",
            "example" : "Sso settings update"
          },
          "details" : {
            "type" : "string",
            "example" : "Is SSO Enabled false\\nSelected SSO Provider"
          }
        }
      },
      "OrderBy" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string",
            "example" : "Name"
          },
          "direction" : {
            "type" : "string",
            "example" : "DESC",
            "enum" : [ "ASC", "DESC" ]
          }
        }
      },
      "PackageManifest" : {
        "required" : [ "bundleId", "bundleVersion", "hash", "hashType", "sizeInBytes", "title", "url" ],
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string",
            "example" : "https://example.jamf.com/this/package"
          },
          "hash" : {
            "type" : "string",
            "example" : "dcb02a41cd6d842943459a88c96a5f72"
          },
          "hashType" : {
            "type" : "string",
            "example" : "MD5",
            "enum" : [ "MD5", "SHA256" ]
          },
          "displayImageUrl" : {
            "type" : "string",
            "example" : "https://example.jamf.com/img/display/this/package.jpg"
          },
          "fullSizeImageUrl" : {
            "type" : "string",
            "example" : "https://example.jamf.com/img/full/this/package.jpg"
          },
          "bundleId" : {
            "type" : "string",
            "example" : "com.jamf.example"
          },
          "bundleVersion" : {
            "type" : "string",
            "example" : "0.1.0"
          },
          "subtitle" : {
            "type" : "string",
            "example" : "Subtitle"
          },
          "title" : {
            "type" : "string",
            "example" : "Title"
          },
          "sizeInBytes" : {
            "type" : "integer",
            "example" : 12345
          }
        }
      },
      "ParentApp" : {
        "required" : [ "deviceGroupId", "isEnabled", "restrictedTimes", "timezoneId" ],
        "type" : "object",
        "properties" : {
          "timezoneId" : {
            "type" : "string",
            "example" : "Europe/Paris"
          },
          "restrictedTimes" : {
            "type" : "object",
            "properties" : {
              "key" : {
                "$ref" : "#/components/schemas/DayOfWeek"
              }
            },
            "additionalProperties" : {
              "$ref" : "#/components/schemas/TimeFrame"
            },
            "example" : {
              "SUNDAY" : {
                "beginTime" : "08:30:00",
                "endTime" : "15:45:00"
              }
            }
          },
          "deviceGroupId" : {
            "type" : "integer",
            "example" : 1
          },
          "isEnabled" : {
            "type" : "boolean",
            "example" : true
          },
          "allowTemplates" : {
            "type" : "boolean",
            "example" : true
          },
          "disassociateOnWipeAndReEnroll" : {
            "type" : "boolean",
            "example" : true
          },
          "allowClearPasscode" : {
            "type" : "boolean",
            "example" : true
          },
          "safelistedApps" : {
            "$ref" : "#/components/schemas/SafelistedApps"
          }
        }
      },
      "PatchIdsOnDashboard" : {
        "type" : "array",
        "items" : {
          "type" : "integer"
        }
      },
      "PatchPolicyAttempt" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "attemptNo" : {
            "type" : "integer",
            "example" : 1
          },
          "deviceId" : {
            "type" : "integer",
            "example" : 1
          },
          "actions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PatchPolicyAttemptAction"
            }
          }
        }
      },
      "PatchPolicyAttemptAction" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "actionOrder" : {
            "type" : "integer",
            "example" : 1
          },
          "action" : {
            "type" : "string",
            "example" : "Trying something"
          }
        }
      },
      "PatchPolicyLog" : {
        "type" : "object",
        "properties" : {
          "patchPolicyId" : {
            "type" : "integer",
            "example" : 1
          },
          "deviceId" : {
            "type" : "integer",
            "example" : 1
          },
          "deviceName" : {
            "type" : "string",
            "example" : "iPad"
          },
          "statusCode" : {
            "type" : "integer",
            "example" : 1
          },
          "statusMessage" : {
            "type" : "string",
            "example" : "Completed"
          },
          "statusDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-02-04T21:09:31.661Z"
          },
          "attempt" : {
            "type" : "integer",
            "example" : 1
          },
          "ignored" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "PatchPolicyLogSearchResults" : {
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PatchPolicyLog"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "example" : 3
          }
        }
      },
      "PatchPolicyOnDashboard" : {
        "type" : "object",
        "properties" : {
          "isOnDashboard" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "PatchPolicySummary" : {
        "type" : "object",
        "properties" : {
          "policyId" : {
            "type" : "integer",
            "example" : 1
          },
          "policyName" : {
            "type" : "string",
            "example" : "Policy name"
          },
          "isPolicyEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "policyTargetVersion" : {
            "type" : "string",
            "example" : "v1"
          },
          "policyDeploymentMethod" : {
            "type" : "string",
            "example" : "automatically"
          },
          "softwareTitle" : {
            "type" : "string",
            "example" : "Software title"
          },
          "softwareTitleConfigurationId" : {
            "type" : "integer",
            "example" : 1
          },
          "pending" : {
            "type" : "integer",
            "example" : 0
          },
          "completed" : {
            "type" : "integer",
            "example" : 0
          },
          "deferred" : {
            "type" : "integer",
            "example" : 0
          },
          "failed" : {
            "type" : "integer",
            "example" : 0
          }
        }
      },
      "PatchVersion" : {
        "type" : "object",
        "properties" : {
          "absoluteOrderId" : {
            "type" : "integer",
            "example" : 1
          },
          "version" : {
            "type" : "string",
            "example" : "3"
          },
          "onVersion" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "PersonalHotspotSetting" : {
        "type" : "string",
        "example" : "ENABLE_PERSONAL_HOTSPOT",
        "enum" : [ "ENABLE_PERSONAL_HOTSPOT", "DISABLE_PERSONAL_HOTSPOT" ]
      },
      "PlanSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 3
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/JamfProtectPlan"
            }
          }
        }
      },
      "PluginPath" : {
        "required" : [ "id", "path" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "3"
          },
          "path" : {
            "type" : "string",
            "example" : "/Example/Path/To/Plugin/"
          }
        }
      },
      "PolicyProperties" : {
        "type" : "object",
        "properties" : {
          "isPoliciesRequireNetworkStateChange" : {
            "type" : "boolean",
            "description" : "This field always returns false.",
            "default" : false
          },
          "isAllowNetworkStateChangeTriggers" : {
            "type" : "boolean",
            "default" : true
          }
        }
      },
      "PolicyPropertiesV1" : {
        "type" : "object",
        "properties" : {
          "policiesRequireNetworkStateChange" : {
            "type" : "boolean",
            "description" : "This field always returns false.",
            "default" : false
          },
          "allowNetworkStateChangeTriggers" : {
            "type" : "boolean",
            "default" : true
          }
        }
      },
      "PostComputerPrestageV2" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComputerPrestageV2"
        }, {
          "type" : "object",
          "properties" : {
            "recoveryLockPassword" : {
              "minLength" : 1,
              "type" : "string",
              "format" : "password",
              "writeOnly" : true,
              "example" : "password123"
            }
          }
        } ]
      },
      "PrestageDependencies" : {
        "type" : "object",
        "properties" : {
          "dependencies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PrestageDependency"
            }
          }
        }
      },
      "PrestageDependency" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Name"
          },
          "humanReadableName" : {
            "type" : "string",
            "example" : "Computer PreStage"
          },
          "hyperlink" : {
            "type" : "string",
            "example" : "/mobile-prestage/id"
          }
        }
      },
      "PrestageFileAttachment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "receipt.pdf"
          },
          "fileType" : {
            "type" : "string",
            "example" : "pdf"
          }
        }
      },
      "PrestageFileAttachmentV2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1"
          },
          "name" : {
            "type" : "string",
            "example" : "receipt.pdf"
          },
          "fileType" : {
            "type" : "string",
            "example" : "pdf"
          }
        }
      },
      "PrestagePurchasingInformation" : {
        "required" : [ "appleCareID", "id", "isLeased", "isPurchased", "leaseDate", "lifeExpectancy", "poDate", "poNumber", "purchasePrice", "purchasingAccount", "purchasingContact", "vendor", "versionLock", "warrantyDate" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 0
          },
          "isLeased" : {
            "type" : "boolean",
            "example" : true
          },
          "isPurchased" : {
            "type" : "boolean",
            "example" : true
          },
          "appleCareID" : {
            "type" : "string",
            "example" : "abcd"
          },
          "poNumber" : {
            "type" : "string",
            "example" : "53-1"
          },
          "vendor" : {
            "type" : "string",
            "example" : "Example Vendor"
          },
          "purchasePrice" : {
            "type" : "string",
            "example" : "$500"
          },
          "lifeExpectancy" : {
            "type" : "integer",
            "example" : 5
          },
          "purchasingAccount" : {
            "type" : "string",
            "example" : "admin"
          },
          "purchasingContact" : {
            "type" : "string",
            "example" : "true"
          },
          "leaseDate" : {
            "type" : "string",
            "example" : "2019-01-01"
          },
          "poDate" : {
            "type" : "string",
            "example" : "2019-01-01"
          },
          "warrantyDate" : {
            "type" : "string",
            "example" : "2019-01-01"
          },
          "versionLock" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "PrestagePurchasingInformationV2" : {
        "required" : [ "appleCareId", "id", "leaseDate", "leased", "lifeExpectancy", "poDate", "poNumber", "purchasePrice", "purchased", "purchasingAccount", "purchasingContact", "vendor", "versionLock", "warrantyDate" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "-1"
          },
          "leased" : {
            "type" : "boolean",
            "example" : true
          },
          "purchased" : {
            "type" : "boolean",
            "example" : true
          },
          "appleCareId" : {
            "type" : "string",
            "example" : "abcd"
          },
          "poNumber" : {
            "type" : "string",
            "example" : "53-1"
          },
          "vendor" : {
            "type" : "string",
            "example" : "Example Vendor"
          },
          "purchasePrice" : {
            "type" : "string",
            "example" : "$500"
          },
          "lifeExpectancy" : {
            "type" : "integer",
            "example" : 5
          },
          "purchasingAccount" : {
            "type" : "string",
            "example" : "admin"
          },
          "purchasingContact" : {
            "type" : "string",
            "example" : "true"
          },
          "leaseDate" : {
            "type" : "string",
            "example" : "2019-01-01"
          },
          "poDate" : {
            "type" : "string",
            "example" : "2019-01-01"
          },
          "warrantyDate" : {
            "type" : "string",
            "example" : "2019-01-01"
          },
          "versionLock" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "PrestageScope" : {
        "type" : "object",
        "properties" : {
          "serialsByPrestageId" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer"
            },
            "example" : {
              "ABCD" : 1,
              "XYZ" : 12
            }
          }
        }
      },
      "PrestageScopeAssignment" : {
        "type" : "object",
        "properties" : {
          "serialNumber" : {
            "type" : "string",
            "example" : "XYZ"
          },
          "assignmentEpoch" : {
            "type" : "integer",
            "example" : 123456789
          },
          "userAssigned" : {
            "type" : "string",
            "example" : "admin"
          }
        }
      },
      "PrestageScopeAssignmentV2" : {
        "type" : "object",
        "properties" : {
          "serialNumber" : {
            "type" : "string",
            "example" : "XYZ"
          },
          "assignmentDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-02-04T21:09:31.661Z"
          },
          "userAssigned" : {
            "type" : "string",
            "example" : "admin"
          }
        }
      },
      "PrestageScopeResponse" : {
        "type" : "object",
        "properties" : {
          "prestageId" : {
            "type" : "integer",
            "example" : 1
          },
          "assignments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PrestageScopeAssignment"
            }
          },
          "versionLock" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "PrestageScopeResponseV2" : {
        "type" : "object",
        "properties" : {
          "prestageId" : {
            "type" : "string",
            "example" : "1"
          },
          "assignments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PrestageScopeAssignmentV2"
            }
          },
          "versionLock" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "PrestageScopeUpdate" : {
        "required" : [ "serialNumbers", "versionLock" ],
        "type" : "object",
        "properties" : {
          "serialNumbers" : {
            "type" : "array",
            "example" : [ "DMQVGC0DHLF0", "C02L29ECF8J1" ],
            "items" : {
              "type" : "string"
            }
          },
          "versionLock" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "PrestageScopeV2" : {
        "type" : "object",
        "properties" : {
          "serialsByPrestageId" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "example" : {
              "ABCD" : 1,
              "XYZ" : 12
            }
          }
        }
      },
      "PrestageSyncStatus" : {
        "type" : "object",
        "properties" : {
          "syncState" : {
            "type" : "string",
            "example" : "CONNECTION_ERROR"
          },
          "prestageId" : {
            "type" : "integer",
            "example" : 1
          },
          "timestamp" : {
            "type" : "string",
            "example" : "2019-04-17T14:08:06.706+0000"
          }
        }
      },
      "PrestageSyncStatusV2" : {
        "type" : "object",
        "properties" : {
          "syncState" : {
            "type" : "string",
            "example" : "CONNECTION_ERROR"
          },
          "prestageId" : {
            "type" : "string",
            "example" : "1"
          },
          "timestamp" : {
            "type" : "string",
            "example" : "2019-04-17T14:08:06.706+0000"
          }
        }
      },
      "ProcessTextsSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 10
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnrollmentProcessTextObject"
            }
          }
        }
      },
      "ProtectRegistrationRequest" : {
        "required" : [ "clientId", "password", "protectUrl" ],
        "type" : "object",
        "properties" : {
          "protectUrl" : {
            "type" : "string",
            "example" : "https://examplejamfprotect.jamfcloud.com/graphql"
          },
          "clientId" : {
            "type" : "string",
            "example" : "uzPJXlArmzTAmPRQtZEnQ2OFtNw8qQV"
          },
          "password" : {
            "type" : "string",
            "example" : "7fyP6BphUUQ5B_zoLrkYhM5j1HTcf-4PxshettZbK0ZcnzV57gyHwF23U3F96F"
          }
        },
        "description" : "Create an API Client in the Jamf Protect web console to obtain these values."
      },
      "ProtectSettingsResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1"
          },
          "apiClientId" : {
            "type" : "string",
            "example" : "esgzYzYBqN7wCImwyusbQcXob2qalGMN"
          },
          "apiClientName" : {
            "type" : "string",
            "description" : "display name used when creating the API Client in the Jamf Protect web console",
            "example" : "Jamf Pro integration"
          },
          "registrationId" : {
            "type" : "string",
            "description" : "ID used when making requests to identify this particular Protect registration.",
            "example" : "6f250316-2cfb-4521-8cb7-bfaf46497bc5"
          },
          "protectUrl" : {
            "type" : "string",
            "example" : "https://examplejamfprotect.jamfcloud.com/graphql"
          },
          "lastSyncTime" : {
            "type" : "string",
            "example" : "2003-01-05T18:00:14.885Z"
          },
          "syncStatus" : {
            "type" : "string",
            "example" : "COMPLETED",
            "enum" : [ "IN_PROGRESS", "COMPLETED", "ERROR", "UNKNOWN" ]
          },
          "autoInstall" : {
            "type" : "boolean",
            "description" : "determines whether the Jamf Protect agent will be automatically installed on client computers",
            "example" : true
          }
        }
      },
      "ProtectUpdatableSettingsRequest" : {
        "type" : "object",
        "properties" : {
          "autoInstall" : {
            "type" : "boolean",
            "description" : "determines whether the Jamf Protect agent will be automatically installed on client computers",
            "example" : true
          }
        }
      },
      "ProvisioningProfile" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "example" : "jamfnation"
          },
          "uuid" : {
            "type" : "string",
            "example" : "89AF33FC-123C-1231-AEFD-9C3ED123AFCC"
          },
          "expirationDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-10-24T21:57:37Z"
          }
        }
      },
      "Purchasing" : {
        "type" : "object",
        "properties" : {
          "isPurchased" : {
            "type" : "boolean",
            "example" : true
          },
          "isLeased" : {
            "type" : "boolean",
            "example" : false
          },
          "poNumber" : {
            "type" : "string",
            "example" : "8675309"
          },
          "vendor" : {
            "type" : "string",
            "example" : "Apple"
          },
          "appleCareId" : {
            "type" : "string",
            "example" : "9546567.0"
          },
          "purchasePrice" : {
            "type" : "string",
            "example" : "$399"
          },
          "purchasingAccount" : {
            "type" : "string",
            "example" : "IT Budget"
          },
          "poDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-02-04T21:09:31.661Z"
          },
          "warrantyExpiresDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-02-04T21:09:31.661Z"
          },
          "leaseExpiresDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-02-04T21:09:31.661Z"
          },
          "lifeExpectancy" : {
            "type" : "integer",
            "example" : 7
          },
          "purchasingContact" : {
            "type" : "string",
            "example" : "Nick in IT"
          }
        }
      },
      "PurchasingV2" : {
        "type" : "object",
        "properties" : {
          "purchased" : {
            "type" : "boolean",
            "example" : true
          },
          "leased" : {
            "type" : "boolean",
            "example" : false
          },
          "poNumber" : {
            "type" : "string",
            "example" : "8675309"
          },
          "vendor" : {
            "type" : "string",
            "example" : "Apple"
          },
          "appleCareId" : {
            "type" : "string",
            "example" : "9546567.0"
          },
          "purchasePrice" : {
            "type" : "string",
            "example" : "$399"
          },
          "purchasingAccount" : {
            "type" : "string",
            "example" : "IT Budget"
          },
          "poDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-02-04T21:09:31.661Z"
          },
          "warrantyExpiresDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-02-04T21:09:31.661Z"
          },
          "leaseExpiresDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-02-04T21:09:31.661Z"
          },
          "lifeExpectancy" : {
            "type" : "integer",
            "example" : 7
          },
          "purchasingContact" : {
            "type" : "string",
            "example" : "Nick in IT"
          }
        }
      },
      "PutComputerPrestage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComputerPrestage"
        }, {
          "type" : "object",
          "properties" : {
            "versionLock" : {
              "type" : "integer",
              "example" : 0
            }
          }
        } ]
      },
      "PutComputerPrestageV2" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ComputerPrestageV2"
        }, {
          "type" : "object",
          "properties" : {
            "recoveryLockPassword" : {
              "minLength" : 1,
              "type" : "string",
              "format" : "password",
              "writeOnly" : true,
              "example" : "password123"
            },
            "versionLock" : {
              "type" : "integer",
              "example" : 0
            }
          }
        } ]
      },
      "PutMobileDevicePrestage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MobileDevicePrestage"
        }, {
          "type" : "object",
          "properties" : {
            "versionLock" : {
              "type" : "integer",
              "example" : 0
            }
          }
        } ]
      },
      "PutMobileDevicePrestageV2" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MobileDevicePrestageV2"
        }, {
          "type" : "object",
          "properties" : {
            "versionLock" : {
              "type" : "integer",
              "example" : 0
            }
          }
        } ]
      },
      "RecalculationResults" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "example" : 3
          }
        }
      },
      "Recipient" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "realName" : {
            "type" : "string",
            "example" : "test recipient"
          },
          "email" : {
            "type" : "string",
            "example" : "test@test.com"
          }
        }
      },
      "Recipients" : {
        "type" : "object",
        "properties" : {
          "recipientList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Recipient"
            }
          }
        }
      },
      "RedeployJamfManagementFrameworkResponse" : {
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "type" : "string",
            "example" : "1"
          },
          "commandUuid" : {
            "type" : "string",
            "example" : "f5965c4f-0db4-4dc4-9f37-6f1dad4e939c"
          }
        }
      },
      "Reenrollment" : {
        "required" : [ "flushMDMQueue" ],
        "type" : "object",
        "properties" : {
          "isFlushPolicyHistoryEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "isFlushLocationInformationEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "isFlushLocationInformationHistoryEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "isFlushExtensionAttributesEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "flushMDMQueue" : {
            "type" : "string",
            "example" : "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED",
            "enum" : [ "DELETE_NOTHING", "DELETE_ERRORS", "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED", "DELETE_EVERYTHING" ]
          }
        }
      },
      "RemoteAdministrationResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "minimum" : 1,
            "type" : "string",
            "example" : "1"
          },
          "siteId" : {
            "type" : "string",
            "example" : "1"
          },
          "displayName" : {
            "type" : "string",
            "example" : "Remote administration"
          },
          "type" : {
            "type" : "string",
            "example" : "team-viewer",
            "enum" : [ "team-viewer" ]
          }
        },
        "description" : "A Remote administration response"
      },
      "RemoteAdministrationSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RemoteAdministrationResponse"
            }
          }
        },
        "description" : "A list with Remote administration configurations"
      },
      "RenewMdmProfileResponse" : {
        "type" : "object",
        "properties" : {
          "udidsNotProcessed" : {
            "$ref" : "#/components/schemas/Udids"
          }
        }
      },
      "RestartDeviceCommand" : {
        "type" : "object",
        "properties" : {
          "rebuildKernelCache" : {
            "type" : "boolean",
            "example" : true
          },
          "kextPaths" : {
            "type" : "array",
            "description" : "Only used if RebuildKernelCache is true",
            "example" : [ "extension1", "extension2" ],
            "items" : {
              "type" : "string"
            }
          },
          "notifyUser" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "RetryPatchPolicyParams" : {
        "type" : "object",
        "properties" : {
          "patchPolicyId" : {
            "type" : "integer",
            "example" : 1
          },
          "deviceIds" : {
            "type" : "array",
            "example" : [ 1, 3 ],
            "items" : {
              "type" : "integer"
            }
          },
          "isRetryAllFailed" : {
            "type" : "boolean",
            "default" : false
          }
        }
      },
      "SafelistedApps" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "name" : {
              "type" : "string",
              "example" : "Content Filter"
            },
            "bundleId" : {
              "type" : "string",
              "example" : "com.jamf.parent"
            }
          }
        }
      },
      "Script" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "name" : {
            "type" : "string",
            "example" : "Install Developer Utils Script"
          },
          "info" : {
            "type" : "string",
            "example" : "Installs utilities for developers"
          },
          "notes" : {
            "type" : "string",
            "example" : "Should be able to be re-run without problem."
          },
          "priority" : {
            "type" : "string",
            "example" : "AFTER",
            "enum" : [ "BEFORE", "AFTER", "AT_REBOOT" ]
          },
          "categoryId" : {
            "type" : "string",
            "example" : "1"
          },
          "categoryName" : {
            "type" : "string",
            "example" : "Developer Tools"
          },
          "parameter4" : {
            "type" : "string",
            "example" : "1"
          },
          "parameter5" : {
            "type" : "string",
            "example" : "2"
          },
          "parameter6" : {
            "type" : "string",
            "example" : "3"
          },
          "parameter7" : {
            "type" : "string",
            "example" : "4"
          },
          "parameter8" : {
            "type" : "string",
            "example" : "5"
          },
          "parameter9" : {
            "type" : "string",
            "example" : "6"
          },
          "parameter10" : {
            "type" : "string",
            "example" : "7"
          },
          "parameter11" : {
            "type" : "string",
            "example" : "8"
          },
          "osRequirements" : {
            "type" : "string",
            "example" : "10.10.x"
          },
          "scriptContents" : {
            "type" : "string",
            "example" : "echo \"Trivial script.\""
          }
        }
      },
      "ScriptsSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 3
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Script"
            }
          }
        }
      },
      "SearchActivePatchHistoryParams" : {
        "type" : "object",
        "properties" : {
          "pageNumber" : {
            "type" : "integer",
            "example" : 1
          },
          "pageSize" : {
            "type" : "integer",
            "example" : 100
          },
          "isLoadToEnd" : {
            "type" : "boolean",
            "example" : false
          },
          "softwareTitleID" : {
            "type" : "integer",
            "example" : 1
          },
          "softwareTitleConfigurationID" : {
            "type" : "integer",
            "example" : 1
          },
          "orderBy" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrderBy"
            }
          },
          "filter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Filter"
            }
          }
        }
      },
      "SearchPatchPolicyLogParams" : {
        "type" : "object",
        "properties" : {
          "pageNumber" : {
            "type" : "integer",
            "example" : 1
          },
          "pageSize" : {
            "type" : "integer",
            "example" : 100
          },
          "orderBy" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrderBy"
            }
          },
          "filter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Filter"
            }
          },
          "isLoadToEnd" : {
            "type" : "boolean",
            "example" : false
          },
          "patchPolicyId" : {
            "type" : "integer",
            "example" : 1
          },
          "isLatest" : {
            "type" : "boolean",
            "default" : false
          }
        }
      },
      "Security" : {
        "type" : "object",
        "properties" : {
          "isDataProtected" : {
            "type" : "boolean",
            "example" : false
          },
          "isBlockLevelEncryptionCapable" : {
            "type" : "boolean",
            "example" : true
          },
          "isFileLevelEncryptionCapable" : {
            "type" : "boolean",
            "example" : true
          },
          "isPasscodePresent" : {
            "type" : "boolean",
            "example" : false
          },
          "isPasscodeCompliant" : {
            "type" : "boolean",
            "example" : true
          },
          "isPasscodeCompliantWithProfile" : {
            "type" : "boolean",
            "example" : true
          },
          "hardwareEncryption" : {
            "type" : "integer",
            "example" : 3
          },
          "isActivationLockEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "isJailBreakDetected" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "SecurityV2" : {
        "type" : "object",
        "properties" : {
          "dataProtected" : {
            "type" : "boolean",
            "example" : false
          },
          "blockLevelEncryptionCapable" : {
            "type" : "boolean",
            "example" : true
          },
          "fileLevelEncryptionCapable" : {
            "type" : "boolean",
            "example" : true
          },
          "passcodePresent" : {
            "type" : "boolean",
            "example" : false
          },
          "passcodeCompliant" : {
            "type" : "boolean",
            "example" : true
          },
          "passcodeCompliantWithProfile" : {
            "type" : "boolean",
            "example" : true
          },
          "hardwareEncryption" : {
            "type" : "integer",
            "example" : 3
          },
          "activationLockEnabled" : {
            "type" : "boolean",
            "example" : false
          },
          "jailBreakDetected" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "SelfServiceInstallSettings" : {
        "required" : [ "installLocation" ],
        "type" : "object",
        "properties" : {
          "installAutomatically" : {
            "type" : "boolean",
            "description" : "true if Self Service is insalled automatically, false if not\n",
            "default" : false
          },
          "installLocation" : {
            "type" : "string",
            "description" : "path at which Self Service is installed\n",
            "example" : "/Applications"
          }
        },
        "description" : "object representation of Self Service settings regarding installation\n"
      },
      "SelfServiceInteractionSettings" : {
        "required" : [ "bookmarksName" ],
        "type" : "object",
        "properties" : {
          "notificationsEnabled" : {
            "type" : "boolean",
            "description" : "global Self Service setting for if notifications are on or off\n",
            "default" : false
          },
          "alertUserApprovedMdm" : {
            "type" : "boolean",
            "description" : "whether users should be notified they need to approve organization's MDM profile\n",
            "default" : true
          },
          "defaultLandingPage" : {
            "type" : "string",
            "description" : "the default landing page in Self Service\n",
            "example" : "HOME",
            "enum" : [ "HOME", "BROWSE", "HISTORY", "NOTIFICATIONS" ],
            "default" : "HOME"
          },
          "defaultHomeCategoryId" : {
            "type" : "integer",
            "description" : "id for the default home category in Self Service\n",
            "format" : "int32",
            "default" : -1
          },
          "bookmarksName" : {
            "type" : "string",
            "description" : "renamed string for bookmarks if the admin wishes\n",
            "example" : "Bookmarks"
          }
        },
        "description" : "object representation of Self Service settings regarding user interaction\n"
      },
      "SelfServiceLoginSettings" : {
        "required" : [ "authType", "userLoginLevel" ],
        "type" : "object",
        "properties" : {
          "userLoginLevel" : {
            "type" : "string",
            "description" : "login setting to tell clients how to let users log in\n",
            "example" : "NotRequired",
            "enum" : [ "NotRequired", "Anonymous", "Required" ]
          },
          "allowRememberMe" : {
            "type" : "boolean",
            "description" : "true if remember me functionality is allowed, false if not\n",
            "default" : false
          },
          "authType" : {
            "type" : "string",
            "description" : "login type to be used when asking users to log in\n",
            "example" : "Basic",
            "enum" : [ "Basic", "Saml" ]
          }
        },
        "description" : "object representation of Self Service settings regarding login\n"
      },
      "SelfServiceSettings" : {
        "type" : "object",
        "properties" : {
          "installSettings" : {
            "$ref" : "#/components/schemas/SelfServiceInstallSettings"
          },
          "loginSettings" : {
            "$ref" : "#/components/schemas/SelfServiceLoginSettings"
          },
          "configurationSettings" : {
            "$ref" : "#/components/schemas/SelfServiceInteractionSettings"
          }
        },
        "description" : "object representation of Self Service settings\n"
      },
      "Session" : {
        "type" : "object",
        "properties" : {
          "currentSiteId" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "SessionCandidateRequest" : {
        "required" : [ "description", "deviceId", "deviceType" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "type" : "string",
            "description" : "Device identifier",
            "example" : "1"
          },
          "deviceType" : {
            "type" : "string",
            "description" : "Device type",
            "example" : "COMPUTER",
            "enum" : [ "COMPUTER" ]
          },
          "description" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string",
            "description" : "Session description. To be used for additional context on the reason of the session",
            "example" : "Customer reported that he cannot install application X"
          }
        },
        "description" : "Request to crate new remote session. Ultimately this allows connection between an admin and an end-user"
      },
      "SessionDetails" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Session identifier",
            "example" : "1"
          },
          "code" : {
            "type" : "string",
            "description" : "Sessions code",
            "example" : "s1234-5678"
          },
          "description" : {
            "type" : "string",
            "description" : "Session description. To be used for additional context on the reason of the session",
            "example" : "Customer reported that he cannot install application X"
          },
          "supporterLink" : {
            "type" : "string",
            "description" : "Supporter session URL",
            "example" : "https://get.teamviewer.com/v15/en/s12345678-a1b2c3d4e5f6"
          },
          "endUserLink" : {
            "type" : "string",
            "description" : "End user session URL",
            "example" : "https://get.teamviewer.com/v15/en/s12345678"
          },
          "deviceId" : {
            "type" : "string",
            "description" : "Device identifier",
            "example" : "1"
          },
          "deviceName" : {
            "type" : "string",
            "description" : "Device name if found - null otherwise",
            "example" : "Przemek MacBook Pro"
          },
          "deviceType" : {
            "type" : "string",
            "description" : "Device type",
            "example" : "COMPUTER",
            "enum" : [ "COMPUTER" ]
          },
          "state" : {
            "type" : "string",
            "description" : "Session state",
            "example" : "OPEN",
            "enum" : [ "OPEN", "CLOSED", "UNKNOWN" ]
          },
          "creatorId" : {
            "type" : "string",
            "description" : "ID of session creator if session created by Jamf Pro local user, null otherwise",
            "example" : "1"
          },
          "creatorName" : {
            "type" : "string",
            "description" : "Username of the session creator",
            "example" : "creator"
          },
          "createdAt" : {
            "type" : "string",
            "description" : "Session creation time",
            "format" : "date-time",
            "example" : "2021-06-10T12:00:00Z"
          }
        },
        "description" : "Session details"
      },
      "SessionDetailsSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SessionDetails"
            }
          }
        },
        "description" : "Sessions search result"
      },
      "SessionStatus" : {
        "type" : "object",
        "properties" : {
          "sessionState" : {
            "type" : "string",
            "description" : "Session state",
            "example" : "OPEN",
            "enum" : [ "OPEN", "CLOSED", "UNKNOWN" ]
          },
          "online" : {
            "type" : "boolean",
            "description" : "Defines if the end user is online",
            "example" : true
          }
        },
        "description" : "Session status"
      },
      "SetRecoveryLockCommand" : {
        "type" : "object",
        "properties" : {
          "newPassword" : {
            "type" : "string",
            "description" : "The new password for Recovery Lock. Set as an empty string to clear the Recovery Lock password.",
            "example" : "newQuerty1234"
          }
        }
      },
      "SettingsCommand" : {
        "type" : "object",
        "properties" : {
          "bootstrapTokenAllowed" : {
            "type" : "boolean",
            "example" : true
          },
          "bluetooth" : {
            "type" : "boolean",
            "example" : true
          },
          "appAnalytics" : {
            "$ref" : "#/components/schemas/AppAnalyticsSetting"
          },
          "diagnosticSubmission" : {
            "$ref" : "#/components/schemas/DiagnosticSubmissionSetting"
          },
          "dataRoaming" : {
            "$ref" : "#/components/schemas/DataRoamingSetting"
          },
          "voiceRoaming" : {
            "$ref" : "#/components/schemas/VoiceRoamingSetting"
          },
          "personalHotspot" : {
            "$ref" : "#/components/schemas/PersonalHotspotSetting"
          },
          "maximumResidentUsers" : {
            "type" : "integer",
            "example" : 1
          },
          "deviceName" : {
            "type" : "string",
            "example" : "My iPhone"
          },
          "applicationAttributes" : {
            "$ref" : "#/components/schemas/ApplicationAttributes"
          },
          "sharedDeviceConfiguration" : {
            "$ref" : "#/components/schemas/SharedDeviceConfiguration"
          },
          "applicationConfiguration" : {
            "$ref" : "#/components/schemas/ApplicationConfiguration"
          },
          "timeZone" : {
            "type" : "string",
            "example" : "America/New_York"
          },
          "softwareUpdateSettings" : {
            "$ref" : "#/components/schemas/SoftwareUpdateSettings"
          }
        }
      },
      "SharedDeviceConfiguration" : {
        "type" : "object",
        "properties" : {
          "quotaSize" : {
            "type" : "integer",
            "example" : 2048
          },
          "residentUsers" : {
            "type" : "integer",
            "example" : 3
          }
        }
      },
      "Signature" : {
        "type" : "object",
        "properties" : {
          "algorithm" : {
            "type" : "string",
            "example" : "SHA256withRSA"
          },
          "algorithmOid" : {
            "type" : "string",
            "example" : "1.2.840.113549.1.1.11"
          },
          "value" : {
            "type" : "string",
            "example" : "6874f9b8c60a46c25b6b270c14b9a2949c87b25524868394309b20349f95edd624588ada274e5678a921199d26d0fe5b231fc794eb6e020b7a6c4790cf91ec5d9a5bd4da126f141a657cf4af78df6303327964c57721d82b85af1d46379ac7ec45a24ae3418576688f05fd075a1c9c3d137d0fd8831f4c88ce7698af9c747db983a40fb0480ebfb293bf4889e34a949d4a53251b1abef19d895bcea8e0ce590b22244ad1623624319e6a8b7e7d11aea3d94b77be1a94d28fda58e8df2e398c45e2e9c13473dcc81db01acac8f2c6d21cb5c44371c9ebfba632dcb46838a91808d4e82a35500f370dc71f4156528fbce93137c94eb33d83d41d49483d4dcca5e1"
          }
        }
      },
      "Site" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "Eau Claire"
          }
        }
      },
      "SmartSearchCriterion" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Account"
          },
          "priority" : {
            "type" : "integer",
            "example" : 0
          },
          "andOr" : {
            "type" : "string",
            "example" : "and"
          },
          "searchType" : {
            "type" : "string",
            "example" : "is"
          },
          "value" : {
            "type" : "string",
            "example" : "test"
          },
          "openingParen" : {
            "type" : "boolean",
            "example" : false
          },
          "closingParen" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "SoftwareTitleConfiguration" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "displayName" : {
            "type" : "string",
            "example" : "Configuration name"
          }
        }
      },
      "SoftwareTitlePatchPolicySummaries" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 3
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PatchPolicySummary"
            }
          }
        }
      },
      "SoftwareUpdateSettings" : {
        "type" : "object",
        "properties" : {
          "recommendationCadence" : {
            "type" : "string",
            "example" : "ALLOW_ALL_UPDATES",
            "enum" : [ "ALLOW_ALL_UPDATES", "ONLY_ALLOW_LEAST_CURRENT_UPDATE", "ONLY_ALLOW_MOST_CURRENT_UPDATE" ]
          }
        }
      },
      "SsoKeystore" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SsoKeystoreParse"
        }, {
          "required" : [ "key", "password", "type" ],
          "type" : "object",
          "properties" : {
            "keys" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/CertificateKey"
              }
            },
            "key" : {
              "type" : "string",
              "default" : " "
            },
            "password" : {
              "type" : "string",
              "format" : "password",
              "writeOnly" : true,
              "example" : "***"
            },
            "type" : {
              "type" : "string",
              "example" : "PKCS12",
              "enum" : [ "PKCS12", "JKS", "NONE" ]
            },
            "keystoreSetupType" : {
              "type" : "string",
              "example" : "UPLOADED",
              "enum" : [ "NONE", "UPLOADED", "GENERATED" ]
            }
          }
        } ]
      },
      "SsoKeystoreCertParseResponse" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "default" : " "
          },
          "keys" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CertificateKey"
            }
          },
          "type" : {
            "type" : "string",
            "example" : "PKCS12",
            "enum" : [ "PKCS12", "JKS", "NONE" ]
          },
          "keystoreSetupType" : {
            "type" : "string",
            "example" : "UPLOADED",
            "enum" : [ "NONE", "UPLOADED", "GENERATED" ]
          },
          "keystoreFile" : {
            "type" : "array",
            "example" : "ZXhhbXBsZSBvZiBhIGJhc2U2NCBlbmNvZGVkIHZhbGlkIHAxMi4ga2V5c3RvcmUgZmlsZQ==",
            "items" : {
              "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
              "type" : "string",
              "format" : "byte"
            }
          },
          "keystoreFileName" : {
            "type" : "string",
            "example" : "keystore.p12"
          }
        }
      },
      "SsoKeystoreDetails" : {
        "type" : "object",
        "properties" : {
          "keys" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : ""
            }
          },
          "serialNumber" : {
            "type" : "integer",
            "example" : 2322472237
          },
          "subject" : {
            "type" : "string",
            "example" : "CN=SSO:jamf.com, OU=JSS, O=JAMF Software, L=Minneapolis, ST=MN, C=US"
          },
          "issuer" : {
            "type" : "string",
            "example" : "CN= Jamf Pro JSS Built-in Certificate Authority"
          },
          "expiration" : {
            "type" : "string",
            "example" : "2030-02-24T12:18:32.000"
          }
        }
      },
      "SsoKeystoreParse" : {
        "required" : [ "keystoreFile", "keystoreFileName", "keystorePassword" ],
        "type" : "object",
        "properties" : {
          "keystorePassword" : {
            "type" : "string",
            "format" : "password",
            "writeOnly" : true,
            "example" : "***"
          },
          "keystoreFile" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "keystoreFileName" : {
            "type" : "string",
            "example" : "keystore.p12"
          }
        },
        "discriminator" : {
          "propertyName" : "certType"
        }
      },
      "SsoKeystoreResponse" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "default" : " "
          },
          "keys" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CertificateKey"
            }
          },
          "type" : {
            "type" : "string",
            "example" : "PKCS12",
            "enum" : [ "PKCS12", "JKS", "NONE" ]
          },
          "keystoreSetupType" : {
            "type" : "string",
            "example" : "UPLOADED",
            "enum" : [ "NONE", "UPLOADED", "GENERATED" ]
          },
          "keystoreFileName" : {
            "type" : "string",
            "example" : "keystore.p12"
          }
        }
      },
      "SsoKeystoreResponseWithDetails" : {
        "type" : "object",
        "properties" : {
          "keystore" : {
            "$ref" : "#/components/schemas/SsoKeystoreResponse"
          },
          "keystoreDetails" : {
            "$ref" : "#/components/schemas/SsoKeystoreDetails"
          }
        }
      },
      "SsoKeystoreWithDetails" : {
        "type" : "object",
        "properties" : {
          "keystore" : {
            "$ref" : "#/components/schemas/SsoKeystore"
          },
          "keystoreDetails" : {
            "$ref" : "#/components/schemas/SsoKeystoreDetails"
          }
        }
      },
      "SsoMetadataUrl" : {
        "required" : [ "idpUrl" ],
        "type" : "object",
        "properties" : {
          "idpUrl" : {
            "type" : "string",
            "example" : "https://your-idp.com/saml/metadata"
          }
        }
      },
      "SsoSettings" : {
        "required" : [ "entityId", "groupAttributeName", "groupEnrollmentAccessEnabled", "groupRdnKey", "idpProviderType", "metadataSource", "ssoBypassAllowed", "ssoEnabled", "ssoForEnrollmentEnabled", "ssoForMacOsSelfServiceEnabled", "tokenExpirationDisabled", "userAttributeEnabled", "userMapping" ],
        "type" : "object",
        "properties" : {
          "ssoForEnrollmentEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "ssoBypassAllowed" : {
            "type" : "boolean",
            "default" : false
          },
          "ssoEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "ssoForMacOsSelfServiceEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "tokenExpirationDisabled" : {
            "type" : "boolean",
            "default" : false
          },
          "userAttributeEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "userAttributeName" : {
            "type" : "string",
            "default" : " "
          },
          "userMapping" : {
            "type" : "string",
            "example" : "USERNAME",
            "enum" : [ "USERNAME", "EMAIL" ]
          },
          "groupEnrollmentAccessEnabled" : {
            "type" : "boolean",
            "default" : false
          },
          "groupAttributeName" : {
            "type" : "string",
            "default" : "http://schemas.xmlsoap.org/claims/Group"
          },
          "groupRdnKey" : {
            "type" : "string",
            "default" : " "
          },
          "groupEnrollmentAccessName" : {
            "type" : "string",
            "default" : " "
          },
          "idpProviderType" : {
            "type" : "string",
            "example" : "ADFS",
            "enum" : [ "ADFS", "OKTA", "GOOGLE", "SHIBBOLETH", "ONELOGIN", "PING", "CENTRIFY", "AZURE", "OTHER" ]
          },
          "idpUrl" : {
            "type" : "string",
            "example" : "https://dev-940210.oktapreview.com/app/exk6bnecb9a4Z5spn0h7/sso/saml/metadata"
          },
          "entityId" : {
            "type" : "string",
            "example" : "saml/metadata"
          },
          "metadataFileName" : {
            "type" : "string",
            "example" : "if MetadataSource is set to URL, remove this field"
          },
          "otherProviderTypeName" : {
            "type" : "string",
            "default" : " "
          },
          "federationMetadataFile" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "metadataSource" : {
            "type" : "string",
            "example" : "URL",
            "enum" : [ "URL", "FILE", "UNKNOWN" ]
          },
          "sessionTimeout" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 480
          }
        }
      },
      "StartupStatus" : {
        "type" : "object",
        "properties" : {
          "step" : {
            "type" : "string",
            "example" : "Initializing"
          },
          "stepCode" : {
            "type" : "string",
            "example" : "SERVER_INIT_START",
            "enum" : [ "SERVER_INIT_START", "SERVER_INIT_ANALYZING_WEBAPP", "SERVER_INIT_POPULATING_NAVIGATION", "SERVER_INIT_POPULATING_OBJECTS", "SERVER_INIT_INITIALIZING_OBJ", "SERVER_INIT_VERIFYING_CACHE", "SERVER_INIT_INITIALIZING_CHANGE_MANAGEMENT", "SERVER_INIT_INITIALIZING_COMMUNICATION_SYSTEM", "SERVER_INIT_INITIALIZING_MDM_QUEUE_MONITOR", "SERVER_INIT_CALCULATING_SMART_GROUPS", "SERVER_INIT_DB_SCHEMA_COMPARE", "SERVER_INIT_DB_TABLE_CHECK_FOR_RENAME", "SERVER_INIT_DB_TABLE_ALTER", "SERVER_INIT_DB_TABLE_ANALYZING", "SERVER_INIT_DB_TABLE_CREATE", "SERVER_INIT_DB_TABLE_DROP", "SERVER_INIT_DB_TABLE_RENAME", "SERVER_INIT_DB_COLUMN_RENAME", "SERVER_INIT_DB_COLUMN_ENCODING_CHANGE_STEP_1", "SERVER_INIT_DB_COLUMN_ENCODING_CHANGE_STEP_2", "SERVER_INIT_DB_COLUMN_ENCODING_CHANGE_STEP_3", "SERVER_INIT_DB_UPGRADE_CHECK", "SERVER_INIT_DB_UPGRADE_COMPLETE", "SERVER_INIT_SS_GENERATE_NOTIFICATIONS", "SERVER_INIT_SS_GENERATE_NOTIFICATIONS_STATUS", "SERVER_INIT_SS_GENERATE_NOTIFICATIONS_FINALIZE", "SERVER_INIT_PKI_MIGRATION_DONE", "SERVER_INIT_PKI_MIGRATION_STATUS", "SERVER_INIT_MEMCACHED_ENDPOINTS_CHECK", "SERVER_INIT_CACHE_FLUSHING", "SERVER_INIT_COMPLETE" ]
          },
          "stepParam" : {
            "type" : "string",
            "example" : "buildings"
          },
          "percentage" : {
            "type" : "integer",
            "example" : 50
          },
          "warning" : {
            "type" : "string",
            "example" : "Converting buildings, do not restart your JSS"
          },
          "warningCode" : {
            "type" : "string",
            "example" : "SERVER_INIT_WARNING_DB_TABLE_ENCODING",
            "enum" : [ "SERVER_INIT_WARNING_DB_TABLE_ENCODING" ]
          },
          "warningParam" : {
            "type" : "string",
            "example" : "13 MB"
          },
          "error" : {
            "type" : "string",
            "example" : "Jamf Pro Startup Suspended"
          },
          "errorCode" : {
            "type" : "string",
            "example" : "SERVER_INIT_ERROR_INITIALIZATION_FAILED",
            "enum" : [ "CACHE_CONFIGURATION_ERROR", "SECONDARY_NODE_STARTUP_ERROR", "MORE_THAN_ONE_CLUSTER_SETTINGS_ERROR", "PRIMARY_NODE_NOT_SET_ERROR", "DATABASE_ERROR", "DATABASE_PASSWORD_MISSING", "EHCACHE_ERROR", "FLAG_INITIALIZATION_FAILED", "MEMCACHED_ERROR", "DATABASE_MYISAM_ERROR", "OLD_VERSION_ERROR" ]
          }
        }
      },
      "StaticUserGroup" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "Grade School Teachers"
          }
        }
      },
      "SupervisionIdentity" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "displayName" : {
            "type" : "string",
            "example" : "Supervision Identity"
          },
          "commonName" : {
            "type" : "string",
            "example" : "Jamf Identity - Supervision Identity"
          },
          "expirationDate" : {
            "type" : "string",
            "example" : "2000-10-31"
          }
        }
      },
      "SupervisionIdentityCertificateUpload" : {
        "required" : [ "displayName", "password" ],
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "example" : "Supervision Identity"
          },
          "password" : {
            "type" : "string",
            "example" : "jamf1234"
          },
          "certificateData" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "description" : "The base 64 encoded supervision identity certificate data",
            "format" : "byte"
          }
        }
      },
      "SupervisionIdentityCreate" : {
        "required" : [ "displayName", "password" ],
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "example" : "Supervision Identity"
          },
          "password" : {
            "type" : "string",
            "example" : "jamf1234"
          }
        }
      },
      "SupervisionIdentitySearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SupervisionIdentity"
            }
          }
        }
      },
      "SupervisionIdentityUpdate" : {
        "required" : [ "displayName" ],
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "example" : "Supervision Identity"
          }
        }
      },
      "TeacherFeatures" : {
        "type" : "object",
        "properties" : {
          "isAllowAppLock" : {
            "type" : "boolean",
            "example" : true
          },
          "isAllowWebLock" : {
            "type" : "boolean",
            "example" : true
          },
          "isAllowRestrictions" : {
            "type" : "boolean",
            "example" : true
          },
          "isAllowAttentionScreen" : {
            "type" : "boolean",
            "example" : true
          },
          "isAllowClearPasscode" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "TeacherSettingsRequest" : {
        "type" : "object",
        "properties" : {
          "isEnabled" : {
            "type" : "boolean",
            "example" : true
          },
          "timezoneId" : {
            "type" : "string",
            "example" : "Europe/Paris"
          },
          "autoClear" : {
            "type" : "string",
            "nullable" : true,
            "example" : "05:30"
          },
          "maxRestrictionLengthSeconds" : {
            "type" : "integer",
            "example" : 600
          },
          "safelistedApps" : {
            "$ref" : "#/components/schemas/SafelistedApps"
          }
        }
      },
      "TeacherSettingsResponse" : {
        "type" : "object",
        "properties" : {
          "isEnabled" : {
            "type" : "boolean",
            "example" : true
          },
          "timezoneId" : {
            "type" : "string",
            "example" : "Europe/Paris"
          },
          "autoClear" : {
            "type" : "string",
            "example" : "05:30"
          },
          "maxRestrictionLengthSeconds" : {
            "type" : "integer",
            "example" : 600
          },
          "displayNameType" : {
            "type" : "string",
            "example" : "user"
          },
          "features" : {
            "$ref" : "#/components/schemas/TeacherFeatures"
          },
          "safelistedApps" : {
            "$ref" : "#/components/schemas/SafelistedApps"
          }
        }
      },
      "TimeFrame" : {
        "type" : "object",
        "properties" : {
          "beginTime" : {
            "type" : "string",
            "example" : "08:30:00"
          },
          "endTime" : {
            "type" : "string",
            "example" : "15:45:00"
          }
        }
      },
      "TimeZone" : {
        "type" : "object",
        "properties" : {
          "zoneId" : {
            "type" : "string",
            "example" : "America/Chicago"
          },
          "region" : {
            "type" : "string",
            "example" : "America",
            "enum" : [ "Africa", "America", "Asia", "Atlantic", "Australia", "Europe", "Indian", "Pacific", "None" ]
          },
          "displayName" : {
            "type" : "string",
            "example" : "Chicago - CT (-0500)"
          }
        }
      },
      "TvOsDetails" : {
        "type" : "object",
        "properties" : {
          "model" : {
            "type" : "string",
            "example" : "Apple TV 3rd Generation Rev 2"
          },
          "modelIdentifier" : {
            "type" : "string",
            "example" : "AppleTV3,2"
          },
          "modelNumber" : {
            "type" : "string",
            "example" : "MD199LL"
          },
          "supervised" : {
            "type" : "boolean",
            "example" : true
          },
          "airplayPassword" : {
            "type" : "string",
            "example" : "1234"
          },
          "deviceId" : {
            "type" : "string",
            "example" : "1"
          },
          "locales" : {
            "type" : "string",
            "example" : "null"
          },
          "purchasing" : {
            "$ref" : "#/components/schemas/PurchasingV2"
          },
          "configurationProfiles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ConfigurationProfile"
            }
          }
        },
        "description" : "will be populated if the type is appleTv."
      },
      "Udids" : {
        "type" : "object",
        "properties" : {
          "udids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "6E47EF55-5318-494F-A09E-70F613E0AFD1"
            }
          }
        }
      },
      "UpdateAppleTv" : {
        "type" : "object",
        "properties" : {
          "airplayPassword" : {
            "type" : "string",
            "example" : "12345"
          },
          "purchasing" : {
            "$ref" : "#/components/schemas/Purchasing"
          }
        }
      },
      "UpdateIos" : {
        "type" : "object",
        "properties" : {
          "purchasing" : {
            "$ref" : "#/components/schemas/Purchasing"
          }
        }
      },
      "UpdateIosV2" : {
        "type" : "object",
        "properties" : {
          "purchasing" : {
            "$ref" : "#/components/schemas/PurchasingV2"
          }
        }
      },
      "UpdateMobileDevice" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Jan's Mobile Device"
          },
          "assetTag" : {
            "type" : "string",
            "example" : "8675309"
          },
          "siteId" : {
            "type" : "integer",
            "example" : 1
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "updatedExtensionAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtensionAttribute"
            }
          },
          "ios" : {
            "$ref" : "#/components/schemas/UpdateIos"
          },
          "appleTv" : {
            "$ref" : "#/components/schemas/UpdateAppleTv"
          }
        }
      },
      "UpdateMobileDeviceV2" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Mobile Device Name. When updated, Jamf Pro sends an MDM settings command to the device (device must be supervised).",
            "example" : "Jan's Mobile Device"
          },
          "enforceName" : {
            "type" : "boolean",
            "description" : "Enforce the mobile device name. Device must be supervised. If set to true, Jamf Pro will revert the Mobile Device Name to the ‘name’ value each time the device checks in.",
            "example" : true
          },
          "assetTag" : {
            "type" : "string",
            "example" : "8675309"
          },
          "siteId" : {
            "type" : "string",
            "example" : "1"
          },
          "timeZone" : {
            "type" : "string",
            "description" : "IANA time zone database name",
            "example" : "Europe/Warsaw"
          },
          "location" : {
            "$ref" : "#/components/schemas/LocationV2"
          },
          "updatedExtensionAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtensionAttributeV2"
            }
          },
          "ios" : {
            "$ref" : "#/components/schemas/UpdateIosV2"
          },
          "tvos" : {
            "$ref" : "#/components/schemas/UpdateTvOs"
          }
        }
      },
      "UpdateTvOs" : {
        "type" : "object",
        "properties" : {
          "airplayPassword" : {
            "type" : "string",
            "example" : "12345"
          },
          "purchasing" : {
            "$ref" : "#/components/schemas/PurchasingV2"
          }
        }
      },
      "UserAttributes" : {
        "type" : "object",
        "properties" : {
          "fullName" : {
            "type" : "string",
            "example" : "Bob"
          },
          "emailAddress" : {
            "type" : "string",
            "example" : "bob@jamf.com"
          },
          "phoneNumber" : {
            "type" : "string",
            "example" : "123456789"
          },
          "position" : {
            "type" : "string",
            "example" : "SE"
          },
          "room" : {
            "type" : "string",
            "example" : "1"
          },
          "buildingId" : {
            "type" : "string",
            "example" : "1"
          },
          "departmentId" : {
            "type" : "string",
            "example" : "Engineering"
          }
        }
      },
      "UserMappings" : {
        "required" : [ "building", "department", "emailAddress", "objectClassLimitation", "objectClasses", "phone", "position", "realName", "room", "searchBase", "searchScope", "userID", "userUuid", "username" ],
        "type" : "object",
        "properties" : {
          "objectClassLimitation" : {
            "type" : "string",
            "example" : "ANY_OBJECT_CLASSES",
            "enum" : [ "ANY_OBJECT_CLASSES", "ALL_OBJECT_CLASSES" ]
          },
          "objectClasses" : {
            "type" : "string",
            "example" : "inetOrgPerson"
          },
          "searchBase" : {
            "type" : "string",
            "example" : "ou=Users"
          },
          "searchScope" : {
            "type" : "string",
            "example" : "ALL_SUBTREES",
            "enum" : [ "ALL_SUBTREES", "FIRST_LEVEL_ONLY" ]
          },
          "additionalSearchBase" : {
            "type" : "string",
            "default" : ""
          },
          "userID" : {
            "type" : "string",
            "example" : "mail"
          },
          "username" : {
            "type" : "string",
            "example" : "uid"
          },
          "realName" : {
            "type" : "string",
            "example" : "displayName"
          },
          "emailAddress" : {
            "type" : "string",
            "example" : "mail"
          },
          "department" : {
            "type" : "string",
            "example" : "departmentNumber"
          },
          "building" : {
            "type" : "string",
            "default" : ""
          },
          "room" : {
            "type" : "string",
            "default" : ""
          },
          "phone" : {
            "type" : "string",
            "default" : ""
          },
          "position" : {
            "type" : "string",
            "example" : "title"
          },
          "userUuid" : {
            "type" : "string",
            "example" : "uid"
          }
        },
        "description" : "Cloud Identity Provider user mappings configuration"
      },
      "UserPreferencesJson" : {
        "type" : "object",
        "description" : "Valid JSON of any client-desired structure"
      },
      "UserTestSearch" : {
        "type" : "object",
        "properties" : {
          "distinguishedName" : {
            "type" : "string",
            "example" : "uid=admin,ou=Users,dc=jamf,dc=com"
          },
          "id" : {
            "type" : "string",
            "example" : "admin@jamf.com"
          },
          "uuid" : {
            "type" : "string",
            "example" : "admin"
          },
          "serverId" : {
            "type" : "string",
            "example" : "1001"
          },
          "name" : {
            "type" : "string",
            "example" : "admin"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/UserAttributes"
          }
        }
      },
      "UserTestSearchRequest" : {
        "required" : [ "username" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "example" : "admin"
          }
        }
      },
      "UserTestSearchResponse" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserTestSearch"
            }
          }
        }
      },
      "V1Site" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1"
          },
          "name" : {
            "type" : "string",
            "example" : "Eau Claire"
          }
        }
      },
      "VenafiCaRecord" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "readOnly" : true,
            "example" : 4
          },
          "name" : {
            "type" : "string",
            "example" : "Venafi Certificate Authority"
          },
          "username" : {
            "type" : "string",
            "example" : "username"
          },
          "password" : {
            "type" : "string",
            "writeOnly" : true,
            "example" : "password"
          },
          "passwordConfigured" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : true
          },
          "proxyAddress" : {
            "type" : "string",
            "example" : "localhost:9443"
          },
          "revocationEnabled" : {
            "type" : "boolean",
            "example" : true
          },
          "clientId" : {
            "type" : "string",
            "example" : "jamf-pro"
          },
          "refreshToken" : {
            "type" : "string",
            "writeOnly" : true,
            "example" : "qdkP4SrCFKd7tefAVM6N"
          },
          "refreshTokenConfigured" : {
            "type" : "boolean",
            "readOnly" : true,
            "example" : true
          }
        }
      },
      "VenafiPkiPayloadRecord" : {
        "type" : "object",
        "properties" : {
          "urlPath" : {
            "type" : "string",
            "example" : "OSXConfigurationProfile.html?id=1"
          },
          "name" : {
            "type" : "string",
            "example" : "Configuration Profile Name"
          }
        }
      },
      "VenafiPkiPayloadRecordSearchResults" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 3
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VenafiPkiPayloadRecord"
            }
          }
        }
      },
      "VenafiServiceStatus" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Successfully connected"
          }
        }
      },
      "VerbosePackageDeploymentResponse" : {
        "type" : "object",
        "properties" : {
          "queuedCommands" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "device" : {
                  "type" : "integer",
                  "example" : 1
                },
                "commandUuid" : {
                  "type" : "string",
                  "example" : "aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937"
                }
              }
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "device" : {
                  "type" : "integer",
                  "example" : 2
                },
                "group" : {
                  "type" : "integer",
                  "example" : 3
                },
                "reason" : {
                  "type" : "string",
                  "example" : "Device does not support the InstallEnterpriseApplication command"
                }
              },
              "description" : "The error will contain either the 'device' or 'group' property"
            }
          }
        }
      },
      "VoiceRoamingSetting" : {
        "type" : "string",
        "example" : "ENABLE_VOICE_ROAMING",
        "enum" : [ "ENABLE_VOICE_ROAMING", "DISABLE_VOICE_ROAMING" ]
      },
      "VolumePurchasingContent" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Example Content"
          },
          "licenseCountTotal" : {
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          },
          "licenseCountInUse" : {
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          },
          "licenseCountReported" : {
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          },
          "iconUrl" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "https://is4-ssl.mzstatic.com/image/thumb/Purple113/v4/73/d4/73/73d47332-fefc-d350-2984-5b4a4755a502/AppIcon-0-1x_U007emarketing-0-0-GLES2_U002c0-512MB-sRGB-0-0-0-85-220-0-0-0-6.png/360x216bb.png"
          },
          "deviceTypes" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "example" : "IOS",
              "enum" : [ "IOS", "MACOS", "TVOS" ]
            }
          },
          "contentType" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "IOS_APP",
            "enum" : [ "IOS_APP", "MAC_APP", "BOOK" ]
          },
          "pricingParam" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "STDQ",
            "enum" : [ "STDQ", "PLUS", "Unknown" ]
          },
          "adamId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "748057890"
          }
        }
      },
      "VolumePurchasingLocation" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/VolumePurchasingLocationListView"
        }, {
          "type" : "object",
          "properties" : {
            "content" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/VolumePurchasingContent"
              }
            }
          }
        } ]
      },
      "VolumePurchasingLocationListView" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Example Location"
          },
          "totalPurchasedLicenses" : {
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          },
          "totalUsedLicenses" : {
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          },
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "1"
          },
          "appleId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "testUser@apple.com"
          },
          "organizationName" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Jamf"
          },
          "tokenExpiration" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "2022-04-25T21:09:31.661Z"
          },
          "countryCode" : {
            "type" : "string",
            "description" : "The two-letter ISO 3166-1 code that designates the country where the Volume Purchasing account is located.",
            "readOnly" : true,
            "example" : "US"
          },
          "locationName" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "Example Location"
          },
          "clientContextMismatch" : {
            "type" : "boolean",
            "description" : "If this is \"true\", the clientContext used by this server does not match the clientContext returned by the Volume Purchasing API.",
            "readOnly" : true,
            "example" : false
          },
          "automaticallyPopulatePurchasedContent" : {
            "type" : "boolean",
            "example" : false
          },
          "sendNotificationWhenNoLongerAssigned" : {
            "type" : "boolean",
            "example" : false
          },
          "autoRegisterManagedUsers" : {
            "type" : "boolean",
            "example" : false
          },
          "siteId" : {
            "type" : "string",
            "example" : "1"
          }
        }
      },
      "VolumePurchasingLocationPatch" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : false,
            "example" : "Example Location"
          },
          "automaticallyPopulatePurchasedContent" : {
            "type" : "boolean",
            "nullable" : false,
            "example" : false
          },
          "sendNotificationWhenNoLongerAssigned" : {
            "type" : "boolean",
            "nullable" : false,
            "example" : false
          },
          "autoRegisterManagedUsers" : {
            "type" : "boolean",
            "example" : false,
            "default" : false
          },
          "siteId" : {
            "type" : "string",
            "nullable" : false,
            "example" : "1"
          },
          "serviceToken" : {
            "type" : "string",
            "nullable" : false,
            "example" : "eyJleHBEYXRlIjoiMjAyMi0wMy0yOVQxNTozNjoyNiswMDAwIiwidG9rZW4iOiJWR2hwY3lCcGN5QnViM1FnWVNCMGIydGxiaTRnU0c5d1pXWjFiR3g1SUdsMElHeHZiMnR6SUd4cGEyVWdZU0IwYjJ0bGJpd2dZblYwSUdsMEozTWdibTkwTGc9PSIsIm9yZ05hbWUiOiJFeGFtcGxlIE9yZyJ9"
          }
        }
      },
      "VolumePurchasingLocationPost" : {
        "required" : [ "serviceToken" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "If no value is provided when creating a VolumePurchasingLocation object, the 'name' will default to the 'locationName' value",
            "example" : "Example Location"
          },
          "automaticallyPopulatePurchasedContent" : {
            "type" : "boolean",
            "example" : false,
            "default" : false
          },
          "sendNotificationWhenNoLongerAssigned" : {
            "type" : "boolean",
            "example" : false,
            "default" : false
          },
          "autoRegisterManagedUsers" : {
            "type" : "boolean",
            "example" : false,
            "default" : false
          },
          "siteId" : {
            "type" : "string",
            "example" : "1",
            "default" : "-1"
          },
          "serviceToken" : {
            "type" : "string",
            "example" : "eyJleHBEYXRlIjoiMjAyMi0wMy0yOVQxNTozNjoyNiswMDAwIiwidG9rZW4iOiJWR2hwY3lCcGN5QnViM1FnWVNCMGIydGxiaTRnU0c5d1pXWjFiR3g1SUdsMElHeHZiMnR6SUd4cGEyVWdZU0IwYjJ0bGJpd2dZblYwSUdsMEozTWdibTkwTGc9PSIsIm9yZ05hbWUiOiJFeGFtcGxlIE9yZyJ9"
          }
        }
      },
      "VolumePurchasingLocations" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VolumePurchasingLocationListView"
            }
          }
        }
      },
      "VolumePurchasingSubscription" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/VolumePurchasingSubscriptionBase"
        }, {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "readOnly" : true,
              "example" : "1"
            }
          }
        } ]
      },
      "VolumePurchasingSubscriptionBase" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "minLength" : 1,
            "type" : "string",
            "example" : "Example"
          },
          "enabled" : {
            "type" : "boolean",
            "example" : true,
            "default" : true
          },
          "triggers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "NO_MORE_LICENSES",
              "enum" : [ "NO_MORE_LICENSES", "REMOVED_FROM_APP_STORE" ]
            }
          },
          "locationIds" : {
            "type" : "array",
            "items" : {
              "pattern" : "^\\d+$",
              "type" : "string",
              "example" : "1"
            }
          },
          "internalRecipients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InternalRecipient"
            }
          },
          "externalRecipients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalRecipient"
            }
          },
          "siteId" : {
            "type" : "string",
            "example" : "1",
            "default" : "-1"
          }
        }
      },
      "VolumePurchasingSubscriptions" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "example" : 1
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VolumePurchasingSubscription"
            }
          }
        }
      },
      "VppAdminAccount" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "VPP Admin Account"
          },
          "licenseCount" : {
            "type" : "integer",
            "example" : 42
          },
          "usedLicenseCount" : {
            "type" : "integer",
            "example" : 40
          },
          "location" : {
            "type" : "string",
            "example" : "Public School"
          },
          "expirationDate" : {
            "type" : "string",
            "example" : "2000-10-31"
          },
          "site" : {
            "$ref" : "#/components/schemas/Site"
          }
        }
      },
      "VppTokenSubscription" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "Subscription name"
          },
          "enabled" : {
            "type" : "boolean",
            "example" : false
          },
          "recipients" : {
            "$ref" : "#/components/schemas/Recipients"
          },
          "adminAccounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminAccount"
            }
          },
          "siteID" : {
            "type" : "integer",
            "example" : -1
          },
          "siteName" : {
            "type" : "string",
            "example" : "site A"
          }
        }
      },
      "WebLink" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "A popular search engine"
          },
          "url" : {
            "type" : "string",
            "example" : "https://duckduckgo.com"
          }
        }
      }
    },
    "parameters" : {
      "page" : {
        "name" : "page",
        "in" : "query",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "default" : 0
        }
      },
      "page-size" : {
        "name" : "page-size",
        "in" : "query",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "default" : 100
        }
      },
      "size" : {
        "name" : "size",
        "in" : "query",
        "required" : false,
        "deprecated" : true,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "default" : 100
        }
      },
      "pagesize" : {
        "name" : "pagesize",
        "in" : "query",
        "required" : false,
        "deprecated" : true,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer",
          "default" : 100
        }
      },
      "sort" : {
        "name" : "sort",
        "in" : "query",
        "description" : "Sorting criteria in the format: property:asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is not duplicated for each sort criterion, e.g., ...&sort=name:asc,date:desc. Fields that can be sorted: status, updated",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "default" : [ ]
        }
      },
      "filter" : {
        "name" : "filter",
        "in" : "query",
        "description" : "Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string",
          "default" : ""
        }
      },
      "export-fields" : {
        "name" : "export-fields",
        "in" : "query",
        "description" : "Export fields parameter, used to change default order or ignore some of the response properties. Default is empty array, which means that all fields of the response entity will be serialized. Example: export-fields=id,username",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "default" : [ ]
        }
      },
      "export-labels" : {
        "name" : "export-labels",
        "in" : "query",
        "description" : "Export labels parameter, used to customize fieldnames/columns in the exported file. Default is empty array, which means that response properties names will be used. Number of the provided labels must match the number of export-fields Example: export-labels=identifier,name with matching: export-fields=id,username",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "default" : [ ]
        }
      }
    },
    "securitySchemes" : {
      "Bearer" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      },
      "BasicAuth" : {
        "type" : "http",
        "scheme" : "basic"
      }
    }
  }
}