/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ParentApp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParentApp{}

// ParentApp struct for ParentApp
type ParentApp struct {
	TimezoneId string `json:"timezoneId"`
	RestrictedTimes ParentAppRestrictedTimes `json:"restrictedTimes"`
	DeviceGroupId int32 `json:"deviceGroupId"`
	IsEnabled bool `json:"isEnabled"`
	AllowTemplates *bool `json:"allowTemplates,omitempty"`
	DisassociateOnWipeAndReEnroll *bool `json:"disassociateOnWipeAndReEnroll,omitempty"`
	AllowClearPasscode *bool `json:"allowClearPasscode,omitempty"`
	SafelistedApps []SafelistedApp `json:"safelistedApps,omitempty"`
}

// NewParentApp instantiates a new ParentApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParentApp(timezoneId string, restrictedTimes ParentAppRestrictedTimes, deviceGroupId int32, isEnabled bool) *ParentApp {
	this := ParentApp{}
	this.TimezoneId = timezoneId
	this.RestrictedTimes = restrictedTimes
	this.DeviceGroupId = deviceGroupId
	this.IsEnabled = isEnabled
	return &this
}

// NewParentAppWithDefaults instantiates a new ParentApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParentAppWithDefaults() *ParentApp {
	this := ParentApp{}
	return &this
}

// GetTimezoneId returns the TimezoneId field value
func (o *ParentApp) GetTimezoneId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimezoneId
}

// GetTimezoneIdOk returns a tuple with the TimezoneId field value
// and a boolean to check if the value has been set.
func (o *ParentApp) GetTimezoneIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimezoneId, true
}

// SetTimezoneId sets field value
func (o *ParentApp) SetTimezoneId(v string) {
	o.TimezoneId = v
}

// GetRestrictedTimes returns the RestrictedTimes field value
func (o *ParentApp) GetRestrictedTimes() ParentAppRestrictedTimes {
	if o == nil {
		var ret ParentAppRestrictedTimes
		return ret
	}

	return o.RestrictedTimes
}

// GetRestrictedTimesOk returns a tuple with the RestrictedTimes field value
// and a boolean to check if the value has been set.
func (o *ParentApp) GetRestrictedTimesOk() (*ParentAppRestrictedTimes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RestrictedTimes, true
}

// SetRestrictedTimes sets field value
func (o *ParentApp) SetRestrictedTimes(v ParentAppRestrictedTimes) {
	o.RestrictedTimes = v
}

// GetDeviceGroupId returns the DeviceGroupId field value
func (o *ParentApp) GetDeviceGroupId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DeviceGroupId
}

// GetDeviceGroupIdOk returns a tuple with the DeviceGroupId field value
// and a boolean to check if the value has been set.
func (o *ParentApp) GetDeviceGroupIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceGroupId, true
}

// SetDeviceGroupId sets field value
func (o *ParentApp) SetDeviceGroupId(v int32) {
	o.DeviceGroupId = v
}

// GetIsEnabled returns the IsEnabled field value
func (o *ParentApp) GetIsEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value
// and a boolean to check if the value has been set.
func (o *ParentApp) GetIsEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsEnabled, true
}

// SetIsEnabled sets field value
func (o *ParentApp) SetIsEnabled(v bool) {
	o.IsEnabled = v
}

// GetAllowTemplates returns the AllowTemplates field value if set, zero value otherwise.
func (o *ParentApp) GetAllowTemplates() bool {
	if o == nil || IsNil(o.AllowTemplates) {
		var ret bool
		return ret
	}
	return *o.AllowTemplates
}

// GetAllowTemplatesOk returns a tuple with the AllowTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParentApp) GetAllowTemplatesOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowTemplates) {
		return nil, false
	}
	return o.AllowTemplates, true
}

// HasAllowTemplates returns a boolean if a field has been set.
func (o *ParentApp) HasAllowTemplates() bool {
	if o != nil && !IsNil(o.AllowTemplates) {
		return true
	}

	return false
}

// SetAllowTemplates gets a reference to the given bool and assigns it to the AllowTemplates field.
func (o *ParentApp) SetAllowTemplates(v bool) {
	o.AllowTemplates = &v
}

// GetDisassociateOnWipeAndReEnroll returns the DisassociateOnWipeAndReEnroll field value if set, zero value otherwise.
func (o *ParentApp) GetDisassociateOnWipeAndReEnroll() bool {
	if o == nil || IsNil(o.DisassociateOnWipeAndReEnroll) {
		var ret bool
		return ret
	}
	return *o.DisassociateOnWipeAndReEnroll
}

// GetDisassociateOnWipeAndReEnrollOk returns a tuple with the DisassociateOnWipeAndReEnroll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParentApp) GetDisassociateOnWipeAndReEnrollOk() (*bool, bool) {
	if o == nil || IsNil(o.DisassociateOnWipeAndReEnroll) {
		return nil, false
	}
	return o.DisassociateOnWipeAndReEnroll, true
}

// HasDisassociateOnWipeAndReEnroll returns a boolean if a field has been set.
func (o *ParentApp) HasDisassociateOnWipeAndReEnroll() bool {
	if o != nil && !IsNil(o.DisassociateOnWipeAndReEnroll) {
		return true
	}

	return false
}

// SetDisassociateOnWipeAndReEnroll gets a reference to the given bool and assigns it to the DisassociateOnWipeAndReEnroll field.
func (o *ParentApp) SetDisassociateOnWipeAndReEnroll(v bool) {
	o.DisassociateOnWipeAndReEnroll = &v
}

// GetAllowClearPasscode returns the AllowClearPasscode field value if set, zero value otherwise.
func (o *ParentApp) GetAllowClearPasscode() bool {
	if o == nil || IsNil(o.AllowClearPasscode) {
		var ret bool
		return ret
	}
	return *o.AllowClearPasscode
}

// GetAllowClearPasscodeOk returns a tuple with the AllowClearPasscode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParentApp) GetAllowClearPasscodeOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowClearPasscode) {
		return nil, false
	}
	return o.AllowClearPasscode, true
}

// HasAllowClearPasscode returns a boolean if a field has been set.
func (o *ParentApp) HasAllowClearPasscode() bool {
	if o != nil && !IsNil(o.AllowClearPasscode) {
		return true
	}

	return false
}

// SetAllowClearPasscode gets a reference to the given bool and assigns it to the AllowClearPasscode field.
func (o *ParentApp) SetAllowClearPasscode(v bool) {
	o.AllowClearPasscode = &v
}

// GetSafelistedApps returns the SafelistedApps field value if set, zero value otherwise.
func (o *ParentApp) GetSafelistedApps() []SafelistedApp {
	if o == nil || IsNil(o.SafelistedApps) {
		var ret []SafelistedApp
		return ret
	}
	return o.SafelistedApps
}

// GetSafelistedAppsOk returns a tuple with the SafelistedApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParentApp) GetSafelistedAppsOk() ([]SafelistedApp, bool) {
	if o == nil || IsNil(o.SafelistedApps) {
		return nil, false
	}
	return o.SafelistedApps, true
}

// HasSafelistedApps returns a boolean if a field has been set.
func (o *ParentApp) HasSafelistedApps() bool {
	if o != nil && !IsNil(o.SafelistedApps) {
		return true
	}

	return false
}

// SetSafelistedApps gets a reference to the given []SafelistedApp and assigns it to the SafelistedApps field.
func (o *ParentApp) SetSafelistedApps(v []SafelistedApp) {
	o.SafelistedApps = v
}

func (o ParentApp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParentApp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["timezoneId"] = o.TimezoneId
	toSerialize["restrictedTimes"] = o.RestrictedTimes
	toSerialize["deviceGroupId"] = o.DeviceGroupId
	toSerialize["isEnabled"] = o.IsEnabled
	if !IsNil(o.AllowTemplates) {
		toSerialize["allowTemplates"] = o.AllowTemplates
	}
	if !IsNil(o.DisassociateOnWipeAndReEnroll) {
		toSerialize["disassociateOnWipeAndReEnroll"] = o.DisassociateOnWipeAndReEnroll
	}
	if !IsNil(o.AllowClearPasscode) {
		toSerialize["allowClearPasscode"] = o.AllowClearPasscode
	}
	if !IsNil(o.SafelistedApps) {
		toSerialize["safelistedApps"] = o.SafelistedApps
	}
	return toSerialize, nil
}

type NullableParentApp struct {
	value *ParentApp
	isSet bool
}

func (v NullableParentApp) Get() *ParentApp {
	return v.value
}

func (v *NullableParentApp) Set(val *ParentApp) {
	v.value = val
	v.isSet = true
}

func (v NullableParentApp) IsSet() bool {
	return v.isSet
}

func (v *NullableParentApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParentApp(val *ParentApp) *NullableParentApp {
	return &NullableParentApp{value: val, isSet: true}
}

func (v NullableParentApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParentApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


