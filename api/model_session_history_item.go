/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the SessionHistoryItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SessionHistoryItem{}

// SessionHistoryItem struct for SessionHistoryItem
type SessionHistoryItem struct {
	TenantId *string `json:"tenantId,omitempty"`
	SessionId *string `json:"sessionId,omitempty"`
	DeviceId *string `json:"deviceId,omitempty"`
	SessionStartedTimestamp *time.Time `json:"sessionStartedTimestamp,omitempty"`
	SessionEndedTimestamp *time.Time `json:"sessionEndedTimestamp,omitempty"`
	SessionType *string `json:"sessionType,omitempty"`
	StatusType *string `json:"statusType,omitempty"`
	SessionAdminId *string `json:"sessionAdminId,omitempty"`
	Comment *string `json:"comment,omitempty"`
}

// NewSessionHistoryItem instantiates a new SessionHistoryItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionHistoryItem() *SessionHistoryItem {
	this := SessionHistoryItem{}
	return &this
}

// NewSessionHistoryItemWithDefaults instantiates a new SessionHistoryItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionHistoryItemWithDefaults() *SessionHistoryItem {
	this := SessionHistoryItem{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *SessionHistoryItem) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionHistoryItem) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *SessionHistoryItem) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *SessionHistoryItem) SetTenantId(v string) {
	o.TenantId = &v
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *SessionHistoryItem) GetSessionId() string {
	if o == nil || IsNil(o.SessionId) {
		var ret string
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionHistoryItem) GetSessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SessionId) {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *SessionHistoryItem) HasSessionId() bool {
	if o != nil && !IsNil(o.SessionId) {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given string and assigns it to the SessionId field.
func (o *SessionHistoryItem) SetSessionId(v string) {
	o.SessionId = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *SessionHistoryItem) GetDeviceId() string {
	if o == nil || IsNil(o.DeviceId) {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionHistoryItem) GetDeviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *SessionHistoryItem) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *SessionHistoryItem) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetSessionStartedTimestamp returns the SessionStartedTimestamp field value if set, zero value otherwise.
func (o *SessionHistoryItem) GetSessionStartedTimestamp() time.Time {
	if o == nil || IsNil(o.SessionStartedTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.SessionStartedTimestamp
}

// GetSessionStartedTimestampOk returns a tuple with the SessionStartedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionHistoryItem) GetSessionStartedTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SessionStartedTimestamp) {
		return nil, false
	}
	return o.SessionStartedTimestamp, true
}

// HasSessionStartedTimestamp returns a boolean if a field has been set.
func (o *SessionHistoryItem) HasSessionStartedTimestamp() bool {
	if o != nil && !IsNil(o.SessionStartedTimestamp) {
		return true
	}

	return false
}

// SetSessionStartedTimestamp gets a reference to the given time.Time and assigns it to the SessionStartedTimestamp field.
func (o *SessionHistoryItem) SetSessionStartedTimestamp(v time.Time) {
	o.SessionStartedTimestamp = &v
}

// GetSessionEndedTimestamp returns the SessionEndedTimestamp field value if set, zero value otherwise.
func (o *SessionHistoryItem) GetSessionEndedTimestamp() time.Time {
	if o == nil || IsNil(o.SessionEndedTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.SessionEndedTimestamp
}

// GetSessionEndedTimestampOk returns a tuple with the SessionEndedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionHistoryItem) GetSessionEndedTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SessionEndedTimestamp) {
		return nil, false
	}
	return o.SessionEndedTimestamp, true
}

// HasSessionEndedTimestamp returns a boolean if a field has been set.
func (o *SessionHistoryItem) HasSessionEndedTimestamp() bool {
	if o != nil && !IsNil(o.SessionEndedTimestamp) {
		return true
	}

	return false
}

// SetSessionEndedTimestamp gets a reference to the given time.Time and assigns it to the SessionEndedTimestamp field.
func (o *SessionHistoryItem) SetSessionEndedTimestamp(v time.Time) {
	o.SessionEndedTimestamp = &v
}

// GetSessionType returns the SessionType field value if set, zero value otherwise.
func (o *SessionHistoryItem) GetSessionType() string {
	if o == nil || IsNil(o.SessionType) {
		var ret string
		return ret
	}
	return *o.SessionType
}

// GetSessionTypeOk returns a tuple with the SessionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionHistoryItem) GetSessionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SessionType) {
		return nil, false
	}
	return o.SessionType, true
}

// HasSessionType returns a boolean if a field has been set.
func (o *SessionHistoryItem) HasSessionType() bool {
	if o != nil && !IsNil(o.SessionType) {
		return true
	}

	return false
}

// SetSessionType gets a reference to the given string and assigns it to the SessionType field.
func (o *SessionHistoryItem) SetSessionType(v string) {
	o.SessionType = &v
}

// GetStatusType returns the StatusType field value if set, zero value otherwise.
func (o *SessionHistoryItem) GetStatusType() string {
	if o == nil || IsNil(o.StatusType) {
		var ret string
		return ret
	}
	return *o.StatusType
}

// GetStatusTypeOk returns a tuple with the StatusType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionHistoryItem) GetStatusTypeOk() (*string, bool) {
	if o == nil || IsNil(o.StatusType) {
		return nil, false
	}
	return o.StatusType, true
}

// HasStatusType returns a boolean if a field has been set.
func (o *SessionHistoryItem) HasStatusType() bool {
	if o != nil && !IsNil(o.StatusType) {
		return true
	}

	return false
}

// SetStatusType gets a reference to the given string and assigns it to the StatusType field.
func (o *SessionHistoryItem) SetStatusType(v string) {
	o.StatusType = &v
}

// GetSessionAdminId returns the SessionAdminId field value if set, zero value otherwise.
func (o *SessionHistoryItem) GetSessionAdminId() string {
	if o == nil || IsNil(o.SessionAdminId) {
		var ret string
		return ret
	}
	return *o.SessionAdminId
}

// GetSessionAdminIdOk returns a tuple with the SessionAdminId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionHistoryItem) GetSessionAdminIdOk() (*string, bool) {
	if o == nil || IsNil(o.SessionAdminId) {
		return nil, false
	}
	return o.SessionAdminId, true
}

// HasSessionAdminId returns a boolean if a field has been set.
func (o *SessionHistoryItem) HasSessionAdminId() bool {
	if o != nil && !IsNil(o.SessionAdminId) {
		return true
	}

	return false
}

// SetSessionAdminId gets a reference to the given string and assigns it to the SessionAdminId field.
func (o *SessionHistoryItem) SetSessionAdminId(v string) {
	o.SessionAdminId = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *SessionHistoryItem) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionHistoryItem) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *SessionHistoryItem) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *SessionHistoryItem) SetComment(v string) {
	o.Comment = &v
}

func (o SessionHistoryItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SessionHistoryItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.SessionId) {
		toSerialize["sessionId"] = o.SessionId
	}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.SessionStartedTimestamp) {
		toSerialize["sessionStartedTimestamp"] = o.SessionStartedTimestamp
	}
	if !IsNil(o.SessionEndedTimestamp) {
		toSerialize["sessionEndedTimestamp"] = o.SessionEndedTimestamp
	}
	if !IsNil(o.SessionType) {
		toSerialize["sessionType"] = o.SessionType
	}
	if !IsNil(o.StatusType) {
		toSerialize["statusType"] = o.StatusType
	}
	if !IsNil(o.SessionAdminId) {
		toSerialize["sessionAdminId"] = o.SessionAdminId
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	return toSerialize, nil
}

type NullableSessionHistoryItem struct {
	value *SessionHistoryItem
	isSet bool
}

func (v NullableSessionHistoryItem) Get() *SessionHistoryItem {
	return v.value
}

func (v *NullableSessionHistoryItem) Set(val *SessionHistoryItem) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionHistoryItem) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionHistoryItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionHistoryItem(val *SessionHistoryItem) *NullableSessionHistoryItem {
	return &NullableSessionHistoryItem{value: val, isSet: true}
}

func (v NullableSessionHistoryItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionHistoryItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


