/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the MobileDevice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MobileDevice{}

// MobileDevice struct for MobileDevice
type MobileDevice struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	SerialNumber *string `json:"serialNumber,omitempty"`
	WifiMacAddress *string `json:"wifiMacAddress,omitempty"`
	Udid *string `json:"udid,omitempty"`
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	Model *string `json:"model,omitempty"`
	ModelIdentifier *string `json:"modelIdentifier,omitempty"`
	Username *string `json:"username,omitempty"`
	Type *string `json:"type,omitempty"`
	SoftwareUpdateDeviceId *string `json:"softwareUpdateDeviceId,omitempty"`
}

// NewMobileDevice instantiates a new MobileDevice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileDevice() *MobileDevice {
	this := MobileDevice{}
	return &this
}

// NewMobileDeviceWithDefaults instantiates a new MobileDevice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileDeviceWithDefaults() *MobileDevice {
	this := MobileDevice{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MobileDevice) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDevice) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MobileDevice) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MobileDevice) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MobileDevice) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDevice) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MobileDevice) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MobileDevice) SetName(v string) {
	o.Name = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *MobileDevice) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDevice) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *MobileDevice) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *MobileDevice) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetWifiMacAddress returns the WifiMacAddress field value if set, zero value otherwise.
func (o *MobileDevice) GetWifiMacAddress() string {
	if o == nil || IsNil(o.WifiMacAddress) {
		var ret string
		return ret
	}
	return *o.WifiMacAddress
}

// GetWifiMacAddressOk returns a tuple with the WifiMacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDevice) GetWifiMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.WifiMacAddress) {
		return nil, false
	}
	return o.WifiMacAddress, true
}

// HasWifiMacAddress returns a boolean if a field has been set.
func (o *MobileDevice) HasWifiMacAddress() bool {
	if o != nil && !IsNil(o.WifiMacAddress) {
		return true
	}

	return false
}

// SetWifiMacAddress gets a reference to the given string and assigns it to the WifiMacAddress field.
func (o *MobileDevice) SetWifiMacAddress(v string) {
	o.WifiMacAddress = &v
}

// GetUdid returns the Udid field value if set, zero value otherwise.
func (o *MobileDevice) GetUdid() string {
	if o == nil || IsNil(o.Udid) {
		var ret string
		return ret
	}
	return *o.Udid
}

// GetUdidOk returns a tuple with the Udid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDevice) GetUdidOk() (*string, bool) {
	if o == nil || IsNil(o.Udid) {
		return nil, false
	}
	return o.Udid, true
}

// HasUdid returns a boolean if a field has been set.
func (o *MobileDevice) HasUdid() bool {
	if o != nil && !IsNil(o.Udid) {
		return true
	}

	return false
}

// SetUdid gets a reference to the given string and assigns it to the Udid field.
func (o *MobileDevice) SetUdid(v string) {
	o.Udid = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *MobileDevice) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDevice) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *MobileDevice) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *MobileDevice) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *MobileDevice) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDevice) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *MobileDevice) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *MobileDevice) SetModel(v string) {
	o.Model = &v
}

// GetModelIdentifier returns the ModelIdentifier field value if set, zero value otherwise.
func (o *MobileDevice) GetModelIdentifier() string {
	if o == nil || IsNil(o.ModelIdentifier) {
		var ret string
		return ret
	}
	return *o.ModelIdentifier
}

// GetModelIdentifierOk returns a tuple with the ModelIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDevice) GetModelIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.ModelIdentifier) {
		return nil, false
	}
	return o.ModelIdentifier, true
}

// HasModelIdentifier returns a boolean if a field has been set.
func (o *MobileDevice) HasModelIdentifier() bool {
	if o != nil && !IsNil(o.ModelIdentifier) {
		return true
	}

	return false
}

// SetModelIdentifier gets a reference to the given string and assigns it to the ModelIdentifier field.
func (o *MobileDevice) SetModelIdentifier(v string) {
	o.ModelIdentifier = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *MobileDevice) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDevice) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *MobileDevice) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *MobileDevice) SetUsername(v string) {
	o.Username = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MobileDevice) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDevice) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MobileDevice) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MobileDevice) SetType(v string) {
	o.Type = &v
}

// GetSoftwareUpdateDeviceId returns the SoftwareUpdateDeviceId field value if set, zero value otherwise.
func (o *MobileDevice) GetSoftwareUpdateDeviceId() string {
	if o == nil || IsNil(o.SoftwareUpdateDeviceId) {
		var ret string
		return ret
	}
	return *o.SoftwareUpdateDeviceId
}

// GetSoftwareUpdateDeviceIdOk returns a tuple with the SoftwareUpdateDeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDevice) GetSoftwareUpdateDeviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SoftwareUpdateDeviceId) {
		return nil, false
	}
	return o.SoftwareUpdateDeviceId, true
}

// HasSoftwareUpdateDeviceId returns a boolean if a field has been set.
func (o *MobileDevice) HasSoftwareUpdateDeviceId() bool {
	if o != nil && !IsNil(o.SoftwareUpdateDeviceId) {
		return true
	}

	return false
}

// SetSoftwareUpdateDeviceId gets a reference to the given string and assigns it to the SoftwareUpdateDeviceId field.
func (o *MobileDevice) SetSoftwareUpdateDeviceId(v string) {
	o.SoftwareUpdateDeviceId = &v
}

func (o MobileDevice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MobileDevice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["serialNumber"] = o.SerialNumber
	}
	if !IsNil(o.WifiMacAddress) {
		toSerialize["wifiMacAddress"] = o.WifiMacAddress
	}
	if !IsNil(o.Udid) {
		toSerialize["udid"] = o.Udid
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.ModelIdentifier) {
		toSerialize["modelIdentifier"] = o.ModelIdentifier
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.SoftwareUpdateDeviceId) {
		toSerialize["softwareUpdateDeviceId"] = o.SoftwareUpdateDeviceId
	}
	return toSerialize, nil
}

type NullableMobileDevice struct {
	value *MobileDevice
	isSet bool
}

func (v NullableMobileDevice) Get() *MobileDevice {
	return v.value
}

func (v *NullableMobileDevice) Set(val *MobileDevice) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileDevice) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileDevice(val *MobileDevice) *NullableMobileDevice {
	return &NullableMobileDevice{value: val, isSet: true}
}

func (v NullableMobileDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


