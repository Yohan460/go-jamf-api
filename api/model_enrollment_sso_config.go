/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EnrollmentSsoConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnrollmentSsoConfig{}

// EnrollmentSsoConfig struct for EnrollmentSsoConfig
type EnrollmentSsoConfig struct {
	Hosts []string `json:"hosts"`
	ManagementHint *string `json:"managementHint,omitempty"`
}

type _EnrollmentSsoConfig EnrollmentSsoConfig

// NewEnrollmentSsoConfig instantiates a new EnrollmentSsoConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnrollmentSsoConfig(hosts []string) *EnrollmentSsoConfig {
	this := EnrollmentSsoConfig{}
	this.Hosts = hosts
	var managementHint string = ""
	this.ManagementHint = &managementHint
	return &this
}

// NewEnrollmentSsoConfigWithDefaults instantiates a new EnrollmentSsoConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnrollmentSsoConfigWithDefaults() *EnrollmentSsoConfig {
	this := EnrollmentSsoConfig{}
	var managementHint string = ""
	this.ManagementHint = &managementHint
	return &this
}

// GetHosts returns the Hosts field value
func (o *EnrollmentSsoConfig) GetHosts() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value
// and a boolean to check if the value has been set.
func (o *EnrollmentSsoConfig) GetHostsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Hosts, true
}

// SetHosts sets field value
func (o *EnrollmentSsoConfig) SetHosts(v []string) {
	o.Hosts = v
}

// GetManagementHint returns the ManagementHint field value if set, zero value otherwise.
func (o *EnrollmentSsoConfig) GetManagementHint() string {
	if o == nil || IsNil(o.ManagementHint) {
		var ret string
		return ret
	}
	return *o.ManagementHint
}

// GetManagementHintOk returns a tuple with the ManagementHint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSsoConfig) GetManagementHintOk() (*string, bool) {
	if o == nil || IsNil(o.ManagementHint) {
		return nil, false
	}
	return o.ManagementHint, true
}

// HasManagementHint returns a boolean if a field has been set.
func (o *EnrollmentSsoConfig) HasManagementHint() bool {
	if o != nil && !IsNil(o.ManagementHint) {
		return true
	}

	return false
}

// SetManagementHint gets a reference to the given string and assigns it to the ManagementHint field.
func (o *EnrollmentSsoConfig) SetManagementHint(v string) {
	o.ManagementHint = &v
}

func (o EnrollmentSsoConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnrollmentSsoConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hosts"] = o.Hosts
	if !IsNil(o.ManagementHint) {
		toSerialize["managementHint"] = o.ManagementHint
	}
	return toSerialize, nil
}

func (o *EnrollmentSsoConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hosts",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEnrollmentSsoConfig := _EnrollmentSsoConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEnrollmentSsoConfig)

	if err != nil {
		return err
	}

	*o = EnrollmentSsoConfig(varEnrollmentSsoConfig)

	return err
}

type NullableEnrollmentSsoConfig struct {
	value *EnrollmentSsoConfig
	isSet bool
}

func (v NullableEnrollmentSsoConfig) Get() *EnrollmentSsoConfig {
	return v.value
}

func (v *NullableEnrollmentSsoConfig) Set(val *EnrollmentSsoConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableEnrollmentSsoConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableEnrollmentSsoConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnrollmentSsoConfig(val *EnrollmentSsoConfig) *NullableEnrollmentSsoConfig {
	return &NullableEnrollmentSsoConfig{value: val, isSet: true}
}

func (v NullableEnrollmentSsoConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnrollmentSsoConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


