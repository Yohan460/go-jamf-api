/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the SsoKeystoreResponseWithDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SsoKeystoreResponseWithDetails{}

// SsoKeystoreResponseWithDetails struct for SsoKeystoreResponseWithDetails
type SsoKeystoreResponseWithDetails struct {
	Keystore *SsoKeystoreResponse `json:"keystore,omitempty"`
	KeystoreDetails *SsoKeystoreDetails `json:"keystoreDetails,omitempty"`
}

// NewSsoKeystoreResponseWithDetails instantiates a new SsoKeystoreResponseWithDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSsoKeystoreResponseWithDetails() *SsoKeystoreResponseWithDetails {
	this := SsoKeystoreResponseWithDetails{}
	return &this
}

// NewSsoKeystoreResponseWithDetailsWithDefaults instantiates a new SsoKeystoreResponseWithDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSsoKeystoreResponseWithDetailsWithDefaults() *SsoKeystoreResponseWithDetails {
	this := SsoKeystoreResponseWithDetails{}
	return &this
}

// GetKeystore returns the Keystore field value if set, zero value otherwise.
func (o *SsoKeystoreResponseWithDetails) GetKeystore() SsoKeystoreResponse {
	if o == nil || IsNil(o.Keystore) {
		var ret SsoKeystoreResponse
		return ret
	}
	return *o.Keystore
}

// GetKeystoreOk returns a tuple with the Keystore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoKeystoreResponseWithDetails) GetKeystoreOk() (*SsoKeystoreResponse, bool) {
	if o == nil || IsNil(o.Keystore) {
		return nil, false
	}
	return o.Keystore, true
}

// HasKeystore returns a boolean if a field has been set.
func (o *SsoKeystoreResponseWithDetails) HasKeystore() bool {
	if o != nil && !IsNil(o.Keystore) {
		return true
	}

	return false
}

// SetKeystore gets a reference to the given SsoKeystoreResponse and assigns it to the Keystore field.
func (o *SsoKeystoreResponseWithDetails) SetKeystore(v SsoKeystoreResponse) {
	o.Keystore = &v
}

// GetKeystoreDetails returns the KeystoreDetails field value if set, zero value otherwise.
func (o *SsoKeystoreResponseWithDetails) GetKeystoreDetails() SsoKeystoreDetails {
	if o == nil || IsNil(o.KeystoreDetails) {
		var ret SsoKeystoreDetails
		return ret
	}
	return *o.KeystoreDetails
}

// GetKeystoreDetailsOk returns a tuple with the KeystoreDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoKeystoreResponseWithDetails) GetKeystoreDetailsOk() (*SsoKeystoreDetails, bool) {
	if o == nil || IsNil(o.KeystoreDetails) {
		return nil, false
	}
	return o.KeystoreDetails, true
}

// HasKeystoreDetails returns a boolean if a field has been set.
func (o *SsoKeystoreResponseWithDetails) HasKeystoreDetails() bool {
	if o != nil && !IsNil(o.KeystoreDetails) {
		return true
	}

	return false
}

// SetKeystoreDetails gets a reference to the given SsoKeystoreDetails and assigns it to the KeystoreDetails field.
func (o *SsoKeystoreResponseWithDetails) SetKeystoreDetails(v SsoKeystoreDetails) {
	o.KeystoreDetails = &v
}

func (o SsoKeystoreResponseWithDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SsoKeystoreResponseWithDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Keystore) {
		toSerialize["keystore"] = o.Keystore
	}
	if !IsNil(o.KeystoreDetails) {
		toSerialize["keystoreDetails"] = o.KeystoreDetails
	}
	return toSerialize, nil
}

type NullableSsoKeystoreResponseWithDetails struct {
	value *SsoKeystoreResponseWithDetails
	isSet bool
}

func (v NullableSsoKeystoreResponseWithDetails) Get() *SsoKeystoreResponseWithDetails {
	return v.value
}

func (v *NullableSsoKeystoreResponseWithDetails) Set(val *SsoKeystoreResponseWithDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableSsoKeystoreResponseWithDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableSsoKeystoreResponseWithDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSsoKeystoreResponseWithDetails(val *SsoKeystoreResponseWithDetails) *NullableSsoKeystoreResponseWithDetails {
	return &NullableSsoKeystoreResponseWithDetails{value: val, isSet: true}
}

func (v NullableSsoKeystoreResponseWithDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSsoKeystoreResponseWithDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


