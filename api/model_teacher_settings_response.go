/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TeacherSettingsResponse struct for TeacherSettingsResponse
type TeacherSettingsResponse struct {
	IsEnabled *bool `json:"isEnabled,omitempty"`
	TimezoneId *string `json:"timezoneId,omitempty"`
	AutoClear *string `json:"autoClear,omitempty"`
	MaxRestrictionLengthSeconds *int32 `json:"maxRestrictionLengthSeconds,omitempty"`
	DisplayNameType *string `json:"displayNameType,omitempty"`
	Features *TeacherFeatures `json:"features,omitempty"`
	SafelistedApps []SafelistedAppsInner `json:"safelistedApps,omitempty"`
}

// NewTeacherSettingsResponse instantiates a new TeacherSettingsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeacherSettingsResponse() *TeacherSettingsResponse {
	this := TeacherSettingsResponse{}
	return &this
}

// NewTeacherSettingsResponseWithDefaults instantiates a new TeacherSettingsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeacherSettingsResponseWithDefaults() *TeacherSettingsResponse {
	this := TeacherSettingsResponse{}
	return &this
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise.
func (o *TeacherSettingsResponse) GetIsEnabled() bool {
	if o == nil || o.IsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeacherSettingsResponse) GetIsEnabledOk() (*bool, bool) {
	if o == nil || o.IsEnabled == nil {
		return nil, false
	}
	return o.IsEnabled, true
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *TeacherSettingsResponse) HasIsEnabled() bool {
	if o != nil && o.IsEnabled != nil {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given bool and assigns it to the IsEnabled field.
func (o *TeacherSettingsResponse) SetIsEnabled(v bool) {
	o.IsEnabled = &v
}

// GetTimezoneId returns the TimezoneId field value if set, zero value otherwise.
func (o *TeacherSettingsResponse) GetTimezoneId() string {
	if o == nil || o.TimezoneId == nil {
		var ret string
		return ret
	}
	return *o.TimezoneId
}

// GetTimezoneIdOk returns a tuple with the TimezoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeacherSettingsResponse) GetTimezoneIdOk() (*string, bool) {
	if o == nil || o.TimezoneId == nil {
		return nil, false
	}
	return o.TimezoneId, true
}

// HasTimezoneId returns a boolean if a field has been set.
func (o *TeacherSettingsResponse) HasTimezoneId() bool {
	if o != nil && o.TimezoneId != nil {
		return true
	}

	return false
}

// SetTimezoneId gets a reference to the given string and assigns it to the TimezoneId field.
func (o *TeacherSettingsResponse) SetTimezoneId(v string) {
	o.TimezoneId = &v
}

// GetAutoClear returns the AutoClear field value if set, zero value otherwise.
func (o *TeacherSettingsResponse) GetAutoClear() string {
	if o == nil || o.AutoClear == nil {
		var ret string
		return ret
	}
	return *o.AutoClear
}

// GetAutoClearOk returns a tuple with the AutoClear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeacherSettingsResponse) GetAutoClearOk() (*string, bool) {
	if o == nil || o.AutoClear == nil {
		return nil, false
	}
	return o.AutoClear, true
}

// HasAutoClear returns a boolean if a field has been set.
func (o *TeacherSettingsResponse) HasAutoClear() bool {
	if o != nil && o.AutoClear != nil {
		return true
	}

	return false
}

// SetAutoClear gets a reference to the given string and assigns it to the AutoClear field.
func (o *TeacherSettingsResponse) SetAutoClear(v string) {
	o.AutoClear = &v
}

// GetMaxRestrictionLengthSeconds returns the MaxRestrictionLengthSeconds field value if set, zero value otherwise.
func (o *TeacherSettingsResponse) GetMaxRestrictionLengthSeconds() int32 {
	if o == nil || o.MaxRestrictionLengthSeconds == nil {
		var ret int32
		return ret
	}
	return *o.MaxRestrictionLengthSeconds
}

// GetMaxRestrictionLengthSecondsOk returns a tuple with the MaxRestrictionLengthSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeacherSettingsResponse) GetMaxRestrictionLengthSecondsOk() (*int32, bool) {
	if o == nil || o.MaxRestrictionLengthSeconds == nil {
		return nil, false
	}
	return o.MaxRestrictionLengthSeconds, true
}

// HasMaxRestrictionLengthSeconds returns a boolean if a field has been set.
func (o *TeacherSettingsResponse) HasMaxRestrictionLengthSeconds() bool {
	if o != nil && o.MaxRestrictionLengthSeconds != nil {
		return true
	}

	return false
}

// SetMaxRestrictionLengthSeconds gets a reference to the given int32 and assigns it to the MaxRestrictionLengthSeconds field.
func (o *TeacherSettingsResponse) SetMaxRestrictionLengthSeconds(v int32) {
	o.MaxRestrictionLengthSeconds = &v
}

// GetDisplayNameType returns the DisplayNameType field value if set, zero value otherwise.
func (o *TeacherSettingsResponse) GetDisplayNameType() string {
	if o == nil || o.DisplayNameType == nil {
		var ret string
		return ret
	}
	return *o.DisplayNameType
}

// GetDisplayNameTypeOk returns a tuple with the DisplayNameType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeacherSettingsResponse) GetDisplayNameTypeOk() (*string, bool) {
	if o == nil || o.DisplayNameType == nil {
		return nil, false
	}
	return o.DisplayNameType, true
}

// HasDisplayNameType returns a boolean if a field has been set.
func (o *TeacherSettingsResponse) HasDisplayNameType() bool {
	if o != nil && o.DisplayNameType != nil {
		return true
	}

	return false
}

// SetDisplayNameType gets a reference to the given string and assigns it to the DisplayNameType field.
func (o *TeacherSettingsResponse) SetDisplayNameType(v string) {
	o.DisplayNameType = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *TeacherSettingsResponse) GetFeatures() TeacherFeatures {
	if o == nil || o.Features == nil {
		var ret TeacherFeatures
		return ret
	}
	return *o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeacherSettingsResponse) GetFeaturesOk() (*TeacherFeatures, bool) {
	if o == nil || o.Features == nil {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *TeacherSettingsResponse) HasFeatures() bool {
	if o != nil && o.Features != nil {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given TeacherFeatures and assigns it to the Features field.
func (o *TeacherSettingsResponse) SetFeatures(v TeacherFeatures) {
	o.Features = &v
}

// GetSafelistedApps returns the SafelistedApps field value if set, zero value otherwise.
func (o *TeacherSettingsResponse) GetSafelistedApps() []SafelistedAppsInner {
	if o == nil || o.SafelistedApps == nil {
		var ret []SafelistedAppsInner
		return ret
	}
	return o.SafelistedApps
}

// GetSafelistedAppsOk returns a tuple with the SafelistedApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeacherSettingsResponse) GetSafelistedAppsOk() ([]SafelistedAppsInner, bool) {
	if o == nil || o.SafelistedApps == nil {
		return nil, false
	}
	return o.SafelistedApps, true
}

// HasSafelistedApps returns a boolean if a field has been set.
func (o *TeacherSettingsResponse) HasSafelistedApps() bool {
	if o != nil && o.SafelistedApps != nil {
		return true
	}

	return false
}

// SetSafelistedApps gets a reference to the given []SafelistedAppsInner and assigns it to the SafelistedApps field.
func (o *TeacherSettingsResponse) SetSafelistedApps(v []SafelistedAppsInner) {
	o.SafelistedApps = v
}

func (o TeacherSettingsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsEnabled != nil {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	if o.TimezoneId != nil {
		toSerialize["timezoneId"] = o.TimezoneId
	}
	if o.AutoClear != nil {
		toSerialize["autoClear"] = o.AutoClear
	}
	if o.MaxRestrictionLengthSeconds != nil {
		toSerialize["maxRestrictionLengthSeconds"] = o.MaxRestrictionLengthSeconds
	}
	if o.DisplayNameType != nil {
		toSerialize["displayNameType"] = o.DisplayNameType
	}
	if o.Features != nil {
		toSerialize["features"] = o.Features
	}
	if o.SafelistedApps != nil {
		toSerialize["safelistedApps"] = o.SafelistedApps
	}
	return json.Marshal(toSerialize)
}

type NullableTeacherSettingsResponse struct {
	value *TeacherSettingsResponse
	isSet bool
}

func (v NullableTeacherSettingsResponse) Get() *TeacherSettingsResponse {
	return v.value
}

func (v *NullableTeacherSettingsResponse) Set(val *TeacherSettingsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTeacherSettingsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTeacherSettingsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeacherSettingsResponse(val *TeacherSettingsResponse) *NullableTeacherSettingsResponse {
	return &NullableTeacherSettingsResponse{value: val, isSet: true}
}

func (v NullableTeacherSettingsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeacherSettingsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


