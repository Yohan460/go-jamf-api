/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the DeploymentTaskSearchResults type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentTaskSearchResults{}

// DeploymentTaskSearchResults struct for DeploymentTaskSearchResults
type DeploymentTaskSearchResults struct {
	TotalCount *int32 `json:"totalCount,omitempty"`
	Results []DeploymentTask `json:"results,omitempty"`
}

// NewDeploymentTaskSearchResults instantiates a new DeploymentTaskSearchResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentTaskSearchResults() *DeploymentTaskSearchResults {
	this := DeploymentTaskSearchResults{}
	return &this
}

// NewDeploymentTaskSearchResultsWithDefaults instantiates a new DeploymentTaskSearchResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentTaskSearchResultsWithDefaults() *DeploymentTaskSearchResults {
	this := DeploymentTaskSearchResults{}
	return &this
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *DeploymentTaskSearchResults) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentTaskSearchResults) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *DeploymentTaskSearchResults) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *DeploymentTaskSearchResults) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *DeploymentTaskSearchResults) GetResults() []DeploymentTask {
	if o == nil || IsNil(o.Results) {
		var ret []DeploymentTask
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentTaskSearchResults) GetResultsOk() ([]DeploymentTask, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *DeploymentTaskSearchResults) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []DeploymentTask and assigns it to the Results field.
func (o *DeploymentTaskSearchResults) SetResults(v []DeploymentTask) {
	o.Results = v
}

func (o DeploymentTaskSearchResults) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentTaskSearchResults) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	return toSerialize, nil
}

type NullableDeploymentTaskSearchResults struct {
	value *DeploymentTaskSearchResults
	isSet bool
}

func (v NullableDeploymentTaskSearchResults) Get() *DeploymentTaskSearchResults {
	return v.value
}

func (v *NullableDeploymentTaskSearchResults) Set(val *DeploymentTaskSearchResults) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentTaskSearchResults) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentTaskSearchResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentTaskSearchResults(val *DeploymentTaskSearchResults) *NullableDeploymentTaskSearchResults {
	return &NullableDeploymentTaskSearchResults{value: val, isSet: true}
}

func (v NullableDeploymentTaskSearchResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentTaskSearchResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


