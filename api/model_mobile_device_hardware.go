/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the MobileDeviceHardware type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MobileDeviceHardware{}

// MobileDeviceHardware struct for MobileDeviceHardware
type MobileDeviceHardware struct {
	CapacityMb *int64 `json:"capacityMb,omitempty"`
	AvailableSpaceMb *int64 `json:"availableSpaceMb,omitempty"`
	UsedSpacePercentage *int64 `json:"usedSpacePercentage,omitempty"`
	BatteryLevel *int64 `json:"batteryLevel,omitempty"`
	SerialNumber *string `json:"serialNumber,omitempty"`
	WifiMacAddress *string `json:"wifiMacAddress,omitempty"`
	BluetoothMacAddress *string `json:"bluetoothMacAddress,omitempty"`
	ModemFirmwareVersion *string `json:"modemFirmwareVersion,omitempty"`
	Model *string `json:"model,omitempty"`
	ModelIdentifier *string `json:"modelIdentifier,omitempty"`
	ModelNumber *string `json:"modelNumber,omitempty"`
	BluetoothLowEnergyCapable *bool `json:"bluetoothLowEnergyCapable,omitempty"`
	DeviceId *string `json:"deviceId,omitempty"`
	ExtensionAttributes []MobileDeviceExtensionAttribute `json:"extensionAttributes,omitempty"`
}

// NewMobileDeviceHardware instantiates a new MobileDeviceHardware object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileDeviceHardware() *MobileDeviceHardware {
	this := MobileDeviceHardware{}
	return &this
}

// NewMobileDeviceHardwareWithDefaults instantiates a new MobileDeviceHardware object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileDeviceHardwareWithDefaults() *MobileDeviceHardware {
	this := MobileDeviceHardware{}
	return &this
}

// GetCapacityMb returns the CapacityMb field value if set, zero value otherwise.
func (o *MobileDeviceHardware) GetCapacityMb() int64 {
	if o == nil || IsNil(o.CapacityMb) {
		var ret int64
		return ret
	}
	return *o.CapacityMb
}

// GetCapacityMbOk returns a tuple with the CapacityMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceHardware) GetCapacityMbOk() (*int64, bool) {
	if o == nil || IsNil(o.CapacityMb) {
		return nil, false
	}
	return o.CapacityMb, true
}

// HasCapacityMb returns a boolean if a field has been set.
func (o *MobileDeviceHardware) HasCapacityMb() bool {
	if o != nil && !IsNil(o.CapacityMb) {
		return true
	}

	return false
}

// SetCapacityMb gets a reference to the given int64 and assigns it to the CapacityMb field.
func (o *MobileDeviceHardware) SetCapacityMb(v int64) {
	o.CapacityMb = &v
}

// GetAvailableSpaceMb returns the AvailableSpaceMb field value if set, zero value otherwise.
func (o *MobileDeviceHardware) GetAvailableSpaceMb() int64 {
	if o == nil || IsNil(o.AvailableSpaceMb) {
		var ret int64
		return ret
	}
	return *o.AvailableSpaceMb
}

// GetAvailableSpaceMbOk returns a tuple with the AvailableSpaceMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceHardware) GetAvailableSpaceMbOk() (*int64, bool) {
	if o == nil || IsNil(o.AvailableSpaceMb) {
		return nil, false
	}
	return o.AvailableSpaceMb, true
}

// HasAvailableSpaceMb returns a boolean if a field has been set.
func (o *MobileDeviceHardware) HasAvailableSpaceMb() bool {
	if o != nil && !IsNil(o.AvailableSpaceMb) {
		return true
	}

	return false
}

// SetAvailableSpaceMb gets a reference to the given int64 and assigns it to the AvailableSpaceMb field.
func (o *MobileDeviceHardware) SetAvailableSpaceMb(v int64) {
	o.AvailableSpaceMb = &v
}

// GetUsedSpacePercentage returns the UsedSpacePercentage field value if set, zero value otherwise.
func (o *MobileDeviceHardware) GetUsedSpacePercentage() int64 {
	if o == nil || IsNil(o.UsedSpacePercentage) {
		var ret int64
		return ret
	}
	return *o.UsedSpacePercentage
}

// GetUsedSpacePercentageOk returns a tuple with the UsedSpacePercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceHardware) GetUsedSpacePercentageOk() (*int64, bool) {
	if o == nil || IsNil(o.UsedSpacePercentage) {
		return nil, false
	}
	return o.UsedSpacePercentage, true
}

// HasUsedSpacePercentage returns a boolean if a field has been set.
func (o *MobileDeviceHardware) HasUsedSpacePercentage() bool {
	if o != nil && !IsNil(o.UsedSpacePercentage) {
		return true
	}

	return false
}

// SetUsedSpacePercentage gets a reference to the given int64 and assigns it to the UsedSpacePercentage field.
func (o *MobileDeviceHardware) SetUsedSpacePercentage(v int64) {
	o.UsedSpacePercentage = &v
}

// GetBatteryLevel returns the BatteryLevel field value if set, zero value otherwise.
func (o *MobileDeviceHardware) GetBatteryLevel() int64 {
	if o == nil || IsNil(o.BatteryLevel) {
		var ret int64
		return ret
	}
	return *o.BatteryLevel
}

// GetBatteryLevelOk returns a tuple with the BatteryLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceHardware) GetBatteryLevelOk() (*int64, bool) {
	if o == nil || IsNil(o.BatteryLevel) {
		return nil, false
	}
	return o.BatteryLevel, true
}

// HasBatteryLevel returns a boolean if a field has been set.
func (o *MobileDeviceHardware) HasBatteryLevel() bool {
	if o != nil && !IsNil(o.BatteryLevel) {
		return true
	}

	return false
}

// SetBatteryLevel gets a reference to the given int64 and assigns it to the BatteryLevel field.
func (o *MobileDeviceHardware) SetBatteryLevel(v int64) {
	o.BatteryLevel = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *MobileDeviceHardware) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceHardware) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *MobileDeviceHardware) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *MobileDeviceHardware) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetWifiMacAddress returns the WifiMacAddress field value if set, zero value otherwise.
func (o *MobileDeviceHardware) GetWifiMacAddress() string {
	if o == nil || IsNil(o.WifiMacAddress) {
		var ret string
		return ret
	}
	return *o.WifiMacAddress
}

// GetWifiMacAddressOk returns a tuple with the WifiMacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceHardware) GetWifiMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.WifiMacAddress) {
		return nil, false
	}
	return o.WifiMacAddress, true
}

// HasWifiMacAddress returns a boolean if a field has been set.
func (o *MobileDeviceHardware) HasWifiMacAddress() bool {
	if o != nil && !IsNil(o.WifiMacAddress) {
		return true
	}

	return false
}

// SetWifiMacAddress gets a reference to the given string and assigns it to the WifiMacAddress field.
func (o *MobileDeviceHardware) SetWifiMacAddress(v string) {
	o.WifiMacAddress = &v
}

// GetBluetoothMacAddress returns the BluetoothMacAddress field value if set, zero value otherwise.
func (o *MobileDeviceHardware) GetBluetoothMacAddress() string {
	if o == nil || IsNil(o.BluetoothMacAddress) {
		var ret string
		return ret
	}
	return *o.BluetoothMacAddress
}

// GetBluetoothMacAddressOk returns a tuple with the BluetoothMacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceHardware) GetBluetoothMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.BluetoothMacAddress) {
		return nil, false
	}
	return o.BluetoothMacAddress, true
}

// HasBluetoothMacAddress returns a boolean if a field has been set.
func (o *MobileDeviceHardware) HasBluetoothMacAddress() bool {
	if o != nil && !IsNil(o.BluetoothMacAddress) {
		return true
	}

	return false
}

// SetBluetoothMacAddress gets a reference to the given string and assigns it to the BluetoothMacAddress field.
func (o *MobileDeviceHardware) SetBluetoothMacAddress(v string) {
	o.BluetoothMacAddress = &v
}

// GetModemFirmwareVersion returns the ModemFirmwareVersion field value if set, zero value otherwise.
func (o *MobileDeviceHardware) GetModemFirmwareVersion() string {
	if o == nil || IsNil(o.ModemFirmwareVersion) {
		var ret string
		return ret
	}
	return *o.ModemFirmwareVersion
}

// GetModemFirmwareVersionOk returns a tuple with the ModemFirmwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceHardware) GetModemFirmwareVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ModemFirmwareVersion) {
		return nil, false
	}
	return o.ModemFirmwareVersion, true
}

// HasModemFirmwareVersion returns a boolean if a field has been set.
func (o *MobileDeviceHardware) HasModemFirmwareVersion() bool {
	if o != nil && !IsNil(o.ModemFirmwareVersion) {
		return true
	}

	return false
}

// SetModemFirmwareVersion gets a reference to the given string and assigns it to the ModemFirmwareVersion field.
func (o *MobileDeviceHardware) SetModemFirmwareVersion(v string) {
	o.ModemFirmwareVersion = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *MobileDeviceHardware) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceHardware) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *MobileDeviceHardware) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *MobileDeviceHardware) SetModel(v string) {
	o.Model = &v
}

// GetModelIdentifier returns the ModelIdentifier field value if set, zero value otherwise.
func (o *MobileDeviceHardware) GetModelIdentifier() string {
	if o == nil || IsNil(o.ModelIdentifier) {
		var ret string
		return ret
	}
	return *o.ModelIdentifier
}

// GetModelIdentifierOk returns a tuple with the ModelIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceHardware) GetModelIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.ModelIdentifier) {
		return nil, false
	}
	return o.ModelIdentifier, true
}

// HasModelIdentifier returns a boolean if a field has been set.
func (o *MobileDeviceHardware) HasModelIdentifier() bool {
	if o != nil && !IsNil(o.ModelIdentifier) {
		return true
	}

	return false
}

// SetModelIdentifier gets a reference to the given string and assigns it to the ModelIdentifier field.
func (o *MobileDeviceHardware) SetModelIdentifier(v string) {
	o.ModelIdentifier = &v
}

// GetModelNumber returns the ModelNumber field value if set, zero value otherwise.
func (o *MobileDeviceHardware) GetModelNumber() string {
	if o == nil || IsNil(o.ModelNumber) {
		var ret string
		return ret
	}
	return *o.ModelNumber
}

// GetModelNumberOk returns a tuple with the ModelNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceHardware) GetModelNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ModelNumber) {
		return nil, false
	}
	return o.ModelNumber, true
}

// HasModelNumber returns a boolean if a field has been set.
func (o *MobileDeviceHardware) HasModelNumber() bool {
	if o != nil && !IsNil(o.ModelNumber) {
		return true
	}

	return false
}

// SetModelNumber gets a reference to the given string and assigns it to the ModelNumber field.
func (o *MobileDeviceHardware) SetModelNumber(v string) {
	o.ModelNumber = &v
}

// GetBluetoothLowEnergyCapable returns the BluetoothLowEnergyCapable field value if set, zero value otherwise.
func (o *MobileDeviceHardware) GetBluetoothLowEnergyCapable() bool {
	if o == nil || IsNil(o.BluetoothLowEnergyCapable) {
		var ret bool
		return ret
	}
	return *o.BluetoothLowEnergyCapable
}

// GetBluetoothLowEnergyCapableOk returns a tuple with the BluetoothLowEnergyCapable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceHardware) GetBluetoothLowEnergyCapableOk() (*bool, bool) {
	if o == nil || IsNil(o.BluetoothLowEnergyCapable) {
		return nil, false
	}
	return o.BluetoothLowEnergyCapable, true
}

// HasBluetoothLowEnergyCapable returns a boolean if a field has been set.
func (o *MobileDeviceHardware) HasBluetoothLowEnergyCapable() bool {
	if o != nil && !IsNil(o.BluetoothLowEnergyCapable) {
		return true
	}

	return false
}

// SetBluetoothLowEnergyCapable gets a reference to the given bool and assigns it to the BluetoothLowEnergyCapable field.
func (o *MobileDeviceHardware) SetBluetoothLowEnergyCapable(v bool) {
	o.BluetoothLowEnergyCapable = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *MobileDeviceHardware) GetDeviceId() string {
	if o == nil || IsNil(o.DeviceId) {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceHardware) GetDeviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *MobileDeviceHardware) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *MobileDeviceHardware) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *MobileDeviceHardware) GetExtensionAttributes() []MobileDeviceExtensionAttribute {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret []MobileDeviceExtensionAttribute
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceHardware) GetExtensionAttributesOk() ([]MobileDeviceExtensionAttribute, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *MobileDeviceHardware) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given []MobileDeviceExtensionAttribute and assigns it to the ExtensionAttributes field.
func (o *MobileDeviceHardware) SetExtensionAttributes(v []MobileDeviceExtensionAttribute) {
	o.ExtensionAttributes = v
}

func (o MobileDeviceHardware) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MobileDeviceHardware) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CapacityMb) {
		toSerialize["capacityMb"] = o.CapacityMb
	}
	if !IsNil(o.AvailableSpaceMb) {
		toSerialize["availableSpaceMb"] = o.AvailableSpaceMb
	}
	if !IsNil(o.UsedSpacePercentage) {
		toSerialize["usedSpacePercentage"] = o.UsedSpacePercentage
	}
	if !IsNil(o.BatteryLevel) {
		toSerialize["batteryLevel"] = o.BatteryLevel
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["serialNumber"] = o.SerialNumber
	}
	if !IsNil(o.WifiMacAddress) {
		toSerialize["wifiMacAddress"] = o.WifiMacAddress
	}
	if !IsNil(o.BluetoothMacAddress) {
		toSerialize["bluetoothMacAddress"] = o.BluetoothMacAddress
	}
	if !IsNil(o.ModemFirmwareVersion) {
		toSerialize["modemFirmwareVersion"] = o.ModemFirmwareVersion
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.ModelIdentifier) {
		toSerialize["modelIdentifier"] = o.ModelIdentifier
	}
	if !IsNil(o.ModelNumber) {
		toSerialize["modelNumber"] = o.ModelNumber
	}
	if !IsNil(o.BluetoothLowEnergyCapable) {
		toSerialize["bluetoothLowEnergyCapable"] = o.BluetoothLowEnergyCapable
	}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extensionAttributes"] = o.ExtensionAttributes
	}
	return toSerialize, nil
}

type NullableMobileDeviceHardware struct {
	value *MobileDeviceHardware
	isSet bool
}

func (v NullableMobileDeviceHardware) Get() *MobileDeviceHardware {
	return v.value
}

func (v *NullableMobileDeviceHardware) Set(val *MobileDeviceHardware) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileDeviceHardware) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileDeviceHardware) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileDeviceHardware(val *MobileDeviceHardware) *NullableMobileDeviceHardware {
	return &NullableMobileDeviceHardware{value: val, isSet: true}
}

func (v NullableMobileDeviceHardware) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileDeviceHardware) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


