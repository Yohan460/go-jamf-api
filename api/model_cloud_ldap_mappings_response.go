/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the CloudLdapMappingsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudLdapMappingsResponse{}

// CloudLdapMappingsResponse Mappings configuration response for Ldap Cloud Identity Provider configuration
type CloudLdapMappingsResponse struct {
	UserMappings *UserMappings `json:"userMappings,omitempty"`
	GroupMappings *GroupMappings `json:"groupMappings,omitempty"`
	MembershipMappings *MembershipMappings `json:"membershipMappings,omitempty"`
}

// NewCloudLdapMappingsResponse instantiates a new CloudLdapMappingsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudLdapMappingsResponse() *CloudLdapMappingsResponse {
	this := CloudLdapMappingsResponse{}
	return &this
}

// NewCloudLdapMappingsResponseWithDefaults instantiates a new CloudLdapMappingsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudLdapMappingsResponseWithDefaults() *CloudLdapMappingsResponse {
	this := CloudLdapMappingsResponse{}
	return &this
}

// GetUserMappings returns the UserMappings field value if set, zero value otherwise.
func (o *CloudLdapMappingsResponse) GetUserMappings() UserMappings {
	if o == nil || IsNil(o.UserMappings) {
		var ret UserMappings
		return ret
	}
	return *o.UserMappings
}

// GetUserMappingsOk returns a tuple with the UserMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudLdapMappingsResponse) GetUserMappingsOk() (*UserMappings, bool) {
	if o == nil || IsNil(o.UserMappings) {
		return nil, false
	}
	return o.UserMappings, true
}

// HasUserMappings returns a boolean if a field has been set.
func (o *CloudLdapMappingsResponse) HasUserMappings() bool {
	if o != nil && !IsNil(o.UserMappings) {
		return true
	}

	return false
}

// SetUserMappings gets a reference to the given UserMappings and assigns it to the UserMappings field.
func (o *CloudLdapMappingsResponse) SetUserMappings(v UserMappings) {
	o.UserMappings = &v
}

// GetGroupMappings returns the GroupMappings field value if set, zero value otherwise.
func (o *CloudLdapMappingsResponse) GetGroupMappings() GroupMappings {
	if o == nil || IsNil(o.GroupMappings) {
		var ret GroupMappings
		return ret
	}
	return *o.GroupMappings
}

// GetGroupMappingsOk returns a tuple with the GroupMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudLdapMappingsResponse) GetGroupMappingsOk() (*GroupMappings, bool) {
	if o == nil || IsNil(o.GroupMappings) {
		return nil, false
	}
	return o.GroupMappings, true
}

// HasGroupMappings returns a boolean if a field has been set.
func (o *CloudLdapMappingsResponse) HasGroupMappings() bool {
	if o != nil && !IsNil(o.GroupMappings) {
		return true
	}

	return false
}

// SetGroupMappings gets a reference to the given GroupMappings and assigns it to the GroupMappings field.
func (o *CloudLdapMappingsResponse) SetGroupMappings(v GroupMappings) {
	o.GroupMappings = &v
}

// GetMembershipMappings returns the MembershipMappings field value if set, zero value otherwise.
func (o *CloudLdapMappingsResponse) GetMembershipMappings() MembershipMappings {
	if o == nil || IsNil(o.MembershipMappings) {
		var ret MembershipMappings
		return ret
	}
	return *o.MembershipMappings
}

// GetMembershipMappingsOk returns a tuple with the MembershipMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudLdapMappingsResponse) GetMembershipMappingsOk() (*MembershipMappings, bool) {
	if o == nil || IsNil(o.MembershipMappings) {
		return nil, false
	}
	return o.MembershipMappings, true
}

// HasMembershipMappings returns a boolean if a field has been set.
func (o *CloudLdapMappingsResponse) HasMembershipMappings() bool {
	if o != nil && !IsNil(o.MembershipMappings) {
		return true
	}

	return false
}

// SetMembershipMappings gets a reference to the given MembershipMappings and assigns it to the MembershipMappings field.
func (o *CloudLdapMappingsResponse) SetMembershipMappings(v MembershipMappings) {
	o.MembershipMappings = &v
}

func (o CloudLdapMappingsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudLdapMappingsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserMappings) {
		toSerialize["userMappings"] = o.UserMappings
	}
	if !IsNil(o.GroupMappings) {
		toSerialize["groupMappings"] = o.GroupMappings
	}
	if !IsNil(o.MembershipMappings) {
		toSerialize["membershipMappings"] = o.MembershipMappings
	}
	return toSerialize, nil
}

type NullableCloudLdapMappingsResponse struct {
	value *CloudLdapMappingsResponse
	isSet bool
}

func (v NullableCloudLdapMappingsResponse) Get() *CloudLdapMappingsResponse {
	return v.value
}

func (v *NullableCloudLdapMappingsResponse) Set(val *CloudLdapMappingsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudLdapMappingsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudLdapMappingsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudLdapMappingsResponse(val *CloudLdapMappingsResponse) *NullableCloudLdapMappingsResponse {
	return &NullableCloudLdapMappingsResponse{value: val, isSet: true}
}

func (v NullableCloudLdapMappingsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudLdapMappingsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


