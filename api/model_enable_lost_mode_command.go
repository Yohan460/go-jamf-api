/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the EnableLostModeCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnableLostModeCommand{}

// EnableLostModeCommand struct for EnableLostModeCommand
type EnableLostModeCommand struct {
	LostModeMessage *string `json:"lostModeMessage,omitempty"`
	LostModePhone *string `json:"lostModePhone,omitempty"`
	LostModeFootnote *string `json:"lostModeFootnote,omitempty"`
}

// NewEnableLostModeCommand instantiates a new EnableLostModeCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnableLostModeCommand() *EnableLostModeCommand {
	this := EnableLostModeCommand{}
	return &this
}

// NewEnableLostModeCommandWithDefaults instantiates a new EnableLostModeCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnableLostModeCommandWithDefaults() *EnableLostModeCommand {
	this := EnableLostModeCommand{}
	return &this
}

// GetLostModeMessage returns the LostModeMessage field value if set, zero value otherwise.
func (o *EnableLostModeCommand) GetLostModeMessage() string {
	if o == nil || IsNil(o.LostModeMessage) {
		var ret string
		return ret
	}
	return *o.LostModeMessage
}

// GetLostModeMessageOk returns a tuple with the LostModeMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnableLostModeCommand) GetLostModeMessageOk() (*string, bool) {
	if o == nil || IsNil(o.LostModeMessage) {
		return nil, false
	}
	return o.LostModeMessage, true
}

// HasLostModeMessage returns a boolean if a field has been set.
func (o *EnableLostModeCommand) HasLostModeMessage() bool {
	if o != nil && !IsNil(o.LostModeMessage) {
		return true
	}

	return false
}

// SetLostModeMessage gets a reference to the given string and assigns it to the LostModeMessage field.
func (o *EnableLostModeCommand) SetLostModeMessage(v string) {
	o.LostModeMessage = &v
}

// GetLostModePhone returns the LostModePhone field value if set, zero value otherwise.
func (o *EnableLostModeCommand) GetLostModePhone() string {
	if o == nil || IsNil(o.LostModePhone) {
		var ret string
		return ret
	}
	return *o.LostModePhone
}

// GetLostModePhoneOk returns a tuple with the LostModePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnableLostModeCommand) GetLostModePhoneOk() (*string, bool) {
	if o == nil || IsNil(o.LostModePhone) {
		return nil, false
	}
	return o.LostModePhone, true
}

// HasLostModePhone returns a boolean if a field has been set.
func (o *EnableLostModeCommand) HasLostModePhone() bool {
	if o != nil && !IsNil(o.LostModePhone) {
		return true
	}

	return false
}

// SetLostModePhone gets a reference to the given string and assigns it to the LostModePhone field.
func (o *EnableLostModeCommand) SetLostModePhone(v string) {
	o.LostModePhone = &v
}

// GetLostModeFootnote returns the LostModeFootnote field value if set, zero value otherwise.
func (o *EnableLostModeCommand) GetLostModeFootnote() string {
	if o == nil || IsNil(o.LostModeFootnote) {
		var ret string
		return ret
	}
	return *o.LostModeFootnote
}

// GetLostModeFootnoteOk returns a tuple with the LostModeFootnote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnableLostModeCommand) GetLostModeFootnoteOk() (*string, bool) {
	if o == nil || IsNil(o.LostModeFootnote) {
		return nil, false
	}
	return o.LostModeFootnote, true
}

// HasLostModeFootnote returns a boolean if a field has been set.
func (o *EnableLostModeCommand) HasLostModeFootnote() bool {
	if o != nil && !IsNil(o.LostModeFootnote) {
		return true
	}

	return false
}

// SetLostModeFootnote gets a reference to the given string and assigns it to the LostModeFootnote field.
func (o *EnableLostModeCommand) SetLostModeFootnote(v string) {
	o.LostModeFootnote = &v
}

func (o EnableLostModeCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnableLostModeCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LostModeMessage) {
		toSerialize["lostModeMessage"] = o.LostModeMessage
	}
	if !IsNil(o.LostModePhone) {
		toSerialize["lostModePhone"] = o.LostModePhone
	}
	if !IsNil(o.LostModeFootnote) {
		toSerialize["lostModeFootnote"] = o.LostModeFootnote
	}
	return toSerialize, nil
}

type NullableEnableLostModeCommand struct {
	value *EnableLostModeCommand
	isSet bool
}

func (v NullableEnableLostModeCommand) Get() *EnableLostModeCommand {
	return v.value
}

func (v *NullableEnableLostModeCommand) Set(val *EnableLostModeCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableEnableLostModeCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableEnableLostModeCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnableLostModeCommand(val *EnableLostModeCommand) *NullableEnableLostModeCommand {
	return &NullableEnableLostModeCommand{value: val, isSet: true}
}

func (v NullableEnableLostModeCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnableLostModeCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


