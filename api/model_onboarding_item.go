/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OnboardingItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OnboardingItem{}

// OnboardingItem struct for OnboardingItem
type OnboardingItem struct {
	Id NullableString `json:"id,omitempty"`
	// The id of the Jamf Pro object that should be added to the onboarding workflow for end users. Use this in conjunction with the selfServiceEntityType. For example, if the policy with id 132 should be added to onboarding, then entityId should be 132 and selfServiceEntityType should be  OS_X_POLICY. 
	EntityId string `json:"entityId"`
	EntityName *string `json:"entityName,omitempty"`
	ScopeDescription *string `json:"scopeDescription,omitempty"`
	SiteDescription *string `json:"siteDescription,omitempty"`
	SelfServiceEntityType string `json:"selfServiceEntityType"`
	Priority int64 `json:"priority"`
}

type _OnboardingItem OnboardingItem

// NewOnboardingItem instantiates a new OnboardingItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnboardingItem(entityId string, selfServiceEntityType string, priority int64) *OnboardingItem {
	this := OnboardingItem{}
	this.EntityId = entityId
	this.SelfServiceEntityType = selfServiceEntityType
	this.Priority = priority
	return &this
}

// NewOnboardingItemWithDefaults instantiates a new OnboardingItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnboardingItemWithDefaults() *OnboardingItem {
	this := OnboardingItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OnboardingItem) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OnboardingItem) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *OnboardingItem) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *OnboardingItem) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *OnboardingItem) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *OnboardingItem) UnsetId() {
	o.Id.Unset()
}

// GetEntityId returns the EntityId field value
func (o *OnboardingItem) GetEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value
// and a boolean to check if the value has been set.
func (o *OnboardingItem) GetEntityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityId, true
}

// SetEntityId sets field value
func (o *OnboardingItem) SetEntityId(v string) {
	o.EntityId = v
}

// GetEntityName returns the EntityName field value if set, zero value otherwise.
func (o *OnboardingItem) GetEntityName() string {
	if o == nil || IsNil(o.EntityName) {
		var ret string
		return ret
	}
	return *o.EntityName
}

// GetEntityNameOk returns a tuple with the EntityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnboardingItem) GetEntityNameOk() (*string, bool) {
	if o == nil || IsNil(o.EntityName) {
		return nil, false
	}
	return o.EntityName, true
}

// HasEntityName returns a boolean if a field has been set.
func (o *OnboardingItem) HasEntityName() bool {
	if o != nil && !IsNil(o.EntityName) {
		return true
	}

	return false
}

// SetEntityName gets a reference to the given string and assigns it to the EntityName field.
func (o *OnboardingItem) SetEntityName(v string) {
	o.EntityName = &v
}

// GetScopeDescription returns the ScopeDescription field value if set, zero value otherwise.
func (o *OnboardingItem) GetScopeDescription() string {
	if o == nil || IsNil(o.ScopeDescription) {
		var ret string
		return ret
	}
	return *o.ScopeDescription
}

// GetScopeDescriptionOk returns a tuple with the ScopeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnboardingItem) GetScopeDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ScopeDescription) {
		return nil, false
	}
	return o.ScopeDescription, true
}

// HasScopeDescription returns a boolean if a field has been set.
func (o *OnboardingItem) HasScopeDescription() bool {
	if o != nil && !IsNil(o.ScopeDescription) {
		return true
	}

	return false
}

// SetScopeDescription gets a reference to the given string and assigns it to the ScopeDescription field.
func (o *OnboardingItem) SetScopeDescription(v string) {
	o.ScopeDescription = &v
}

// GetSiteDescription returns the SiteDescription field value if set, zero value otherwise.
func (o *OnboardingItem) GetSiteDescription() string {
	if o == nil || IsNil(o.SiteDescription) {
		var ret string
		return ret
	}
	return *o.SiteDescription
}

// GetSiteDescriptionOk returns a tuple with the SiteDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnboardingItem) GetSiteDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.SiteDescription) {
		return nil, false
	}
	return o.SiteDescription, true
}

// HasSiteDescription returns a boolean if a field has been set.
func (o *OnboardingItem) HasSiteDescription() bool {
	if o != nil && !IsNil(o.SiteDescription) {
		return true
	}

	return false
}

// SetSiteDescription gets a reference to the given string and assigns it to the SiteDescription field.
func (o *OnboardingItem) SetSiteDescription(v string) {
	o.SiteDescription = &v
}

// GetSelfServiceEntityType returns the SelfServiceEntityType field value
func (o *OnboardingItem) GetSelfServiceEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SelfServiceEntityType
}

// GetSelfServiceEntityTypeOk returns a tuple with the SelfServiceEntityType field value
// and a boolean to check if the value has been set.
func (o *OnboardingItem) GetSelfServiceEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SelfServiceEntityType, true
}

// SetSelfServiceEntityType sets field value
func (o *OnboardingItem) SetSelfServiceEntityType(v string) {
	o.SelfServiceEntityType = v
}

// GetPriority returns the Priority field value
func (o *OnboardingItem) GetPriority() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *OnboardingItem) GetPriorityOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *OnboardingItem) SetPriority(v int64) {
	o.Priority = v
}

func (o OnboardingItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OnboardingItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	toSerialize["entityId"] = o.EntityId
	if !IsNil(o.EntityName) {
		toSerialize["entityName"] = o.EntityName
	}
	if !IsNil(o.ScopeDescription) {
		toSerialize["scopeDescription"] = o.ScopeDescription
	}
	if !IsNil(o.SiteDescription) {
		toSerialize["siteDescription"] = o.SiteDescription
	}
	toSerialize["selfServiceEntityType"] = o.SelfServiceEntityType
	toSerialize["priority"] = o.Priority
	return toSerialize, nil
}

func (o *OnboardingItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"entityId",
		"selfServiceEntityType",
		"priority",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOnboardingItem := _OnboardingItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOnboardingItem)

	if err != nil {
		return err
	}

	*o = OnboardingItem(varOnboardingItem)

	return err
}

type NullableOnboardingItem struct {
	value *OnboardingItem
	isSet bool
}

func (v NullableOnboardingItem) Get() *OnboardingItem {
	return v.value
}

func (v *NullableOnboardingItem) Set(val *OnboardingItem) {
	v.value = val
	v.isSet = true
}

func (v NullableOnboardingItem) IsSet() bool {
	return v.isSet
}

func (v *NullableOnboardingItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnboardingItem(val *OnboardingItem) *NullableOnboardingItem {
	return &NullableOnboardingItem{value: val, isSet: true}
}

func (v NullableOnboardingItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnboardingItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


