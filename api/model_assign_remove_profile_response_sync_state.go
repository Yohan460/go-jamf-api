/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the AssignRemoveProfileResponseSyncState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssignRemoveProfileResponseSyncState{}

// AssignRemoveProfileResponseSyncState struct for AssignRemoveProfileResponseSyncState
type AssignRemoveProfileResponseSyncState struct {
	Id *int32 `json:"id,omitempty"`
	SerialNumber *string `json:"serialNumber,omitempty"`
	ProfileUUID *string `json:"profileUUID,omitempty"`
	SyncStatus *string `json:"syncStatus,omitempty"`
	FailureCount *int32 `json:"failureCount,omitempty"`
	Timestamp *int32 `json:"timestamp,omitempty"`
}

// NewAssignRemoveProfileResponseSyncState instantiates a new AssignRemoveProfileResponseSyncState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssignRemoveProfileResponseSyncState() *AssignRemoveProfileResponseSyncState {
	this := AssignRemoveProfileResponseSyncState{}
	return &this
}

// NewAssignRemoveProfileResponseSyncStateWithDefaults instantiates a new AssignRemoveProfileResponseSyncState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssignRemoveProfileResponseSyncStateWithDefaults() *AssignRemoveProfileResponseSyncState {
	this := AssignRemoveProfileResponseSyncState{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AssignRemoveProfileResponseSyncState) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignRemoveProfileResponseSyncState) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AssignRemoveProfileResponseSyncState) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AssignRemoveProfileResponseSyncState) SetId(v int32) {
	o.Id = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *AssignRemoveProfileResponseSyncState) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignRemoveProfileResponseSyncState) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *AssignRemoveProfileResponseSyncState) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *AssignRemoveProfileResponseSyncState) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetProfileUUID returns the ProfileUUID field value if set, zero value otherwise.
func (o *AssignRemoveProfileResponseSyncState) GetProfileUUID() string {
	if o == nil || IsNil(o.ProfileUUID) {
		var ret string
		return ret
	}
	return *o.ProfileUUID
}

// GetProfileUUIDOk returns a tuple with the ProfileUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignRemoveProfileResponseSyncState) GetProfileUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.ProfileUUID) {
		return nil, false
	}
	return o.ProfileUUID, true
}

// HasProfileUUID returns a boolean if a field has been set.
func (o *AssignRemoveProfileResponseSyncState) HasProfileUUID() bool {
	if o != nil && !IsNil(o.ProfileUUID) {
		return true
	}

	return false
}

// SetProfileUUID gets a reference to the given string and assigns it to the ProfileUUID field.
func (o *AssignRemoveProfileResponseSyncState) SetProfileUUID(v string) {
	o.ProfileUUID = &v
}

// GetSyncStatus returns the SyncStatus field value if set, zero value otherwise.
func (o *AssignRemoveProfileResponseSyncState) GetSyncStatus() string {
	if o == nil || IsNil(o.SyncStatus) {
		var ret string
		return ret
	}
	return *o.SyncStatus
}

// GetSyncStatusOk returns a tuple with the SyncStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignRemoveProfileResponseSyncState) GetSyncStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SyncStatus) {
		return nil, false
	}
	return o.SyncStatus, true
}

// HasSyncStatus returns a boolean if a field has been set.
func (o *AssignRemoveProfileResponseSyncState) HasSyncStatus() bool {
	if o != nil && !IsNil(o.SyncStatus) {
		return true
	}

	return false
}

// SetSyncStatus gets a reference to the given string and assigns it to the SyncStatus field.
func (o *AssignRemoveProfileResponseSyncState) SetSyncStatus(v string) {
	o.SyncStatus = &v
}

// GetFailureCount returns the FailureCount field value if set, zero value otherwise.
func (o *AssignRemoveProfileResponseSyncState) GetFailureCount() int32 {
	if o == nil || IsNil(o.FailureCount) {
		var ret int32
		return ret
	}
	return *o.FailureCount
}

// GetFailureCountOk returns a tuple with the FailureCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignRemoveProfileResponseSyncState) GetFailureCountOk() (*int32, bool) {
	if o == nil || IsNil(o.FailureCount) {
		return nil, false
	}
	return o.FailureCount, true
}

// HasFailureCount returns a boolean if a field has been set.
func (o *AssignRemoveProfileResponseSyncState) HasFailureCount() bool {
	if o != nil && !IsNil(o.FailureCount) {
		return true
	}

	return false
}

// SetFailureCount gets a reference to the given int32 and assigns it to the FailureCount field.
func (o *AssignRemoveProfileResponseSyncState) SetFailureCount(v int32) {
	o.FailureCount = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *AssignRemoveProfileResponseSyncState) GetTimestamp() int32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret int32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignRemoveProfileResponseSyncState) GetTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *AssignRemoveProfileResponseSyncState) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int32 and assigns it to the Timestamp field.
func (o *AssignRemoveProfileResponseSyncState) SetTimestamp(v int32) {
	o.Timestamp = &v
}

func (o AssignRemoveProfileResponseSyncState) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssignRemoveProfileResponseSyncState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["serialNumber"] = o.SerialNumber
	}
	if !IsNil(o.ProfileUUID) {
		toSerialize["profileUUID"] = o.ProfileUUID
	}
	if !IsNil(o.SyncStatus) {
		toSerialize["syncStatus"] = o.SyncStatus
	}
	if !IsNil(o.FailureCount) {
		toSerialize["failureCount"] = o.FailureCount
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableAssignRemoveProfileResponseSyncState struct {
	value *AssignRemoveProfileResponseSyncState
	isSet bool
}

func (v NullableAssignRemoveProfileResponseSyncState) Get() *AssignRemoveProfileResponseSyncState {
	return v.value
}

func (v *NullableAssignRemoveProfileResponseSyncState) Set(val *AssignRemoveProfileResponseSyncState) {
	v.value = val
	v.isSet = true
}

func (v NullableAssignRemoveProfileResponseSyncState) IsSet() bool {
	return v.isSet
}

func (v *NullableAssignRemoveProfileResponseSyncState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssignRemoveProfileResponseSyncState(val *AssignRemoveProfileResponseSyncState) *NullableAssignRemoveProfileResponseSyncState {
	return &NullableAssignRemoveProfileResponseSyncState{value: val, isSet: true}
}

func (v NullableAssignRemoveProfileResponseSyncState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssignRemoveProfileResponseSyncState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


