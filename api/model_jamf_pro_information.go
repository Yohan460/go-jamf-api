/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// JamfProInformation struct for JamfProInformation
type JamfProInformation struct {
	IsVppTokenEnabled *bool `json:"isVppTokenEnabled,omitempty"`
	IsDepAccountEnabled *bool `json:"isDepAccountEnabled,omitempty"`
	IsByodEnabled *bool `json:"isByodEnabled,omitempty"`
	IsUserMigrationEnabled *bool `json:"isUserMigrationEnabled,omitempty"`
	IsCloudDeploymentsEnabled *bool `json:"isCloudDeploymentsEnabled,omitempty"`
	IsPatchEnabled *bool `json:"isPatchEnabled,omitempty"`
	IsSsoSamlEnabled *bool `json:"isSsoSamlEnabled,omitempty"`
	IsSmtpEnabled *bool `json:"isSmtpEnabled,omitempty"`
}

// NewJamfProInformation instantiates a new JamfProInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJamfProInformation() *JamfProInformation {
	this := JamfProInformation{}
	return &this
}

// NewJamfProInformationWithDefaults instantiates a new JamfProInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJamfProInformationWithDefaults() *JamfProInformation {
	this := JamfProInformation{}
	return &this
}

// GetIsVppTokenEnabled returns the IsVppTokenEnabled field value if set, zero value otherwise.
func (o *JamfProInformation) GetIsVppTokenEnabled() bool {
	if o == nil || o.IsVppTokenEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsVppTokenEnabled
}

// GetIsVppTokenEnabledOk returns a tuple with the IsVppTokenEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JamfProInformation) GetIsVppTokenEnabledOk() (*bool, bool) {
	if o == nil || o.IsVppTokenEnabled == nil {
		return nil, false
	}
	return o.IsVppTokenEnabled, true
}

// HasIsVppTokenEnabled returns a boolean if a field has been set.
func (o *JamfProInformation) HasIsVppTokenEnabled() bool {
	if o != nil && o.IsVppTokenEnabled != nil {
		return true
	}

	return false
}

// SetIsVppTokenEnabled gets a reference to the given bool and assigns it to the IsVppTokenEnabled field.
func (o *JamfProInformation) SetIsVppTokenEnabled(v bool) {
	o.IsVppTokenEnabled = &v
}

// GetIsDepAccountEnabled returns the IsDepAccountEnabled field value if set, zero value otherwise.
func (o *JamfProInformation) GetIsDepAccountEnabled() bool {
	if o == nil || o.IsDepAccountEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsDepAccountEnabled
}

// GetIsDepAccountEnabledOk returns a tuple with the IsDepAccountEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JamfProInformation) GetIsDepAccountEnabledOk() (*bool, bool) {
	if o == nil || o.IsDepAccountEnabled == nil {
		return nil, false
	}
	return o.IsDepAccountEnabled, true
}

// HasIsDepAccountEnabled returns a boolean if a field has been set.
func (o *JamfProInformation) HasIsDepAccountEnabled() bool {
	if o != nil && o.IsDepAccountEnabled != nil {
		return true
	}

	return false
}

// SetIsDepAccountEnabled gets a reference to the given bool and assigns it to the IsDepAccountEnabled field.
func (o *JamfProInformation) SetIsDepAccountEnabled(v bool) {
	o.IsDepAccountEnabled = &v
}

// GetIsByodEnabled returns the IsByodEnabled field value if set, zero value otherwise.
func (o *JamfProInformation) GetIsByodEnabled() bool {
	if o == nil || o.IsByodEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsByodEnabled
}

// GetIsByodEnabledOk returns a tuple with the IsByodEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JamfProInformation) GetIsByodEnabledOk() (*bool, bool) {
	if o == nil || o.IsByodEnabled == nil {
		return nil, false
	}
	return o.IsByodEnabled, true
}

// HasIsByodEnabled returns a boolean if a field has been set.
func (o *JamfProInformation) HasIsByodEnabled() bool {
	if o != nil && o.IsByodEnabled != nil {
		return true
	}

	return false
}

// SetIsByodEnabled gets a reference to the given bool and assigns it to the IsByodEnabled field.
func (o *JamfProInformation) SetIsByodEnabled(v bool) {
	o.IsByodEnabled = &v
}

// GetIsUserMigrationEnabled returns the IsUserMigrationEnabled field value if set, zero value otherwise.
func (o *JamfProInformation) GetIsUserMigrationEnabled() bool {
	if o == nil || o.IsUserMigrationEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsUserMigrationEnabled
}

// GetIsUserMigrationEnabledOk returns a tuple with the IsUserMigrationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JamfProInformation) GetIsUserMigrationEnabledOk() (*bool, bool) {
	if o == nil || o.IsUserMigrationEnabled == nil {
		return nil, false
	}
	return o.IsUserMigrationEnabled, true
}

// HasIsUserMigrationEnabled returns a boolean if a field has been set.
func (o *JamfProInformation) HasIsUserMigrationEnabled() bool {
	if o != nil && o.IsUserMigrationEnabled != nil {
		return true
	}

	return false
}

// SetIsUserMigrationEnabled gets a reference to the given bool and assigns it to the IsUserMigrationEnabled field.
func (o *JamfProInformation) SetIsUserMigrationEnabled(v bool) {
	o.IsUserMigrationEnabled = &v
}

// GetIsCloudDeploymentsEnabled returns the IsCloudDeploymentsEnabled field value if set, zero value otherwise.
func (o *JamfProInformation) GetIsCloudDeploymentsEnabled() bool {
	if o == nil || o.IsCloudDeploymentsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsCloudDeploymentsEnabled
}

// GetIsCloudDeploymentsEnabledOk returns a tuple with the IsCloudDeploymentsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JamfProInformation) GetIsCloudDeploymentsEnabledOk() (*bool, bool) {
	if o == nil || o.IsCloudDeploymentsEnabled == nil {
		return nil, false
	}
	return o.IsCloudDeploymentsEnabled, true
}

// HasIsCloudDeploymentsEnabled returns a boolean if a field has been set.
func (o *JamfProInformation) HasIsCloudDeploymentsEnabled() bool {
	if o != nil && o.IsCloudDeploymentsEnabled != nil {
		return true
	}

	return false
}

// SetIsCloudDeploymentsEnabled gets a reference to the given bool and assigns it to the IsCloudDeploymentsEnabled field.
func (o *JamfProInformation) SetIsCloudDeploymentsEnabled(v bool) {
	o.IsCloudDeploymentsEnabled = &v
}

// GetIsPatchEnabled returns the IsPatchEnabled field value if set, zero value otherwise.
func (o *JamfProInformation) GetIsPatchEnabled() bool {
	if o == nil || o.IsPatchEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsPatchEnabled
}

// GetIsPatchEnabledOk returns a tuple with the IsPatchEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JamfProInformation) GetIsPatchEnabledOk() (*bool, bool) {
	if o == nil || o.IsPatchEnabled == nil {
		return nil, false
	}
	return o.IsPatchEnabled, true
}

// HasIsPatchEnabled returns a boolean if a field has been set.
func (o *JamfProInformation) HasIsPatchEnabled() bool {
	if o != nil && o.IsPatchEnabled != nil {
		return true
	}

	return false
}

// SetIsPatchEnabled gets a reference to the given bool and assigns it to the IsPatchEnabled field.
func (o *JamfProInformation) SetIsPatchEnabled(v bool) {
	o.IsPatchEnabled = &v
}

// GetIsSsoSamlEnabled returns the IsSsoSamlEnabled field value if set, zero value otherwise.
func (o *JamfProInformation) GetIsSsoSamlEnabled() bool {
	if o == nil || o.IsSsoSamlEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsSsoSamlEnabled
}

// GetIsSsoSamlEnabledOk returns a tuple with the IsSsoSamlEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JamfProInformation) GetIsSsoSamlEnabledOk() (*bool, bool) {
	if o == nil || o.IsSsoSamlEnabled == nil {
		return nil, false
	}
	return o.IsSsoSamlEnabled, true
}

// HasIsSsoSamlEnabled returns a boolean if a field has been set.
func (o *JamfProInformation) HasIsSsoSamlEnabled() bool {
	if o != nil && o.IsSsoSamlEnabled != nil {
		return true
	}

	return false
}

// SetIsSsoSamlEnabled gets a reference to the given bool and assigns it to the IsSsoSamlEnabled field.
func (o *JamfProInformation) SetIsSsoSamlEnabled(v bool) {
	o.IsSsoSamlEnabled = &v
}

// GetIsSmtpEnabled returns the IsSmtpEnabled field value if set, zero value otherwise.
func (o *JamfProInformation) GetIsSmtpEnabled() bool {
	if o == nil || o.IsSmtpEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsSmtpEnabled
}

// GetIsSmtpEnabledOk returns a tuple with the IsSmtpEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JamfProInformation) GetIsSmtpEnabledOk() (*bool, bool) {
	if o == nil || o.IsSmtpEnabled == nil {
		return nil, false
	}
	return o.IsSmtpEnabled, true
}

// HasIsSmtpEnabled returns a boolean if a field has been set.
func (o *JamfProInformation) HasIsSmtpEnabled() bool {
	if o != nil && o.IsSmtpEnabled != nil {
		return true
	}

	return false
}

// SetIsSmtpEnabled gets a reference to the given bool and assigns it to the IsSmtpEnabled field.
func (o *JamfProInformation) SetIsSmtpEnabled(v bool) {
	o.IsSmtpEnabled = &v
}

func (o JamfProInformation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsVppTokenEnabled != nil {
		toSerialize["isVppTokenEnabled"] = o.IsVppTokenEnabled
	}
	if o.IsDepAccountEnabled != nil {
		toSerialize["isDepAccountEnabled"] = o.IsDepAccountEnabled
	}
	if o.IsByodEnabled != nil {
		toSerialize["isByodEnabled"] = o.IsByodEnabled
	}
	if o.IsUserMigrationEnabled != nil {
		toSerialize["isUserMigrationEnabled"] = o.IsUserMigrationEnabled
	}
	if o.IsCloudDeploymentsEnabled != nil {
		toSerialize["isCloudDeploymentsEnabled"] = o.IsCloudDeploymentsEnabled
	}
	if o.IsPatchEnabled != nil {
		toSerialize["isPatchEnabled"] = o.IsPatchEnabled
	}
	if o.IsSsoSamlEnabled != nil {
		toSerialize["isSsoSamlEnabled"] = o.IsSsoSamlEnabled
	}
	if o.IsSmtpEnabled != nil {
		toSerialize["isSmtpEnabled"] = o.IsSmtpEnabled
	}
	return json.Marshal(toSerialize)
}

type NullableJamfProInformation struct {
	value *JamfProInformation
	isSet bool
}

func (v NullableJamfProInformation) Get() *JamfProInformation {
	return v.value
}

func (v *NullableJamfProInformation) Set(val *JamfProInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableJamfProInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableJamfProInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJamfProInformation(val *JamfProInformation) *NullableJamfProInformation {
	return &NullableJamfProInformation{value: val, isSet: true}
}

func (v NullableJamfProInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJamfProInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


