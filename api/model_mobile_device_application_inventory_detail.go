/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the MobileDeviceApplicationInventoryDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MobileDeviceApplicationInventoryDetail{}

// MobileDeviceApplicationInventoryDetail struct for MobileDeviceApplicationInventoryDetail
type MobileDeviceApplicationInventoryDetail struct {
	Identifier *string `json:"identifier,omitempty"`
	Name *string `json:"name,omitempty"`
	Version *string `json:"version,omitempty"`
	ShortVersion *string `json:"shortVersion,omitempty"`
	ManagementStatus *string `json:"managementStatus,omitempty"`
	ValidationStatus *bool `json:"validationStatus,omitempty"`
	BundleSize *string `json:"bundleSize,omitempty"`
	DynamicSize *string `json:"dynamicSize,omitempty"`
}

// NewMobileDeviceApplicationInventoryDetail instantiates a new MobileDeviceApplicationInventoryDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileDeviceApplicationInventoryDetail() *MobileDeviceApplicationInventoryDetail {
	this := MobileDeviceApplicationInventoryDetail{}
	return &this
}

// NewMobileDeviceApplicationInventoryDetailWithDefaults instantiates a new MobileDeviceApplicationInventoryDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileDeviceApplicationInventoryDetailWithDefaults() *MobileDeviceApplicationInventoryDetail {
	this := MobileDeviceApplicationInventoryDetail{}
	return &this
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *MobileDeviceApplicationInventoryDetail) GetIdentifier() string {
	if o == nil || IsNil(o.Identifier) {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceApplicationInventoryDetail) GetIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.Identifier) {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *MobileDeviceApplicationInventoryDetail) HasIdentifier() bool {
	if o != nil && !IsNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *MobileDeviceApplicationInventoryDetail) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MobileDeviceApplicationInventoryDetail) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceApplicationInventoryDetail) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MobileDeviceApplicationInventoryDetail) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MobileDeviceApplicationInventoryDetail) SetName(v string) {
	o.Name = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *MobileDeviceApplicationInventoryDetail) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceApplicationInventoryDetail) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *MobileDeviceApplicationInventoryDetail) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *MobileDeviceApplicationInventoryDetail) SetVersion(v string) {
	o.Version = &v
}

// GetShortVersion returns the ShortVersion field value if set, zero value otherwise.
func (o *MobileDeviceApplicationInventoryDetail) GetShortVersion() string {
	if o == nil || IsNil(o.ShortVersion) {
		var ret string
		return ret
	}
	return *o.ShortVersion
}

// GetShortVersionOk returns a tuple with the ShortVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceApplicationInventoryDetail) GetShortVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ShortVersion) {
		return nil, false
	}
	return o.ShortVersion, true
}

// HasShortVersion returns a boolean if a field has been set.
func (o *MobileDeviceApplicationInventoryDetail) HasShortVersion() bool {
	if o != nil && !IsNil(o.ShortVersion) {
		return true
	}

	return false
}

// SetShortVersion gets a reference to the given string and assigns it to the ShortVersion field.
func (o *MobileDeviceApplicationInventoryDetail) SetShortVersion(v string) {
	o.ShortVersion = &v
}

// GetManagementStatus returns the ManagementStatus field value if set, zero value otherwise.
func (o *MobileDeviceApplicationInventoryDetail) GetManagementStatus() string {
	if o == nil || IsNil(o.ManagementStatus) {
		var ret string
		return ret
	}
	return *o.ManagementStatus
}

// GetManagementStatusOk returns a tuple with the ManagementStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceApplicationInventoryDetail) GetManagementStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ManagementStatus) {
		return nil, false
	}
	return o.ManagementStatus, true
}

// HasManagementStatus returns a boolean if a field has been set.
func (o *MobileDeviceApplicationInventoryDetail) HasManagementStatus() bool {
	if o != nil && !IsNil(o.ManagementStatus) {
		return true
	}

	return false
}

// SetManagementStatus gets a reference to the given string and assigns it to the ManagementStatus field.
func (o *MobileDeviceApplicationInventoryDetail) SetManagementStatus(v string) {
	o.ManagementStatus = &v
}

// GetValidationStatus returns the ValidationStatus field value if set, zero value otherwise.
func (o *MobileDeviceApplicationInventoryDetail) GetValidationStatus() bool {
	if o == nil || IsNil(o.ValidationStatus) {
		var ret bool
		return ret
	}
	return *o.ValidationStatus
}

// GetValidationStatusOk returns a tuple with the ValidationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceApplicationInventoryDetail) GetValidationStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidationStatus) {
		return nil, false
	}
	return o.ValidationStatus, true
}

// HasValidationStatus returns a boolean if a field has been set.
func (o *MobileDeviceApplicationInventoryDetail) HasValidationStatus() bool {
	if o != nil && !IsNil(o.ValidationStatus) {
		return true
	}

	return false
}

// SetValidationStatus gets a reference to the given bool and assigns it to the ValidationStatus field.
func (o *MobileDeviceApplicationInventoryDetail) SetValidationStatus(v bool) {
	o.ValidationStatus = &v
}

// GetBundleSize returns the BundleSize field value if set, zero value otherwise.
func (o *MobileDeviceApplicationInventoryDetail) GetBundleSize() string {
	if o == nil || IsNil(o.BundleSize) {
		var ret string
		return ret
	}
	return *o.BundleSize
}

// GetBundleSizeOk returns a tuple with the BundleSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceApplicationInventoryDetail) GetBundleSizeOk() (*string, bool) {
	if o == nil || IsNil(o.BundleSize) {
		return nil, false
	}
	return o.BundleSize, true
}

// HasBundleSize returns a boolean if a field has been set.
func (o *MobileDeviceApplicationInventoryDetail) HasBundleSize() bool {
	if o != nil && !IsNil(o.BundleSize) {
		return true
	}

	return false
}

// SetBundleSize gets a reference to the given string and assigns it to the BundleSize field.
func (o *MobileDeviceApplicationInventoryDetail) SetBundleSize(v string) {
	o.BundleSize = &v
}

// GetDynamicSize returns the DynamicSize field value if set, zero value otherwise.
func (o *MobileDeviceApplicationInventoryDetail) GetDynamicSize() string {
	if o == nil || IsNil(o.DynamicSize) {
		var ret string
		return ret
	}
	return *o.DynamicSize
}

// GetDynamicSizeOk returns a tuple with the DynamicSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceApplicationInventoryDetail) GetDynamicSizeOk() (*string, bool) {
	if o == nil || IsNil(o.DynamicSize) {
		return nil, false
	}
	return o.DynamicSize, true
}

// HasDynamicSize returns a boolean if a field has been set.
func (o *MobileDeviceApplicationInventoryDetail) HasDynamicSize() bool {
	if o != nil && !IsNil(o.DynamicSize) {
		return true
	}

	return false
}

// SetDynamicSize gets a reference to the given string and assigns it to the DynamicSize field.
func (o *MobileDeviceApplicationInventoryDetail) SetDynamicSize(v string) {
	o.DynamicSize = &v
}

func (o MobileDeviceApplicationInventoryDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MobileDeviceApplicationInventoryDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Identifier) {
		toSerialize["identifier"] = o.Identifier
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.ShortVersion) {
		toSerialize["shortVersion"] = o.ShortVersion
	}
	if !IsNil(o.ManagementStatus) {
		toSerialize["managementStatus"] = o.ManagementStatus
	}
	if !IsNil(o.ValidationStatus) {
		toSerialize["validationStatus"] = o.ValidationStatus
	}
	if !IsNil(o.BundleSize) {
		toSerialize["bundleSize"] = o.BundleSize
	}
	if !IsNil(o.DynamicSize) {
		toSerialize["dynamicSize"] = o.DynamicSize
	}
	return toSerialize, nil
}

type NullableMobileDeviceApplicationInventoryDetail struct {
	value *MobileDeviceApplicationInventoryDetail
	isSet bool
}

func (v NullableMobileDeviceApplicationInventoryDetail) Get() *MobileDeviceApplicationInventoryDetail {
	return v.value
}

func (v *NullableMobileDeviceApplicationInventoryDetail) Set(val *MobileDeviceApplicationInventoryDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileDeviceApplicationInventoryDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileDeviceApplicationInventoryDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileDeviceApplicationInventoryDetail(val *MobileDeviceApplicationInventoryDetail) *NullableMobileDeviceApplicationInventoryDetail {
	return &NullableMobileDeviceApplicationInventoryDetail{value: val, isSet: true}
}

func (v NullableMobileDeviceApplicationInventoryDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileDeviceApplicationInventoryDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


