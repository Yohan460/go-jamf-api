/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the MobileDeviceIosGeneral type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MobileDeviceIosGeneral{}

// MobileDeviceIosGeneral struct for MobileDeviceIosGeneral
type MobileDeviceIosGeneral struct {
	Udid *string `json:"udid,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	AssetTag *string `json:"assetTag,omitempty"`
	SiteId *string `json:"siteId,omitempty"`
	LastInventoryUpdateDate *time.Time `json:"lastInventoryUpdateDate,omitempty"`
	OsVersion *string `json:"osVersion,omitempty"`
	OsRapidSecurityResponse *string `json:"osRapidSecurityResponse,omitempty"`
	OsBuild *string `json:"osBuild,omitempty"`
	OsSupplementalBuildVersion *string `json:"osSupplementalBuildVersion,omitempty"`
	SoftwareUpdateDeviceId *string `json:"softwareUpdateDeviceId,omitempty"`
	IpAddress *string `json:"ipAddress,omitempty"`
	Managed *bool `json:"managed,omitempty"`
	Supervised *bool `json:"supervised,omitempty"`
	DeviceOwnershipType *string `json:"deviceOwnershipType,omitempty"`
	EnrollmentMethodPrestage *EnrollmentMethodPrestage `json:"enrollmentMethodPrestage,omitempty"`
	EnrollmentSessionTokenValid *bool `json:"enrollmentSessionTokenValid,omitempty"`
	LastEnrolledDate *time.Time `json:"lastEnrolledDate,omitempty"`
	MdmProfileExpirationDate *time.Time `json:"mdmProfileExpirationDate,omitempty"`
	// IANA time zone database name
	TimeZone *string `json:"timeZone,omitempty"`
	DeclarativeDeviceManagementEnabled *bool `json:"declarativeDeviceManagementEnabled,omitempty"`
	ExtensionAttributes []MobileDeviceExtensionAttribute `json:"extensionAttributes,omitempty"`
	SharedIpad *bool `json:"sharedIpad,omitempty"`
	DiagnosticAndUsageReportingEnabled *bool `json:"diagnosticAndUsageReportingEnabled,omitempty"`
	AppAnalyticsEnabled *bool `json:"appAnalyticsEnabled,omitempty"`
	ResidentUsers *int32 `json:"residentUsers,omitempty"`
	QuotaSize *int32 `json:"quotaSize,omitempty"`
	TemporarySessionOnly *bool `json:"temporarySessionOnly,omitempty"`
	TemporarySessionTimeout *int32 `json:"temporarySessionTimeout,omitempty"`
	UserSessionTimeout *int32 `json:"userSessionTimeout,omitempty"`
	SyncedToComputer *int32 `json:"syncedToComputer,omitempty"`
	MaximumSharediPadUsersStored *int32 `json:"maximumSharediPadUsersStored,omitempty"`
	LastBackupDate *time.Time `json:"lastBackupDate,omitempty"`
	DeviceLocatorServiceEnabled *bool `json:"deviceLocatorServiceEnabled,omitempty"`
	DoNotDisturbEnabled *bool `json:"doNotDisturbEnabled,omitempty"`
	CloudBackupEnabled *bool `json:"cloudBackupEnabled,omitempty"`
	LastCloudBackupDate *time.Time `json:"lastCloudBackupDate,omitempty"`
	LocationServicesForSelfServiceMobileEnabled *bool `json:"locationServicesForSelfServiceMobileEnabled,omitempty"`
	ItunesStoreAccountActive *bool `json:"itunesStoreAccountActive,omitempty"`
	ExchangeDeviceId *string `json:"exchangeDeviceId,omitempty"`
	Tethered *bool `json:"tethered,omitempty"`
}

// NewMobileDeviceIosGeneral instantiates a new MobileDeviceIosGeneral object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileDeviceIosGeneral() *MobileDeviceIosGeneral {
	this := MobileDeviceIosGeneral{}
	return &this
}

// NewMobileDeviceIosGeneralWithDefaults instantiates a new MobileDeviceIosGeneral object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileDeviceIosGeneralWithDefaults() *MobileDeviceIosGeneral {
	this := MobileDeviceIosGeneral{}
	return &this
}

// GetUdid returns the Udid field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetUdid() string {
	if o == nil || IsNil(o.Udid) {
		var ret string
		return ret
	}
	return *o.Udid
}

// GetUdidOk returns a tuple with the Udid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetUdidOk() (*string, bool) {
	if o == nil || IsNil(o.Udid) {
		return nil, false
	}
	return o.Udid, true
}

// HasUdid returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasUdid() bool {
	if o != nil && !IsNil(o.Udid) {
		return true
	}

	return false
}

// SetUdid gets a reference to the given string and assigns it to the Udid field.
func (o *MobileDeviceIosGeneral) SetUdid(v string) {
	o.Udid = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MobileDeviceIosGeneral) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetAssetTag returns the AssetTag field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetAssetTag() string {
	if o == nil || IsNil(o.AssetTag) {
		var ret string
		return ret
	}
	return *o.AssetTag
}

// GetAssetTagOk returns a tuple with the AssetTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetAssetTagOk() (*string, bool) {
	if o == nil || IsNil(o.AssetTag) {
		return nil, false
	}
	return o.AssetTag, true
}

// HasAssetTag returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasAssetTag() bool {
	if o != nil && !IsNil(o.AssetTag) {
		return true
	}

	return false
}

// SetAssetTag gets a reference to the given string and assigns it to the AssetTag field.
func (o *MobileDeviceIosGeneral) SetAssetTag(v string) {
	o.AssetTag = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *MobileDeviceIosGeneral) SetSiteId(v string) {
	o.SiteId = &v
}

// GetLastInventoryUpdateDate returns the LastInventoryUpdateDate field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetLastInventoryUpdateDate() time.Time {
	if o == nil || IsNil(o.LastInventoryUpdateDate) {
		var ret time.Time
		return ret
	}
	return *o.LastInventoryUpdateDate
}

// GetLastInventoryUpdateDateOk returns a tuple with the LastInventoryUpdateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetLastInventoryUpdateDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastInventoryUpdateDate) {
		return nil, false
	}
	return o.LastInventoryUpdateDate, true
}

// HasLastInventoryUpdateDate returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasLastInventoryUpdateDate() bool {
	if o != nil && !IsNil(o.LastInventoryUpdateDate) {
		return true
	}

	return false
}

// SetLastInventoryUpdateDate gets a reference to the given time.Time and assigns it to the LastInventoryUpdateDate field.
func (o *MobileDeviceIosGeneral) SetLastInventoryUpdateDate(v time.Time) {
	o.LastInventoryUpdateDate = &v
}

// GetOsVersion returns the OsVersion field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetOsVersion() string {
	if o == nil || IsNil(o.OsVersion) {
		var ret string
		return ret
	}
	return *o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetOsVersionOk() (*string, bool) {
	if o == nil || IsNil(o.OsVersion) {
		return nil, false
	}
	return o.OsVersion, true
}

// HasOsVersion returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasOsVersion() bool {
	if o != nil && !IsNil(o.OsVersion) {
		return true
	}

	return false
}

// SetOsVersion gets a reference to the given string and assigns it to the OsVersion field.
func (o *MobileDeviceIosGeneral) SetOsVersion(v string) {
	o.OsVersion = &v
}

// GetOsRapidSecurityResponse returns the OsRapidSecurityResponse field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetOsRapidSecurityResponse() string {
	if o == nil || IsNil(o.OsRapidSecurityResponse) {
		var ret string
		return ret
	}
	return *o.OsRapidSecurityResponse
}

// GetOsRapidSecurityResponseOk returns a tuple with the OsRapidSecurityResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetOsRapidSecurityResponseOk() (*string, bool) {
	if o == nil || IsNil(o.OsRapidSecurityResponse) {
		return nil, false
	}
	return o.OsRapidSecurityResponse, true
}

// HasOsRapidSecurityResponse returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasOsRapidSecurityResponse() bool {
	if o != nil && !IsNil(o.OsRapidSecurityResponse) {
		return true
	}

	return false
}

// SetOsRapidSecurityResponse gets a reference to the given string and assigns it to the OsRapidSecurityResponse field.
func (o *MobileDeviceIosGeneral) SetOsRapidSecurityResponse(v string) {
	o.OsRapidSecurityResponse = &v
}

// GetOsBuild returns the OsBuild field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetOsBuild() string {
	if o == nil || IsNil(o.OsBuild) {
		var ret string
		return ret
	}
	return *o.OsBuild
}

// GetOsBuildOk returns a tuple with the OsBuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetOsBuildOk() (*string, bool) {
	if o == nil || IsNil(o.OsBuild) {
		return nil, false
	}
	return o.OsBuild, true
}

// HasOsBuild returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasOsBuild() bool {
	if o != nil && !IsNil(o.OsBuild) {
		return true
	}

	return false
}

// SetOsBuild gets a reference to the given string and assigns it to the OsBuild field.
func (o *MobileDeviceIosGeneral) SetOsBuild(v string) {
	o.OsBuild = &v
}

// GetOsSupplementalBuildVersion returns the OsSupplementalBuildVersion field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetOsSupplementalBuildVersion() string {
	if o == nil || IsNil(o.OsSupplementalBuildVersion) {
		var ret string
		return ret
	}
	return *o.OsSupplementalBuildVersion
}

// GetOsSupplementalBuildVersionOk returns a tuple with the OsSupplementalBuildVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetOsSupplementalBuildVersionOk() (*string, bool) {
	if o == nil || IsNil(o.OsSupplementalBuildVersion) {
		return nil, false
	}
	return o.OsSupplementalBuildVersion, true
}

// HasOsSupplementalBuildVersion returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasOsSupplementalBuildVersion() bool {
	if o != nil && !IsNil(o.OsSupplementalBuildVersion) {
		return true
	}

	return false
}

// SetOsSupplementalBuildVersion gets a reference to the given string and assigns it to the OsSupplementalBuildVersion field.
func (o *MobileDeviceIosGeneral) SetOsSupplementalBuildVersion(v string) {
	o.OsSupplementalBuildVersion = &v
}

// GetSoftwareUpdateDeviceId returns the SoftwareUpdateDeviceId field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetSoftwareUpdateDeviceId() string {
	if o == nil || IsNil(o.SoftwareUpdateDeviceId) {
		var ret string
		return ret
	}
	return *o.SoftwareUpdateDeviceId
}

// GetSoftwareUpdateDeviceIdOk returns a tuple with the SoftwareUpdateDeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetSoftwareUpdateDeviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SoftwareUpdateDeviceId) {
		return nil, false
	}
	return o.SoftwareUpdateDeviceId, true
}

// HasSoftwareUpdateDeviceId returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasSoftwareUpdateDeviceId() bool {
	if o != nil && !IsNil(o.SoftwareUpdateDeviceId) {
		return true
	}

	return false
}

// SetSoftwareUpdateDeviceId gets a reference to the given string and assigns it to the SoftwareUpdateDeviceId field.
func (o *MobileDeviceIosGeneral) SetSoftwareUpdateDeviceId(v string) {
	o.SoftwareUpdateDeviceId = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *MobileDeviceIosGeneral) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetManaged returns the Managed field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetManaged() bool {
	if o == nil || IsNil(o.Managed) {
		var ret bool
		return ret
	}
	return *o.Managed
}

// GetManagedOk returns a tuple with the Managed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.Managed) {
		return nil, false
	}
	return o.Managed, true
}

// HasManaged returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasManaged() bool {
	if o != nil && !IsNil(o.Managed) {
		return true
	}

	return false
}

// SetManaged gets a reference to the given bool and assigns it to the Managed field.
func (o *MobileDeviceIosGeneral) SetManaged(v bool) {
	o.Managed = &v
}

// GetSupervised returns the Supervised field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetSupervised() bool {
	if o == nil || IsNil(o.Supervised) {
		var ret bool
		return ret
	}
	return *o.Supervised
}

// GetSupervisedOk returns a tuple with the Supervised field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetSupervisedOk() (*bool, bool) {
	if o == nil || IsNil(o.Supervised) {
		return nil, false
	}
	return o.Supervised, true
}

// HasSupervised returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasSupervised() bool {
	if o != nil && !IsNil(o.Supervised) {
		return true
	}

	return false
}

// SetSupervised gets a reference to the given bool and assigns it to the Supervised field.
func (o *MobileDeviceIosGeneral) SetSupervised(v bool) {
	o.Supervised = &v
}

// GetDeviceOwnershipType returns the DeviceOwnershipType field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetDeviceOwnershipType() string {
	if o == nil || IsNil(o.DeviceOwnershipType) {
		var ret string
		return ret
	}
	return *o.DeviceOwnershipType
}

// GetDeviceOwnershipTypeOk returns a tuple with the DeviceOwnershipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetDeviceOwnershipTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceOwnershipType) {
		return nil, false
	}
	return o.DeviceOwnershipType, true
}

// HasDeviceOwnershipType returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasDeviceOwnershipType() bool {
	if o != nil && !IsNil(o.DeviceOwnershipType) {
		return true
	}

	return false
}

// SetDeviceOwnershipType gets a reference to the given string and assigns it to the DeviceOwnershipType field.
func (o *MobileDeviceIosGeneral) SetDeviceOwnershipType(v string) {
	o.DeviceOwnershipType = &v
}

// GetEnrollmentMethodPrestage returns the EnrollmentMethodPrestage field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetEnrollmentMethodPrestage() EnrollmentMethodPrestage {
	if o == nil || IsNil(o.EnrollmentMethodPrestage) {
		var ret EnrollmentMethodPrestage
		return ret
	}
	return *o.EnrollmentMethodPrestage
}

// GetEnrollmentMethodPrestageOk returns a tuple with the EnrollmentMethodPrestage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetEnrollmentMethodPrestageOk() (*EnrollmentMethodPrestage, bool) {
	if o == nil || IsNil(o.EnrollmentMethodPrestage) {
		return nil, false
	}
	return o.EnrollmentMethodPrestage, true
}

// HasEnrollmentMethodPrestage returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasEnrollmentMethodPrestage() bool {
	if o != nil && !IsNil(o.EnrollmentMethodPrestage) {
		return true
	}

	return false
}

// SetEnrollmentMethodPrestage gets a reference to the given EnrollmentMethodPrestage and assigns it to the EnrollmentMethodPrestage field.
func (o *MobileDeviceIosGeneral) SetEnrollmentMethodPrestage(v EnrollmentMethodPrestage) {
	o.EnrollmentMethodPrestage = &v
}

// GetEnrollmentSessionTokenValid returns the EnrollmentSessionTokenValid field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetEnrollmentSessionTokenValid() bool {
	if o == nil || IsNil(o.EnrollmentSessionTokenValid) {
		var ret bool
		return ret
	}
	return *o.EnrollmentSessionTokenValid
}

// GetEnrollmentSessionTokenValidOk returns a tuple with the EnrollmentSessionTokenValid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetEnrollmentSessionTokenValidOk() (*bool, bool) {
	if o == nil || IsNil(o.EnrollmentSessionTokenValid) {
		return nil, false
	}
	return o.EnrollmentSessionTokenValid, true
}

// HasEnrollmentSessionTokenValid returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasEnrollmentSessionTokenValid() bool {
	if o != nil && !IsNil(o.EnrollmentSessionTokenValid) {
		return true
	}

	return false
}

// SetEnrollmentSessionTokenValid gets a reference to the given bool and assigns it to the EnrollmentSessionTokenValid field.
func (o *MobileDeviceIosGeneral) SetEnrollmentSessionTokenValid(v bool) {
	o.EnrollmentSessionTokenValid = &v
}

// GetLastEnrolledDate returns the LastEnrolledDate field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetLastEnrolledDate() time.Time {
	if o == nil || IsNil(o.LastEnrolledDate) {
		var ret time.Time
		return ret
	}
	return *o.LastEnrolledDate
}

// GetLastEnrolledDateOk returns a tuple with the LastEnrolledDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetLastEnrolledDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastEnrolledDate) {
		return nil, false
	}
	return o.LastEnrolledDate, true
}

// HasLastEnrolledDate returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasLastEnrolledDate() bool {
	if o != nil && !IsNil(o.LastEnrolledDate) {
		return true
	}

	return false
}

// SetLastEnrolledDate gets a reference to the given time.Time and assigns it to the LastEnrolledDate field.
func (o *MobileDeviceIosGeneral) SetLastEnrolledDate(v time.Time) {
	o.LastEnrolledDate = &v
}

// GetMdmProfileExpirationDate returns the MdmProfileExpirationDate field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetMdmProfileExpirationDate() time.Time {
	if o == nil || IsNil(o.MdmProfileExpirationDate) {
		var ret time.Time
		return ret
	}
	return *o.MdmProfileExpirationDate
}

// GetMdmProfileExpirationDateOk returns a tuple with the MdmProfileExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetMdmProfileExpirationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.MdmProfileExpirationDate) {
		return nil, false
	}
	return o.MdmProfileExpirationDate, true
}

// HasMdmProfileExpirationDate returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasMdmProfileExpirationDate() bool {
	if o != nil && !IsNil(o.MdmProfileExpirationDate) {
		return true
	}

	return false
}

// SetMdmProfileExpirationDate gets a reference to the given time.Time and assigns it to the MdmProfileExpirationDate field.
func (o *MobileDeviceIosGeneral) SetMdmProfileExpirationDate(v time.Time) {
	o.MdmProfileExpirationDate = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetTimeZone() string {
	if o == nil || IsNil(o.TimeZone) {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *MobileDeviceIosGeneral) SetTimeZone(v string) {
	o.TimeZone = &v
}

// GetDeclarativeDeviceManagementEnabled returns the DeclarativeDeviceManagementEnabled field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetDeclarativeDeviceManagementEnabled() bool {
	if o == nil || IsNil(o.DeclarativeDeviceManagementEnabled) {
		var ret bool
		return ret
	}
	return *o.DeclarativeDeviceManagementEnabled
}

// GetDeclarativeDeviceManagementEnabledOk returns a tuple with the DeclarativeDeviceManagementEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetDeclarativeDeviceManagementEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DeclarativeDeviceManagementEnabled) {
		return nil, false
	}
	return o.DeclarativeDeviceManagementEnabled, true
}

// HasDeclarativeDeviceManagementEnabled returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasDeclarativeDeviceManagementEnabled() bool {
	if o != nil && !IsNil(o.DeclarativeDeviceManagementEnabled) {
		return true
	}

	return false
}

// SetDeclarativeDeviceManagementEnabled gets a reference to the given bool and assigns it to the DeclarativeDeviceManagementEnabled field.
func (o *MobileDeviceIosGeneral) SetDeclarativeDeviceManagementEnabled(v bool) {
	o.DeclarativeDeviceManagementEnabled = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetExtensionAttributes() []MobileDeviceExtensionAttribute {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret []MobileDeviceExtensionAttribute
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetExtensionAttributesOk() ([]MobileDeviceExtensionAttribute, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given []MobileDeviceExtensionAttribute and assigns it to the ExtensionAttributes field.
func (o *MobileDeviceIosGeneral) SetExtensionAttributes(v []MobileDeviceExtensionAttribute) {
	o.ExtensionAttributes = v
}

// GetSharedIpad returns the SharedIpad field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetSharedIpad() bool {
	if o == nil || IsNil(o.SharedIpad) {
		var ret bool
		return ret
	}
	return *o.SharedIpad
}

// GetSharedIpadOk returns a tuple with the SharedIpad field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetSharedIpadOk() (*bool, bool) {
	if o == nil || IsNil(o.SharedIpad) {
		return nil, false
	}
	return o.SharedIpad, true
}

// HasSharedIpad returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasSharedIpad() bool {
	if o != nil && !IsNil(o.SharedIpad) {
		return true
	}

	return false
}

// SetSharedIpad gets a reference to the given bool and assigns it to the SharedIpad field.
func (o *MobileDeviceIosGeneral) SetSharedIpad(v bool) {
	o.SharedIpad = &v
}

// GetDiagnosticAndUsageReportingEnabled returns the DiagnosticAndUsageReportingEnabled field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetDiagnosticAndUsageReportingEnabled() bool {
	if o == nil || IsNil(o.DiagnosticAndUsageReportingEnabled) {
		var ret bool
		return ret
	}
	return *o.DiagnosticAndUsageReportingEnabled
}

// GetDiagnosticAndUsageReportingEnabledOk returns a tuple with the DiagnosticAndUsageReportingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetDiagnosticAndUsageReportingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DiagnosticAndUsageReportingEnabled) {
		return nil, false
	}
	return o.DiagnosticAndUsageReportingEnabled, true
}

// HasDiagnosticAndUsageReportingEnabled returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasDiagnosticAndUsageReportingEnabled() bool {
	if o != nil && !IsNil(o.DiagnosticAndUsageReportingEnabled) {
		return true
	}

	return false
}

// SetDiagnosticAndUsageReportingEnabled gets a reference to the given bool and assigns it to the DiagnosticAndUsageReportingEnabled field.
func (o *MobileDeviceIosGeneral) SetDiagnosticAndUsageReportingEnabled(v bool) {
	o.DiagnosticAndUsageReportingEnabled = &v
}

// GetAppAnalyticsEnabled returns the AppAnalyticsEnabled field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetAppAnalyticsEnabled() bool {
	if o == nil || IsNil(o.AppAnalyticsEnabled) {
		var ret bool
		return ret
	}
	return *o.AppAnalyticsEnabled
}

// GetAppAnalyticsEnabledOk returns a tuple with the AppAnalyticsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetAppAnalyticsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AppAnalyticsEnabled) {
		return nil, false
	}
	return o.AppAnalyticsEnabled, true
}

// HasAppAnalyticsEnabled returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasAppAnalyticsEnabled() bool {
	if o != nil && !IsNil(o.AppAnalyticsEnabled) {
		return true
	}

	return false
}

// SetAppAnalyticsEnabled gets a reference to the given bool and assigns it to the AppAnalyticsEnabled field.
func (o *MobileDeviceIosGeneral) SetAppAnalyticsEnabled(v bool) {
	o.AppAnalyticsEnabled = &v
}

// GetResidentUsers returns the ResidentUsers field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetResidentUsers() int32 {
	if o == nil || IsNil(o.ResidentUsers) {
		var ret int32
		return ret
	}
	return *o.ResidentUsers
}

// GetResidentUsersOk returns a tuple with the ResidentUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetResidentUsersOk() (*int32, bool) {
	if o == nil || IsNil(o.ResidentUsers) {
		return nil, false
	}
	return o.ResidentUsers, true
}

// HasResidentUsers returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasResidentUsers() bool {
	if o != nil && !IsNil(o.ResidentUsers) {
		return true
	}

	return false
}

// SetResidentUsers gets a reference to the given int32 and assigns it to the ResidentUsers field.
func (o *MobileDeviceIosGeneral) SetResidentUsers(v int32) {
	o.ResidentUsers = &v
}

// GetQuotaSize returns the QuotaSize field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetQuotaSize() int32 {
	if o == nil || IsNil(o.QuotaSize) {
		var ret int32
		return ret
	}
	return *o.QuotaSize
}

// GetQuotaSizeOk returns a tuple with the QuotaSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetQuotaSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.QuotaSize) {
		return nil, false
	}
	return o.QuotaSize, true
}

// HasQuotaSize returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasQuotaSize() bool {
	if o != nil && !IsNil(o.QuotaSize) {
		return true
	}

	return false
}

// SetQuotaSize gets a reference to the given int32 and assigns it to the QuotaSize field.
func (o *MobileDeviceIosGeneral) SetQuotaSize(v int32) {
	o.QuotaSize = &v
}

// GetTemporarySessionOnly returns the TemporarySessionOnly field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetTemporarySessionOnly() bool {
	if o == nil || IsNil(o.TemporarySessionOnly) {
		var ret bool
		return ret
	}
	return *o.TemporarySessionOnly
}

// GetTemporarySessionOnlyOk returns a tuple with the TemporarySessionOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetTemporarySessionOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.TemporarySessionOnly) {
		return nil, false
	}
	return o.TemporarySessionOnly, true
}

// HasTemporarySessionOnly returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasTemporarySessionOnly() bool {
	if o != nil && !IsNil(o.TemporarySessionOnly) {
		return true
	}

	return false
}

// SetTemporarySessionOnly gets a reference to the given bool and assigns it to the TemporarySessionOnly field.
func (o *MobileDeviceIosGeneral) SetTemporarySessionOnly(v bool) {
	o.TemporarySessionOnly = &v
}

// GetTemporarySessionTimeout returns the TemporarySessionTimeout field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetTemporarySessionTimeout() int32 {
	if o == nil || IsNil(o.TemporarySessionTimeout) {
		var ret int32
		return ret
	}
	return *o.TemporarySessionTimeout
}

// GetTemporarySessionTimeoutOk returns a tuple with the TemporarySessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetTemporarySessionTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.TemporarySessionTimeout) {
		return nil, false
	}
	return o.TemporarySessionTimeout, true
}

// HasTemporarySessionTimeout returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasTemporarySessionTimeout() bool {
	if o != nil && !IsNil(o.TemporarySessionTimeout) {
		return true
	}

	return false
}

// SetTemporarySessionTimeout gets a reference to the given int32 and assigns it to the TemporarySessionTimeout field.
func (o *MobileDeviceIosGeneral) SetTemporarySessionTimeout(v int32) {
	o.TemporarySessionTimeout = &v
}

// GetUserSessionTimeout returns the UserSessionTimeout field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetUserSessionTimeout() int32 {
	if o == nil || IsNil(o.UserSessionTimeout) {
		var ret int32
		return ret
	}
	return *o.UserSessionTimeout
}

// GetUserSessionTimeoutOk returns a tuple with the UserSessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetUserSessionTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.UserSessionTimeout) {
		return nil, false
	}
	return o.UserSessionTimeout, true
}

// HasUserSessionTimeout returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasUserSessionTimeout() bool {
	if o != nil && !IsNil(o.UserSessionTimeout) {
		return true
	}

	return false
}

// SetUserSessionTimeout gets a reference to the given int32 and assigns it to the UserSessionTimeout field.
func (o *MobileDeviceIosGeneral) SetUserSessionTimeout(v int32) {
	o.UserSessionTimeout = &v
}

// GetSyncedToComputer returns the SyncedToComputer field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetSyncedToComputer() int32 {
	if o == nil || IsNil(o.SyncedToComputer) {
		var ret int32
		return ret
	}
	return *o.SyncedToComputer
}

// GetSyncedToComputerOk returns a tuple with the SyncedToComputer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetSyncedToComputerOk() (*int32, bool) {
	if o == nil || IsNil(o.SyncedToComputer) {
		return nil, false
	}
	return o.SyncedToComputer, true
}

// HasSyncedToComputer returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasSyncedToComputer() bool {
	if o != nil && !IsNil(o.SyncedToComputer) {
		return true
	}

	return false
}

// SetSyncedToComputer gets a reference to the given int32 and assigns it to the SyncedToComputer field.
func (o *MobileDeviceIosGeneral) SetSyncedToComputer(v int32) {
	o.SyncedToComputer = &v
}

// GetMaximumSharediPadUsersStored returns the MaximumSharediPadUsersStored field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetMaximumSharediPadUsersStored() int32 {
	if o == nil || IsNil(o.MaximumSharediPadUsersStored) {
		var ret int32
		return ret
	}
	return *o.MaximumSharediPadUsersStored
}

// GetMaximumSharediPadUsersStoredOk returns a tuple with the MaximumSharediPadUsersStored field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetMaximumSharediPadUsersStoredOk() (*int32, bool) {
	if o == nil || IsNil(o.MaximumSharediPadUsersStored) {
		return nil, false
	}
	return o.MaximumSharediPadUsersStored, true
}

// HasMaximumSharediPadUsersStored returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasMaximumSharediPadUsersStored() bool {
	if o != nil && !IsNil(o.MaximumSharediPadUsersStored) {
		return true
	}

	return false
}

// SetMaximumSharediPadUsersStored gets a reference to the given int32 and assigns it to the MaximumSharediPadUsersStored field.
func (o *MobileDeviceIosGeneral) SetMaximumSharediPadUsersStored(v int32) {
	o.MaximumSharediPadUsersStored = &v
}

// GetLastBackupDate returns the LastBackupDate field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetLastBackupDate() time.Time {
	if o == nil || IsNil(o.LastBackupDate) {
		var ret time.Time
		return ret
	}
	return *o.LastBackupDate
}

// GetLastBackupDateOk returns a tuple with the LastBackupDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetLastBackupDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastBackupDate) {
		return nil, false
	}
	return o.LastBackupDate, true
}

// HasLastBackupDate returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasLastBackupDate() bool {
	if o != nil && !IsNil(o.LastBackupDate) {
		return true
	}

	return false
}

// SetLastBackupDate gets a reference to the given time.Time and assigns it to the LastBackupDate field.
func (o *MobileDeviceIosGeneral) SetLastBackupDate(v time.Time) {
	o.LastBackupDate = &v
}

// GetDeviceLocatorServiceEnabled returns the DeviceLocatorServiceEnabled field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetDeviceLocatorServiceEnabled() bool {
	if o == nil || IsNil(o.DeviceLocatorServiceEnabled) {
		var ret bool
		return ret
	}
	return *o.DeviceLocatorServiceEnabled
}

// GetDeviceLocatorServiceEnabledOk returns a tuple with the DeviceLocatorServiceEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetDeviceLocatorServiceEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DeviceLocatorServiceEnabled) {
		return nil, false
	}
	return o.DeviceLocatorServiceEnabled, true
}

// HasDeviceLocatorServiceEnabled returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasDeviceLocatorServiceEnabled() bool {
	if o != nil && !IsNil(o.DeviceLocatorServiceEnabled) {
		return true
	}

	return false
}

// SetDeviceLocatorServiceEnabled gets a reference to the given bool and assigns it to the DeviceLocatorServiceEnabled field.
func (o *MobileDeviceIosGeneral) SetDeviceLocatorServiceEnabled(v bool) {
	o.DeviceLocatorServiceEnabled = &v
}

// GetDoNotDisturbEnabled returns the DoNotDisturbEnabled field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetDoNotDisturbEnabled() bool {
	if o == nil || IsNil(o.DoNotDisturbEnabled) {
		var ret bool
		return ret
	}
	return *o.DoNotDisturbEnabled
}

// GetDoNotDisturbEnabledOk returns a tuple with the DoNotDisturbEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetDoNotDisturbEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DoNotDisturbEnabled) {
		return nil, false
	}
	return o.DoNotDisturbEnabled, true
}

// HasDoNotDisturbEnabled returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasDoNotDisturbEnabled() bool {
	if o != nil && !IsNil(o.DoNotDisturbEnabled) {
		return true
	}

	return false
}

// SetDoNotDisturbEnabled gets a reference to the given bool and assigns it to the DoNotDisturbEnabled field.
func (o *MobileDeviceIosGeneral) SetDoNotDisturbEnabled(v bool) {
	o.DoNotDisturbEnabled = &v
}

// GetCloudBackupEnabled returns the CloudBackupEnabled field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetCloudBackupEnabled() bool {
	if o == nil || IsNil(o.CloudBackupEnabled) {
		var ret bool
		return ret
	}
	return *o.CloudBackupEnabled
}

// GetCloudBackupEnabledOk returns a tuple with the CloudBackupEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetCloudBackupEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.CloudBackupEnabled) {
		return nil, false
	}
	return o.CloudBackupEnabled, true
}

// HasCloudBackupEnabled returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasCloudBackupEnabled() bool {
	if o != nil && !IsNil(o.CloudBackupEnabled) {
		return true
	}

	return false
}

// SetCloudBackupEnabled gets a reference to the given bool and assigns it to the CloudBackupEnabled field.
func (o *MobileDeviceIosGeneral) SetCloudBackupEnabled(v bool) {
	o.CloudBackupEnabled = &v
}

// GetLastCloudBackupDate returns the LastCloudBackupDate field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetLastCloudBackupDate() time.Time {
	if o == nil || IsNil(o.LastCloudBackupDate) {
		var ret time.Time
		return ret
	}
	return *o.LastCloudBackupDate
}

// GetLastCloudBackupDateOk returns a tuple with the LastCloudBackupDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetLastCloudBackupDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastCloudBackupDate) {
		return nil, false
	}
	return o.LastCloudBackupDate, true
}

// HasLastCloudBackupDate returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasLastCloudBackupDate() bool {
	if o != nil && !IsNil(o.LastCloudBackupDate) {
		return true
	}

	return false
}

// SetLastCloudBackupDate gets a reference to the given time.Time and assigns it to the LastCloudBackupDate field.
func (o *MobileDeviceIosGeneral) SetLastCloudBackupDate(v time.Time) {
	o.LastCloudBackupDate = &v
}

// GetLocationServicesForSelfServiceMobileEnabled returns the LocationServicesForSelfServiceMobileEnabled field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetLocationServicesForSelfServiceMobileEnabled() bool {
	if o == nil || IsNil(o.LocationServicesForSelfServiceMobileEnabled) {
		var ret bool
		return ret
	}
	return *o.LocationServicesForSelfServiceMobileEnabled
}

// GetLocationServicesForSelfServiceMobileEnabledOk returns a tuple with the LocationServicesForSelfServiceMobileEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetLocationServicesForSelfServiceMobileEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.LocationServicesForSelfServiceMobileEnabled) {
		return nil, false
	}
	return o.LocationServicesForSelfServiceMobileEnabled, true
}

// HasLocationServicesForSelfServiceMobileEnabled returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasLocationServicesForSelfServiceMobileEnabled() bool {
	if o != nil && !IsNil(o.LocationServicesForSelfServiceMobileEnabled) {
		return true
	}

	return false
}

// SetLocationServicesForSelfServiceMobileEnabled gets a reference to the given bool and assigns it to the LocationServicesForSelfServiceMobileEnabled field.
func (o *MobileDeviceIosGeneral) SetLocationServicesForSelfServiceMobileEnabled(v bool) {
	o.LocationServicesForSelfServiceMobileEnabled = &v
}

// GetItunesStoreAccountActive returns the ItunesStoreAccountActive field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetItunesStoreAccountActive() bool {
	if o == nil || IsNil(o.ItunesStoreAccountActive) {
		var ret bool
		return ret
	}
	return *o.ItunesStoreAccountActive
}

// GetItunesStoreAccountActiveOk returns a tuple with the ItunesStoreAccountActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetItunesStoreAccountActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.ItunesStoreAccountActive) {
		return nil, false
	}
	return o.ItunesStoreAccountActive, true
}

// HasItunesStoreAccountActive returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasItunesStoreAccountActive() bool {
	if o != nil && !IsNil(o.ItunesStoreAccountActive) {
		return true
	}

	return false
}

// SetItunesStoreAccountActive gets a reference to the given bool and assigns it to the ItunesStoreAccountActive field.
func (o *MobileDeviceIosGeneral) SetItunesStoreAccountActive(v bool) {
	o.ItunesStoreAccountActive = &v
}

// GetExchangeDeviceId returns the ExchangeDeviceId field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetExchangeDeviceId() string {
	if o == nil || IsNil(o.ExchangeDeviceId) {
		var ret string
		return ret
	}
	return *o.ExchangeDeviceId
}

// GetExchangeDeviceIdOk returns a tuple with the ExchangeDeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetExchangeDeviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExchangeDeviceId) {
		return nil, false
	}
	return o.ExchangeDeviceId, true
}

// HasExchangeDeviceId returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasExchangeDeviceId() bool {
	if o != nil && !IsNil(o.ExchangeDeviceId) {
		return true
	}

	return false
}

// SetExchangeDeviceId gets a reference to the given string and assigns it to the ExchangeDeviceId field.
func (o *MobileDeviceIosGeneral) SetExchangeDeviceId(v string) {
	o.ExchangeDeviceId = &v
}

// GetTethered returns the Tethered field value if set, zero value otherwise.
func (o *MobileDeviceIosGeneral) GetTethered() bool {
	if o == nil || IsNil(o.Tethered) {
		var ret bool
		return ret
	}
	return *o.Tethered
}

// GetTetheredOk returns a tuple with the Tethered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceIosGeneral) GetTetheredOk() (*bool, bool) {
	if o == nil || IsNil(o.Tethered) {
		return nil, false
	}
	return o.Tethered, true
}

// HasTethered returns a boolean if a field has been set.
func (o *MobileDeviceIosGeneral) HasTethered() bool {
	if o != nil && !IsNil(o.Tethered) {
		return true
	}

	return false
}

// SetTethered gets a reference to the given bool and assigns it to the Tethered field.
func (o *MobileDeviceIosGeneral) SetTethered(v bool) {
	o.Tethered = &v
}

func (o MobileDeviceIosGeneral) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MobileDeviceIosGeneral) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Udid) {
		toSerialize["udid"] = o.Udid
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.AssetTag) {
		toSerialize["assetTag"] = o.AssetTag
	}
	if !IsNil(o.SiteId) {
		toSerialize["siteId"] = o.SiteId
	}
	if !IsNil(o.LastInventoryUpdateDate) {
		toSerialize["lastInventoryUpdateDate"] = o.LastInventoryUpdateDate
	}
	if !IsNil(o.OsVersion) {
		toSerialize["osVersion"] = o.OsVersion
	}
	if !IsNil(o.OsRapidSecurityResponse) {
		toSerialize["osRapidSecurityResponse"] = o.OsRapidSecurityResponse
	}
	if !IsNil(o.OsBuild) {
		toSerialize["osBuild"] = o.OsBuild
	}
	if !IsNil(o.OsSupplementalBuildVersion) {
		toSerialize["osSupplementalBuildVersion"] = o.OsSupplementalBuildVersion
	}
	if !IsNil(o.SoftwareUpdateDeviceId) {
		toSerialize["softwareUpdateDeviceId"] = o.SoftwareUpdateDeviceId
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if !IsNil(o.Managed) {
		toSerialize["managed"] = o.Managed
	}
	if !IsNil(o.Supervised) {
		toSerialize["supervised"] = o.Supervised
	}
	if !IsNil(o.DeviceOwnershipType) {
		toSerialize["deviceOwnershipType"] = o.DeviceOwnershipType
	}
	if !IsNil(o.EnrollmentMethodPrestage) {
		toSerialize["enrollmentMethodPrestage"] = o.EnrollmentMethodPrestage
	}
	if !IsNil(o.EnrollmentSessionTokenValid) {
		toSerialize["enrollmentSessionTokenValid"] = o.EnrollmentSessionTokenValid
	}
	if !IsNil(o.LastEnrolledDate) {
		toSerialize["lastEnrolledDate"] = o.LastEnrolledDate
	}
	if !IsNil(o.MdmProfileExpirationDate) {
		toSerialize["mdmProfileExpirationDate"] = o.MdmProfileExpirationDate
	}
	if !IsNil(o.TimeZone) {
		toSerialize["timeZone"] = o.TimeZone
	}
	if !IsNil(o.DeclarativeDeviceManagementEnabled) {
		toSerialize["declarativeDeviceManagementEnabled"] = o.DeclarativeDeviceManagementEnabled
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extensionAttributes"] = o.ExtensionAttributes
	}
	if !IsNil(o.SharedIpad) {
		toSerialize["sharedIpad"] = o.SharedIpad
	}
	if !IsNil(o.DiagnosticAndUsageReportingEnabled) {
		toSerialize["diagnosticAndUsageReportingEnabled"] = o.DiagnosticAndUsageReportingEnabled
	}
	if !IsNil(o.AppAnalyticsEnabled) {
		toSerialize["appAnalyticsEnabled"] = o.AppAnalyticsEnabled
	}
	if !IsNil(o.ResidentUsers) {
		toSerialize["residentUsers"] = o.ResidentUsers
	}
	if !IsNil(o.QuotaSize) {
		toSerialize["quotaSize"] = o.QuotaSize
	}
	if !IsNil(o.TemporarySessionOnly) {
		toSerialize["temporarySessionOnly"] = o.TemporarySessionOnly
	}
	if !IsNil(o.TemporarySessionTimeout) {
		toSerialize["temporarySessionTimeout"] = o.TemporarySessionTimeout
	}
	if !IsNil(o.UserSessionTimeout) {
		toSerialize["userSessionTimeout"] = o.UserSessionTimeout
	}
	if !IsNil(o.SyncedToComputer) {
		toSerialize["syncedToComputer"] = o.SyncedToComputer
	}
	if !IsNil(o.MaximumSharediPadUsersStored) {
		toSerialize["maximumSharediPadUsersStored"] = o.MaximumSharediPadUsersStored
	}
	if !IsNil(o.LastBackupDate) {
		toSerialize["lastBackupDate"] = o.LastBackupDate
	}
	if !IsNil(o.DeviceLocatorServiceEnabled) {
		toSerialize["deviceLocatorServiceEnabled"] = o.DeviceLocatorServiceEnabled
	}
	if !IsNil(o.DoNotDisturbEnabled) {
		toSerialize["doNotDisturbEnabled"] = o.DoNotDisturbEnabled
	}
	if !IsNil(o.CloudBackupEnabled) {
		toSerialize["cloudBackupEnabled"] = o.CloudBackupEnabled
	}
	if !IsNil(o.LastCloudBackupDate) {
		toSerialize["lastCloudBackupDate"] = o.LastCloudBackupDate
	}
	if !IsNil(o.LocationServicesForSelfServiceMobileEnabled) {
		toSerialize["locationServicesForSelfServiceMobileEnabled"] = o.LocationServicesForSelfServiceMobileEnabled
	}
	if !IsNil(o.ItunesStoreAccountActive) {
		toSerialize["itunesStoreAccountActive"] = o.ItunesStoreAccountActive
	}
	if !IsNil(o.ExchangeDeviceId) {
		toSerialize["exchangeDeviceId"] = o.ExchangeDeviceId
	}
	if !IsNil(o.Tethered) {
		toSerialize["tethered"] = o.Tethered
	}
	return toSerialize, nil
}

type NullableMobileDeviceIosGeneral struct {
	value *MobileDeviceIosGeneral
	isSet bool
}

func (v NullableMobileDeviceIosGeneral) Get() *MobileDeviceIosGeneral {
	return v.value
}

func (v *NullableMobileDeviceIosGeneral) Set(val *MobileDeviceIosGeneral) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileDeviceIosGeneral) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileDeviceIosGeneral) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileDeviceIosGeneral(val *MobileDeviceIosGeneral) *NullableMobileDeviceIosGeneral {
	return &NullableMobileDeviceIosGeneral{value: val, isSet: true}
}

func (v NullableMobileDeviceIosGeneral) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileDeviceIosGeneral) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


