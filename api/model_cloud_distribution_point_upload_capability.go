/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the CloudDistributionPointUploadCapability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudDistributionPointUploadCapability{}

// CloudDistributionPointUploadCapability struct for CloudDistributionPointUploadCapability
type CloudDistributionPointUploadCapability struct {
	PrincipalDistributionTechnology *bool `json:"principalDistributionTechnology,omitempty"`
	DirectUploadCapable *bool `json:"directUploadCapable,omitempty"`
}

// NewCloudDistributionPointUploadCapability instantiates a new CloudDistributionPointUploadCapability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudDistributionPointUploadCapability() *CloudDistributionPointUploadCapability {
	this := CloudDistributionPointUploadCapability{}
	var principalDistributionTechnology bool = false
	this.PrincipalDistributionTechnology = &principalDistributionTechnology
	var directUploadCapable bool = false
	this.DirectUploadCapable = &directUploadCapable
	return &this
}

// NewCloudDistributionPointUploadCapabilityWithDefaults instantiates a new CloudDistributionPointUploadCapability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudDistributionPointUploadCapabilityWithDefaults() *CloudDistributionPointUploadCapability {
	this := CloudDistributionPointUploadCapability{}
	var principalDistributionTechnology bool = false
	this.PrincipalDistributionTechnology = &principalDistributionTechnology
	var directUploadCapable bool = false
	this.DirectUploadCapable = &directUploadCapable
	return &this
}

// GetPrincipalDistributionTechnology returns the PrincipalDistributionTechnology field value if set, zero value otherwise.
func (o *CloudDistributionPointUploadCapability) GetPrincipalDistributionTechnology() bool {
	if o == nil || IsNil(o.PrincipalDistributionTechnology) {
		var ret bool
		return ret
	}
	return *o.PrincipalDistributionTechnology
}

// GetPrincipalDistributionTechnologyOk returns a tuple with the PrincipalDistributionTechnology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudDistributionPointUploadCapability) GetPrincipalDistributionTechnologyOk() (*bool, bool) {
	if o == nil || IsNil(o.PrincipalDistributionTechnology) {
		return nil, false
	}
	return o.PrincipalDistributionTechnology, true
}

// HasPrincipalDistributionTechnology returns a boolean if a field has been set.
func (o *CloudDistributionPointUploadCapability) HasPrincipalDistributionTechnology() bool {
	if o != nil && !IsNil(o.PrincipalDistributionTechnology) {
		return true
	}

	return false
}

// SetPrincipalDistributionTechnology gets a reference to the given bool and assigns it to the PrincipalDistributionTechnology field.
func (o *CloudDistributionPointUploadCapability) SetPrincipalDistributionTechnology(v bool) {
	o.PrincipalDistributionTechnology = &v
}

// GetDirectUploadCapable returns the DirectUploadCapable field value if set, zero value otherwise.
func (o *CloudDistributionPointUploadCapability) GetDirectUploadCapable() bool {
	if o == nil || IsNil(o.DirectUploadCapable) {
		var ret bool
		return ret
	}
	return *o.DirectUploadCapable
}

// GetDirectUploadCapableOk returns a tuple with the DirectUploadCapable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudDistributionPointUploadCapability) GetDirectUploadCapableOk() (*bool, bool) {
	if o == nil || IsNil(o.DirectUploadCapable) {
		return nil, false
	}
	return o.DirectUploadCapable, true
}

// HasDirectUploadCapable returns a boolean if a field has been set.
func (o *CloudDistributionPointUploadCapability) HasDirectUploadCapable() bool {
	if o != nil && !IsNil(o.DirectUploadCapable) {
		return true
	}

	return false
}

// SetDirectUploadCapable gets a reference to the given bool and assigns it to the DirectUploadCapable field.
func (o *CloudDistributionPointUploadCapability) SetDirectUploadCapable(v bool) {
	o.DirectUploadCapable = &v
}

func (o CloudDistributionPointUploadCapability) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudDistributionPointUploadCapability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PrincipalDistributionTechnology) {
		toSerialize["principalDistributionTechnology"] = o.PrincipalDistributionTechnology
	}
	if !IsNil(o.DirectUploadCapable) {
		toSerialize["directUploadCapable"] = o.DirectUploadCapable
	}
	return toSerialize, nil
}

type NullableCloudDistributionPointUploadCapability struct {
	value *CloudDistributionPointUploadCapability
	isSet bool
}

func (v NullableCloudDistributionPointUploadCapability) Get() *CloudDistributionPointUploadCapability {
	return v.value
}

func (v *NullableCloudDistributionPointUploadCapability) Set(val *CloudDistributionPointUploadCapability) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudDistributionPointUploadCapability) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudDistributionPointUploadCapability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudDistributionPointUploadCapability(val *CloudDistributionPointUploadCapability) *NullableCloudDistributionPointUploadCapability {
	return &NullableCloudDistributionPointUploadCapability{value: val, isSet: true}
}

func (v NullableCloudDistributionPointUploadCapability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudDistributionPointUploadCapability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


