/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// MobileDeviceDetailsGetV2AllOf struct for MobileDeviceDetailsGetV2AllOf
type MobileDeviceDetailsGetV2AllOf struct {
	ManagementId *string `json:"managementId,omitempty"`
}

// NewMobileDeviceDetailsGetV2AllOf instantiates a new MobileDeviceDetailsGetV2AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileDeviceDetailsGetV2AllOf() *MobileDeviceDetailsGetV2AllOf {
	this := MobileDeviceDetailsGetV2AllOf{}
	return &this
}

// NewMobileDeviceDetailsGetV2AllOfWithDefaults instantiates a new MobileDeviceDetailsGetV2AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileDeviceDetailsGetV2AllOfWithDefaults() *MobileDeviceDetailsGetV2AllOf {
	this := MobileDeviceDetailsGetV2AllOf{}
	return &this
}

// GetManagementId returns the ManagementId field value if set, zero value otherwise.
func (o *MobileDeviceDetailsGetV2AllOf) GetManagementId() string {
	if o == nil || o.ManagementId == nil {
		var ret string
		return ret
	}
	return *o.ManagementId
}

// GetManagementIdOk returns a tuple with the ManagementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsGetV2AllOf) GetManagementIdOk() (*string, bool) {
	if o == nil || o.ManagementId == nil {
		return nil, false
	}
	return o.ManagementId, true
}

// HasManagementId returns a boolean if a field has been set.
func (o *MobileDeviceDetailsGetV2AllOf) HasManagementId() bool {
	if o != nil && o.ManagementId != nil {
		return true
	}

	return false
}

// SetManagementId gets a reference to the given string and assigns it to the ManagementId field.
func (o *MobileDeviceDetailsGetV2AllOf) SetManagementId(v string) {
	o.ManagementId = &v
}

func (o MobileDeviceDetailsGetV2AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ManagementId != nil {
		toSerialize["managementId"] = o.ManagementId
	}
	return json.Marshal(toSerialize)
}

type NullableMobileDeviceDetailsGetV2AllOf struct {
	value *MobileDeviceDetailsGetV2AllOf
	isSet bool
}

func (v NullableMobileDeviceDetailsGetV2AllOf) Get() *MobileDeviceDetailsGetV2AllOf {
	return v.value
}

func (v *NullableMobileDeviceDetailsGetV2AllOf) Set(val *MobileDeviceDetailsGetV2AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileDeviceDetailsGetV2AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileDeviceDetailsGetV2AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileDeviceDetailsGetV2AllOf(val *MobileDeviceDetailsGetV2AllOf) *NullableMobileDeviceDetailsGetV2AllOf {
	return &NullableMobileDeviceDetailsGetV2AllOf{value: val, isSet: true}
}

func (v NullableMobileDeviceDetailsGetV2AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileDeviceDetailsGetV2AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


