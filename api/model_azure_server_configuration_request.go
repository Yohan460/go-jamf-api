/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the AzureServerConfigurationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureServerConfigurationRequest{}

// AzureServerConfigurationRequest Azure Cloud Identity Provider configuration request
type AzureServerConfigurationRequest struct {
	Id *string `json:"id,omitempty"`
	TenantId string `json:"tenantId"`
	Enabled bool `json:"enabled"`
	Mappings AzureMappings `json:"mappings"`
	SearchTimeout int32 `json:"searchTimeout"`
	// Use this field to enable transitive membership lookup with Single Sign On
	TransitiveMembershipEnabled bool `json:"transitiveMembershipEnabled"`
	// Use this field to set user field mapping for transitive membership lookup with Single Sign On
	TransitiveMembershipUserField string `json:"transitiveMembershipUserField"`
	// Use this field to enable transitive membership lookup. This setting would not apply to Single Sign On
	TransitiveDirectoryMembershipEnabled bool `json:"transitiveDirectoryMembershipEnabled"`
	// Use this field to enable membership calculation optimization. This setting would not apply to Single Sign On
	MembershipCalculationOptimizationEnabled *bool `json:"membershipCalculationOptimizationEnabled,omitempty"`
	Code string `json:"code"`
}

// NewAzureServerConfigurationRequest instantiates a new AzureServerConfigurationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureServerConfigurationRequest(tenantId string, enabled bool, mappings AzureMappings, searchTimeout int32, transitiveMembershipEnabled bool, transitiveMembershipUserField string, transitiveDirectoryMembershipEnabled bool, code string) *AzureServerConfigurationRequest {
	this := AzureServerConfigurationRequest{}
	this.TenantId = tenantId
	this.Enabled = enabled
	this.Mappings = mappings
	this.SearchTimeout = searchTimeout
	this.TransitiveMembershipEnabled = transitiveMembershipEnabled
	this.TransitiveMembershipUserField = transitiveMembershipUserField
	this.TransitiveDirectoryMembershipEnabled = transitiveDirectoryMembershipEnabled
	this.Code = code
	return &this
}

// NewAzureServerConfigurationRequestWithDefaults instantiates a new AzureServerConfigurationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureServerConfigurationRequestWithDefaults() *AzureServerConfigurationRequest {
	this := AzureServerConfigurationRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AzureServerConfigurationRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureServerConfigurationRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AzureServerConfigurationRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AzureServerConfigurationRequest) SetId(v string) {
	o.Id = &v
}

// GetTenantId returns the TenantId field value
func (o *AzureServerConfigurationRequest) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *AzureServerConfigurationRequest) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *AzureServerConfigurationRequest) SetTenantId(v string) {
	o.TenantId = v
}

// GetEnabled returns the Enabled field value
func (o *AzureServerConfigurationRequest) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *AzureServerConfigurationRequest) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *AzureServerConfigurationRequest) SetEnabled(v bool) {
	o.Enabled = v
}

// GetMappings returns the Mappings field value
func (o *AzureServerConfigurationRequest) GetMappings() AzureMappings {
	if o == nil {
		var ret AzureMappings
		return ret
	}

	return o.Mappings
}

// GetMappingsOk returns a tuple with the Mappings field value
// and a boolean to check if the value has been set.
func (o *AzureServerConfigurationRequest) GetMappingsOk() (*AzureMappings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mappings, true
}

// SetMappings sets field value
func (o *AzureServerConfigurationRequest) SetMappings(v AzureMappings) {
	o.Mappings = v
}

// GetSearchTimeout returns the SearchTimeout field value
func (o *AzureServerConfigurationRequest) GetSearchTimeout() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SearchTimeout
}

// GetSearchTimeoutOk returns a tuple with the SearchTimeout field value
// and a boolean to check if the value has been set.
func (o *AzureServerConfigurationRequest) GetSearchTimeoutOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SearchTimeout, true
}

// SetSearchTimeout sets field value
func (o *AzureServerConfigurationRequest) SetSearchTimeout(v int32) {
	o.SearchTimeout = v
}

// GetTransitiveMembershipEnabled returns the TransitiveMembershipEnabled field value
func (o *AzureServerConfigurationRequest) GetTransitiveMembershipEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.TransitiveMembershipEnabled
}

// GetTransitiveMembershipEnabledOk returns a tuple with the TransitiveMembershipEnabled field value
// and a boolean to check if the value has been set.
func (o *AzureServerConfigurationRequest) GetTransitiveMembershipEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransitiveMembershipEnabled, true
}

// SetTransitiveMembershipEnabled sets field value
func (o *AzureServerConfigurationRequest) SetTransitiveMembershipEnabled(v bool) {
	o.TransitiveMembershipEnabled = v
}

// GetTransitiveMembershipUserField returns the TransitiveMembershipUserField field value
func (o *AzureServerConfigurationRequest) GetTransitiveMembershipUserField() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransitiveMembershipUserField
}

// GetTransitiveMembershipUserFieldOk returns a tuple with the TransitiveMembershipUserField field value
// and a boolean to check if the value has been set.
func (o *AzureServerConfigurationRequest) GetTransitiveMembershipUserFieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransitiveMembershipUserField, true
}

// SetTransitiveMembershipUserField sets field value
func (o *AzureServerConfigurationRequest) SetTransitiveMembershipUserField(v string) {
	o.TransitiveMembershipUserField = v
}

// GetTransitiveDirectoryMembershipEnabled returns the TransitiveDirectoryMembershipEnabled field value
func (o *AzureServerConfigurationRequest) GetTransitiveDirectoryMembershipEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.TransitiveDirectoryMembershipEnabled
}

// GetTransitiveDirectoryMembershipEnabledOk returns a tuple with the TransitiveDirectoryMembershipEnabled field value
// and a boolean to check if the value has been set.
func (o *AzureServerConfigurationRequest) GetTransitiveDirectoryMembershipEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransitiveDirectoryMembershipEnabled, true
}

// SetTransitiveDirectoryMembershipEnabled sets field value
func (o *AzureServerConfigurationRequest) SetTransitiveDirectoryMembershipEnabled(v bool) {
	o.TransitiveDirectoryMembershipEnabled = v
}

// GetMembershipCalculationOptimizationEnabled returns the MembershipCalculationOptimizationEnabled field value if set, zero value otherwise.
func (o *AzureServerConfigurationRequest) GetMembershipCalculationOptimizationEnabled() bool {
	if o == nil || IsNil(o.MembershipCalculationOptimizationEnabled) {
		var ret bool
		return ret
	}
	return *o.MembershipCalculationOptimizationEnabled
}

// GetMembershipCalculationOptimizationEnabledOk returns a tuple with the MembershipCalculationOptimizationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureServerConfigurationRequest) GetMembershipCalculationOptimizationEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.MembershipCalculationOptimizationEnabled) {
		return nil, false
	}
	return o.MembershipCalculationOptimizationEnabled, true
}

// HasMembershipCalculationOptimizationEnabled returns a boolean if a field has been set.
func (o *AzureServerConfigurationRequest) HasMembershipCalculationOptimizationEnabled() bool {
	if o != nil && !IsNil(o.MembershipCalculationOptimizationEnabled) {
		return true
	}

	return false
}

// SetMembershipCalculationOptimizationEnabled gets a reference to the given bool and assigns it to the MembershipCalculationOptimizationEnabled field.
func (o *AzureServerConfigurationRequest) SetMembershipCalculationOptimizationEnabled(v bool) {
	o.MembershipCalculationOptimizationEnabled = &v
}

// GetCode returns the Code field value
func (o *AzureServerConfigurationRequest) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *AzureServerConfigurationRequest) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *AzureServerConfigurationRequest) SetCode(v string) {
	o.Code = v
}

func (o AzureServerConfigurationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureServerConfigurationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["tenantId"] = o.TenantId
	toSerialize["enabled"] = o.Enabled
	toSerialize["mappings"] = o.Mappings
	toSerialize["searchTimeout"] = o.SearchTimeout
	toSerialize["transitiveMembershipEnabled"] = o.TransitiveMembershipEnabled
	toSerialize["transitiveMembershipUserField"] = o.TransitiveMembershipUserField
	toSerialize["transitiveDirectoryMembershipEnabled"] = o.TransitiveDirectoryMembershipEnabled
	if !IsNil(o.MembershipCalculationOptimizationEnabled) {
		toSerialize["membershipCalculationOptimizationEnabled"] = o.MembershipCalculationOptimizationEnabled
	}
	toSerialize["code"] = o.Code
	return toSerialize, nil
}

type NullableAzureServerConfigurationRequest struct {
	value *AzureServerConfigurationRequest
	isSet bool
}

func (v NullableAzureServerConfigurationRequest) Get() *AzureServerConfigurationRequest {
	return v.value
}

func (v *NullableAzureServerConfigurationRequest) Set(val *AzureServerConfigurationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureServerConfigurationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureServerConfigurationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureServerConfigurationRequest(val *AzureServerConfigurationRequest) *NullableAzureServerConfigurationRequest {
	return &NullableAzureServerConfigurationRequest{value: val, isSet: true}
}

func (v NullableAzureServerConfigurationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureServerConfigurationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


