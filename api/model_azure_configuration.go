/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// AzureConfiguration A Cloud Identity Provider Azure configuration for responses
type AzureConfiguration struct {
	CloudIdPCommon CloudIdPCommon `json:"cloudIdPCommon"`
	Server AzureServerConfiguration `json:"server"`
}

// NewAzureConfiguration instantiates a new AzureConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureConfiguration(cloudIdPCommon CloudIdPCommon, server AzureServerConfiguration) *AzureConfiguration {
	this := AzureConfiguration{}
	this.CloudIdPCommon = cloudIdPCommon
	this.Server = server
	return &this
}

// NewAzureConfigurationWithDefaults instantiates a new AzureConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureConfigurationWithDefaults() *AzureConfiguration {
	this := AzureConfiguration{}
	return &this
}

// GetCloudIdPCommon returns the CloudIdPCommon field value
func (o *AzureConfiguration) GetCloudIdPCommon() CloudIdPCommon {
	if o == nil {
		var ret CloudIdPCommon
		return ret
	}

	return o.CloudIdPCommon
}

// GetCloudIdPCommonOk returns a tuple with the CloudIdPCommon field value
// and a boolean to check if the value has been set.
func (o *AzureConfiguration) GetCloudIdPCommonOk() (*CloudIdPCommon, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudIdPCommon, true
}

// SetCloudIdPCommon sets field value
func (o *AzureConfiguration) SetCloudIdPCommon(v CloudIdPCommon) {
	o.CloudIdPCommon = v
}

// GetServer returns the Server field value
func (o *AzureConfiguration) GetServer() AzureServerConfiguration {
	if o == nil {
		var ret AzureServerConfiguration
		return ret
	}

	return o.Server
}

// GetServerOk returns a tuple with the Server field value
// and a boolean to check if the value has been set.
func (o *AzureConfiguration) GetServerOk() (*AzureServerConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Server, true
}

// SetServer sets field value
func (o *AzureConfiguration) SetServer(v AzureServerConfiguration) {
	o.Server = v
}

func (o AzureConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cloudIdPCommon"] = o.CloudIdPCommon
	}
	if true {
		toSerialize["server"] = o.Server
	}
	return json.Marshal(toSerialize)
}

type NullableAzureConfiguration struct {
	value *AzureConfiguration
	isSet bool
}

func (v NullableAzureConfiguration) Get() *AzureConfiguration {
	return v.value
}

func (v *NullableAzureConfiguration) Set(val *AzureConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureConfiguration(val *AzureConfiguration) *NullableAzureConfiguration {
	return &NullableAzureConfiguration{value: val, isSet: true}
}

func (v NullableAzureConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


