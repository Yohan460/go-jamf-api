/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SharedDeviceConfiguration struct for SharedDeviceConfiguration
type SharedDeviceConfiguration struct {
	QuotaSize *int32 `json:"quotaSize,omitempty"`
	ResidentUsers *int32 `json:"residentUsers,omitempty"`
}

// NewSharedDeviceConfiguration instantiates a new SharedDeviceConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSharedDeviceConfiguration() *SharedDeviceConfiguration {
	this := SharedDeviceConfiguration{}
	return &this
}

// NewSharedDeviceConfigurationWithDefaults instantiates a new SharedDeviceConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSharedDeviceConfigurationWithDefaults() *SharedDeviceConfiguration {
	this := SharedDeviceConfiguration{}
	return &this
}

// GetQuotaSize returns the QuotaSize field value if set, zero value otherwise.
func (o *SharedDeviceConfiguration) GetQuotaSize() int32 {
	if o == nil || o.QuotaSize == nil {
		var ret int32
		return ret
	}
	return *o.QuotaSize
}

// GetQuotaSizeOk returns a tuple with the QuotaSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedDeviceConfiguration) GetQuotaSizeOk() (*int32, bool) {
	if o == nil || o.QuotaSize == nil {
		return nil, false
	}
	return o.QuotaSize, true
}

// HasQuotaSize returns a boolean if a field has been set.
func (o *SharedDeviceConfiguration) HasQuotaSize() bool {
	if o != nil && o.QuotaSize != nil {
		return true
	}

	return false
}

// SetQuotaSize gets a reference to the given int32 and assigns it to the QuotaSize field.
func (o *SharedDeviceConfiguration) SetQuotaSize(v int32) {
	o.QuotaSize = &v
}

// GetResidentUsers returns the ResidentUsers field value if set, zero value otherwise.
func (o *SharedDeviceConfiguration) GetResidentUsers() int32 {
	if o == nil || o.ResidentUsers == nil {
		var ret int32
		return ret
	}
	return *o.ResidentUsers
}

// GetResidentUsersOk returns a tuple with the ResidentUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedDeviceConfiguration) GetResidentUsersOk() (*int32, bool) {
	if o == nil || o.ResidentUsers == nil {
		return nil, false
	}
	return o.ResidentUsers, true
}

// HasResidentUsers returns a boolean if a field has been set.
func (o *SharedDeviceConfiguration) HasResidentUsers() bool {
	if o != nil && o.ResidentUsers != nil {
		return true
	}

	return false
}

// SetResidentUsers gets a reference to the given int32 and assigns it to the ResidentUsers field.
func (o *SharedDeviceConfiguration) SetResidentUsers(v int32) {
	o.ResidentUsers = &v
}

func (o SharedDeviceConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.QuotaSize != nil {
		toSerialize["quotaSize"] = o.QuotaSize
	}
	if o.ResidentUsers != nil {
		toSerialize["residentUsers"] = o.ResidentUsers
	}
	return json.Marshal(toSerialize)
}

type NullableSharedDeviceConfiguration struct {
	value *SharedDeviceConfiguration
	isSet bool
}

func (v NullableSharedDeviceConfiguration) Get() *SharedDeviceConfiguration {
	return v.value
}

func (v *NullableSharedDeviceConfiguration) Set(val *SharedDeviceConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableSharedDeviceConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableSharedDeviceConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSharedDeviceConfiguration(val *SharedDeviceConfiguration) *NullableSharedDeviceConfiguration {
	return &NullableSharedDeviceConfiguration{value: val, isSet: true}
}

func (v NullableSharedDeviceConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSharedDeviceConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


