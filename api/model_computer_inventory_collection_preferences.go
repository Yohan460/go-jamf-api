/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ComputerInventoryCollectionPreferences struct for ComputerInventoryCollectionPreferences
type ComputerInventoryCollectionPreferences struct {
	MonitorApplicationUsage *bool `json:"monitorApplicationUsage,omitempty"`
	IncludeFonts *bool `json:"includeFonts,omitempty"`
	IncludePlugins *bool `json:"includePlugins,omitempty"`
	IncludePackages *bool `json:"includePackages,omitempty"`
	IncludeSoftwareUpdates *bool `json:"includeSoftwareUpdates,omitempty"`
	IncludeAccounts *bool `json:"includeAccounts,omitempty"`
	CalculateSizes *bool `json:"calculateSizes,omitempty"`
	IncludeHiddenAccounts *bool `json:"includeHiddenAccounts,omitempty"`
	IncludePrinters *bool `json:"includePrinters,omitempty"`
	IncludeServices *bool `json:"includeServices,omitempty"`
	CollectSyncedMobileDeviceInfo *bool `json:"collectSyncedMobileDeviceInfo,omitempty"`
	UpdateLdapInfoOnComputerInventorySubmissions *bool `json:"updateLdapInfoOnComputerInventorySubmissions,omitempty"`
	MonitorBeacons *bool `json:"monitorBeacons,omitempty"`
	AllowChangingUserAndLocation *bool `json:"allowChangingUserAndLocation,omitempty"`
	UseUnixUserPaths *bool `json:"useUnixUserPaths,omitempty"`
}

// NewComputerInventoryCollectionPreferences instantiates a new ComputerInventoryCollectionPreferences object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComputerInventoryCollectionPreferences() *ComputerInventoryCollectionPreferences {
	this := ComputerInventoryCollectionPreferences{}
	var monitorApplicationUsage bool = false
	this.MonitorApplicationUsage = &monitorApplicationUsage
	var includeFonts bool = false
	this.IncludeFonts = &includeFonts
	var includePlugins bool = false
	this.IncludePlugins = &includePlugins
	var includePackages bool = false
	this.IncludePackages = &includePackages
	var includeSoftwareUpdates bool = false
	this.IncludeSoftwareUpdates = &includeSoftwareUpdates
	var includeAccounts bool = false
	this.IncludeAccounts = &includeAccounts
	var calculateSizes bool = false
	this.CalculateSizes = &calculateSizes
	var includeHiddenAccounts bool = false
	this.IncludeHiddenAccounts = &includeHiddenAccounts
	var includePrinters bool = false
	this.IncludePrinters = &includePrinters
	var includeServices bool = false
	this.IncludeServices = &includeServices
	var collectSyncedMobileDeviceInfo bool = false
	this.CollectSyncedMobileDeviceInfo = &collectSyncedMobileDeviceInfo
	var updateLdapInfoOnComputerInventorySubmissions bool = false
	this.UpdateLdapInfoOnComputerInventorySubmissions = &updateLdapInfoOnComputerInventorySubmissions
	var monitorBeacons bool = false
	this.MonitorBeacons = &monitorBeacons
	var allowChangingUserAndLocation bool = true
	this.AllowChangingUserAndLocation = &allowChangingUserAndLocation
	var useUnixUserPaths bool = true
	this.UseUnixUserPaths = &useUnixUserPaths
	return &this
}

// NewComputerInventoryCollectionPreferencesWithDefaults instantiates a new ComputerInventoryCollectionPreferences object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComputerInventoryCollectionPreferencesWithDefaults() *ComputerInventoryCollectionPreferences {
	this := ComputerInventoryCollectionPreferences{}
	var monitorApplicationUsage bool = false
	this.MonitorApplicationUsage = &monitorApplicationUsage
	var includeFonts bool = false
	this.IncludeFonts = &includeFonts
	var includePlugins bool = false
	this.IncludePlugins = &includePlugins
	var includePackages bool = false
	this.IncludePackages = &includePackages
	var includeSoftwareUpdates bool = false
	this.IncludeSoftwareUpdates = &includeSoftwareUpdates
	var includeAccounts bool = false
	this.IncludeAccounts = &includeAccounts
	var calculateSizes bool = false
	this.CalculateSizes = &calculateSizes
	var includeHiddenAccounts bool = false
	this.IncludeHiddenAccounts = &includeHiddenAccounts
	var includePrinters bool = false
	this.IncludePrinters = &includePrinters
	var includeServices bool = false
	this.IncludeServices = &includeServices
	var collectSyncedMobileDeviceInfo bool = false
	this.CollectSyncedMobileDeviceInfo = &collectSyncedMobileDeviceInfo
	var updateLdapInfoOnComputerInventorySubmissions bool = false
	this.UpdateLdapInfoOnComputerInventorySubmissions = &updateLdapInfoOnComputerInventorySubmissions
	var monitorBeacons bool = false
	this.MonitorBeacons = &monitorBeacons
	var allowChangingUserAndLocation bool = true
	this.AllowChangingUserAndLocation = &allowChangingUserAndLocation
	var useUnixUserPaths bool = true
	this.UseUnixUserPaths = &useUnixUserPaths
	return &this
}

// GetMonitorApplicationUsage returns the MonitorApplicationUsage field value if set, zero value otherwise.
func (o *ComputerInventoryCollectionPreferences) GetMonitorApplicationUsage() bool {
	if o == nil || o.MonitorApplicationUsage == nil {
		var ret bool
		return ret
	}
	return *o.MonitorApplicationUsage
}

// GetMonitorApplicationUsageOk returns a tuple with the MonitorApplicationUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryCollectionPreferences) GetMonitorApplicationUsageOk() (*bool, bool) {
	if o == nil || o.MonitorApplicationUsage == nil {
		return nil, false
	}
	return o.MonitorApplicationUsage, true
}

// HasMonitorApplicationUsage returns a boolean if a field has been set.
func (o *ComputerInventoryCollectionPreferences) HasMonitorApplicationUsage() bool {
	if o != nil && o.MonitorApplicationUsage != nil {
		return true
	}

	return false
}

// SetMonitorApplicationUsage gets a reference to the given bool and assigns it to the MonitorApplicationUsage field.
func (o *ComputerInventoryCollectionPreferences) SetMonitorApplicationUsage(v bool) {
	o.MonitorApplicationUsage = &v
}

// GetIncludeFonts returns the IncludeFonts field value if set, zero value otherwise.
func (o *ComputerInventoryCollectionPreferences) GetIncludeFonts() bool {
	if o == nil || o.IncludeFonts == nil {
		var ret bool
		return ret
	}
	return *o.IncludeFonts
}

// GetIncludeFontsOk returns a tuple with the IncludeFonts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryCollectionPreferences) GetIncludeFontsOk() (*bool, bool) {
	if o == nil || o.IncludeFonts == nil {
		return nil, false
	}
	return o.IncludeFonts, true
}

// HasIncludeFonts returns a boolean if a field has been set.
func (o *ComputerInventoryCollectionPreferences) HasIncludeFonts() bool {
	if o != nil && o.IncludeFonts != nil {
		return true
	}

	return false
}

// SetIncludeFonts gets a reference to the given bool and assigns it to the IncludeFonts field.
func (o *ComputerInventoryCollectionPreferences) SetIncludeFonts(v bool) {
	o.IncludeFonts = &v
}

// GetIncludePlugins returns the IncludePlugins field value if set, zero value otherwise.
func (o *ComputerInventoryCollectionPreferences) GetIncludePlugins() bool {
	if o == nil || o.IncludePlugins == nil {
		var ret bool
		return ret
	}
	return *o.IncludePlugins
}

// GetIncludePluginsOk returns a tuple with the IncludePlugins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryCollectionPreferences) GetIncludePluginsOk() (*bool, bool) {
	if o == nil || o.IncludePlugins == nil {
		return nil, false
	}
	return o.IncludePlugins, true
}

// HasIncludePlugins returns a boolean if a field has been set.
func (o *ComputerInventoryCollectionPreferences) HasIncludePlugins() bool {
	if o != nil && o.IncludePlugins != nil {
		return true
	}

	return false
}

// SetIncludePlugins gets a reference to the given bool and assigns it to the IncludePlugins field.
func (o *ComputerInventoryCollectionPreferences) SetIncludePlugins(v bool) {
	o.IncludePlugins = &v
}

// GetIncludePackages returns the IncludePackages field value if set, zero value otherwise.
func (o *ComputerInventoryCollectionPreferences) GetIncludePackages() bool {
	if o == nil || o.IncludePackages == nil {
		var ret bool
		return ret
	}
	return *o.IncludePackages
}

// GetIncludePackagesOk returns a tuple with the IncludePackages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryCollectionPreferences) GetIncludePackagesOk() (*bool, bool) {
	if o == nil || o.IncludePackages == nil {
		return nil, false
	}
	return o.IncludePackages, true
}

// HasIncludePackages returns a boolean if a field has been set.
func (o *ComputerInventoryCollectionPreferences) HasIncludePackages() bool {
	if o != nil && o.IncludePackages != nil {
		return true
	}

	return false
}

// SetIncludePackages gets a reference to the given bool and assigns it to the IncludePackages field.
func (o *ComputerInventoryCollectionPreferences) SetIncludePackages(v bool) {
	o.IncludePackages = &v
}

// GetIncludeSoftwareUpdates returns the IncludeSoftwareUpdates field value if set, zero value otherwise.
func (o *ComputerInventoryCollectionPreferences) GetIncludeSoftwareUpdates() bool {
	if o == nil || o.IncludeSoftwareUpdates == nil {
		var ret bool
		return ret
	}
	return *o.IncludeSoftwareUpdates
}

// GetIncludeSoftwareUpdatesOk returns a tuple with the IncludeSoftwareUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryCollectionPreferences) GetIncludeSoftwareUpdatesOk() (*bool, bool) {
	if o == nil || o.IncludeSoftwareUpdates == nil {
		return nil, false
	}
	return o.IncludeSoftwareUpdates, true
}

// HasIncludeSoftwareUpdates returns a boolean if a field has been set.
func (o *ComputerInventoryCollectionPreferences) HasIncludeSoftwareUpdates() bool {
	if o != nil && o.IncludeSoftwareUpdates != nil {
		return true
	}

	return false
}

// SetIncludeSoftwareUpdates gets a reference to the given bool and assigns it to the IncludeSoftwareUpdates field.
func (o *ComputerInventoryCollectionPreferences) SetIncludeSoftwareUpdates(v bool) {
	o.IncludeSoftwareUpdates = &v
}

// GetIncludeAccounts returns the IncludeAccounts field value if set, zero value otherwise.
func (o *ComputerInventoryCollectionPreferences) GetIncludeAccounts() bool {
	if o == nil || o.IncludeAccounts == nil {
		var ret bool
		return ret
	}
	return *o.IncludeAccounts
}

// GetIncludeAccountsOk returns a tuple with the IncludeAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryCollectionPreferences) GetIncludeAccountsOk() (*bool, bool) {
	if o == nil || o.IncludeAccounts == nil {
		return nil, false
	}
	return o.IncludeAccounts, true
}

// HasIncludeAccounts returns a boolean if a field has been set.
func (o *ComputerInventoryCollectionPreferences) HasIncludeAccounts() bool {
	if o != nil && o.IncludeAccounts != nil {
		return true
	}

	return false
}

// SetIncludeAccounts gets a reference to the given bool and assigns it to the IncludeAccounts field.
func (o *ComputerInventoryCollectionPreferences) SetIncludeAccounts(v bool) {
	o.IncludeAccounts = &v
}

// GetCalculateSizes returns the CalculateSizes field value if set, zero value otherwise.
func (o *ComputerInventoryCollectionPreferences) GetCalculateSizes() bool {
	if o == nil || o.CalculateSizes == nil {
		var ret bool
		return ret
	}
	return *o.CalculateSizes
}

// GetCalculateSizesOk returns a tuple with the CalculateSizes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryCollectionPreferences) GetCalculateSizesOk() (*bool, bool) {
	if o == nil || o.CalculateSizes == nil {
		return nil, false
	}
	return o.CalculateSizes, true
}

// HasCalculateSizes returns a boolean if a field has been set.
func (o *ComputerInventoryCollectionPreferences) HasCalculateSizes() bool {
	if o != nil && o.CalculateSizes != nil {
		return true
	}

	return false
}

// SetCalculateSizes gets a reference to the given bool and assigns it to the CalculateSizes field.
func (o *ComputerInventoryCollectionPreferences) SetCalculateSizes(v bool) {
	o.CalculateSizes = &v
}

// GetIncludeHiddenAccounts returns the IncludeHiddenAccounts field value if set, zero value otherwise.
func (o *ComputerInventoryCollectionPreferences) GetIncludeHiddenAccounts() bool {
	if o == nil || o.IncludeHiddenAccounts == nil {
		var ret bool
		return ret
	}
	return *o.IncludeHiddenAccounts
}

// GetIncludeHiddenAccountsOk returns a tuple with the IncludeHiddenAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryCollectionPreferences) GetIncludeHiddenAccountsOk() (*bool, bool) {
	if o == nil || o.IncludeHiddenAccounts == nil {
		return nil, false
	}
	return o.IncludeHiddenAccounts, true
}

// HasIncludeHiddenAccounts returns a boolean if a field has been set.
func (o *ComputerInventoryCollectionPreferences) HasIncludeHiddenAccounts() bool {
	if o != nil && o.IncludeHiddenAccounts != nil {
		return true
	}

	return false
}

// SetIncludeHiddenAccounts gets a reference to the given bool and assigns it to the IncludeHiddenAccounts field.
func (o *ComputerInventoryCollectionPreferences) SetIncludeHiddenAccounts(v bool) {
	o.IncludeHiddenAccounts = &v
}

// GetIncludePrinters returns the IncludePrinters field value if set, zero value otherwise.
func (o *ComputerInventoryCollectionPreferences) GetIncludePrinters() bool {
	if o == nil || o.IncludePrinters == nil {
		var ret bool
		return ret
	}
	return *o.IncludePrinters
}

// GetIncludePrintersOk returns a tuple with the IncludePrinters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryCollectionPreferences) GetIncludePrintersOk() (*bool, bool) {
	if o == nil || o.IncludePrinters == nil {
		return nil, false
	}
	return o.IncludePrinters, true
}

// HasIncludePrinters returns a boolean if a field has been set.
func (o *ComputerInventoryCollectionPreferences) HasIncludePrinters() bool {
	if o != nil && o.IncludePrinters != nil {
		return true
	}

	return false
}

// SetIncludePrinters gets a reference to the given bool and assigns it to the IncludePrinters field.
func (o *ComputerInventoryCollectionPreferences) SetIncludePrinters(v bool) {
	o.IncludePrinters = &v
}

// GetIncludeServices returns the IncludeServices field value if set, zero value otherwise.
func (o *ComputerInventoryCollectionPreferences) GetIncludeServices() bool {
	if o == nil || o.IncludeServices == nil {
		var ret bool
		return ret
	}
	return *o.IncludeServices
}

// GetIncludeServicesOk returns a tuple with the IncludeServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryCollectionPreferences) GetIncludeServicesOk() (*bool, bool) {
	if o == nil || o.IncludeServices == nil {
		return nil, false
	}
	return o.IncludeServices, true
}

// HasIncludeServices returns a boolean if a field has been set.
func (o *ComputerInventoryCollectionPreferences) HasIncludeServices() bool {
	if o != nil && o.IncludeServices != nil {
		return true
	}

	return false
}

// SetIncludeServices gets a reference to the given bool and assigns it to the IncludeServices field.
func (o *ComputerInventoryCollectionPreferences) SetIncludeServices(v bool) {
	o.IncludeServices = &v
}

// GetCollectSyncedMobileDeviceInfo returns the CollectSyncedMobileDeviceInfo field value if set, zero value otherwise.
func (o *ComputerInventoryCollectionPreferences) GetCollectSyncedMobileDeviceInfo() bool {
	if o == nil || o.CollectSyncedMobileDeviceInfo == nil {
		var ret bool
		return ret
	}
	return *o.CollectSyncedMobileDeviceInfo
}

// GetCollectSyncedMobileDeviceInfoOk returns a tuple with the CollectSyncedMobileDeviceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryCollectionPreferences) GetCollectSyncedMobileDeviceInfoOk() (*bool, bool) {
	if o == nil || o.CollectSyncedMobileDeviceInfo == nil {
		return nil, false
	}
	return o.CollectSyncedMobileDeviceInfo, true
}

// HasCollectSyncedMobileDeviceInfo returns a boolean if a field has been set.
func (o *ComputerInventoryCollectionPreferences) HasCollectSyncedMobileDeviceInfo() bool {
	if o != nil && o.CollectSyncedMobileDeviceInfo != nil {
		return true
	}

	return false
}

// SetCollectSyncedMobileDeviceInfo gets a reference to the given bool and assigns it to the CollectSyncedMobileDeviceInfo field.
func (o *ComputerInventoryCollectionPreferences) SetCollectSyncedMobileDeviceInfo(v bool) {
	o.CollectSyncedMobileDeviceInfo = &v
}

// GetUpdateLdapInfoOnComputerInventorySubmissions returns the UpdateLdapInfoOnComputerInventorySubmissions field value if set, zero value otherwise.
func (o *ComputerInventoryCollectionPreferences) GetUpdateLdapInfoOnComputerInventorySubmissions() bool {
	if o == nil || o.UpdateLdapInfoOnComputerInventorySubmissions == nil {
		var ret bool
		return ret
	}
	return *o.UpdateLdapInfoOnComputerInventorySubmissions
}

// GetUpdateLdapInfoOnComputerInventorySubmissionsOk returns a tuple with the UpdateLdapInfoOnComputerInventorySubmissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryCollectionPreferences) GetUpdateLdapInfoOnComputerInventorySubmissionsOk() (*bool, bool) {
	if o == nil || o.UpdateLdapInfoOnComputerInventorySubmissions == nil {
		return nil, false
	}
	return o.UpdateLdapInfoOnComputerInventorySubmissions, true
}

// HasUpdateLdapInfoOnComputerInventorySubmissions returns a boolean if a field has been set.
func (o *ComputerInventoryCollectionPreferences) HasUpdateLdapInfoOnComputerInventorySubmissions() bool {
	if o != nil && o.UpdateLdapInfoOnComputerInventorySubmissions != nil {
		return true
	}

	return false
}

// SetUpdateLdapInfoOnComputerInventorySubmissions gets a reference to the given bool and assigns it to the UpdateLdapInfoOnComputerInventorySubmissions field.
func (o *ComputerInventoryCollectionPreferences) SetUpdateLdapInfoOnComputerInventorySubmissions(v bool) {
	o.UpdateLdapInfoOnComputerInventorySubmissions = &v
}

// GetMonitorBeacons returns the MonitorBeacons field value if set, zero value otherwise.
func (o *ComputerInventoryCollectionPreferences) GetMonitorBeacons() bool {
	if o == nil || o.MonitorBeacons == nil {
		var ret bool
		return ret
	}
	return *o.MonitorBeacons
}

// GetMonitorBeaconsOk returns a tuple with the MonitorBeacons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryCollectionPreferences) GetMonitorBeaconsOk() (*bool, bool) {
	if o == nil || o.MonitorBeacons == nil {
		return nil, false
	}
	return o.MonitorBeacons, true
}

// HasMonitorBeacons returns a boolean if a field has been set.
func (o *ComputerInventoryCollectionPreferences) HasMonitorBeacons() bool {
	if o != nil && o.MonitorBeacons != nil {
		return true
	}

	return false
}

// SetMonitorBeacons gets a reference to the given bool and assigns it to the MonitorBeacons field.
func (o *ComputerInventoryCollectionPreferences) SetMonitorBeacons(v bool) {
	o.MonitorBeacons = &v
}

// GetAllowChangingUserAndLocation returns the AllowChangingUserAndLocation field value if set, zero value otherwise.
func (o *ComputerInventoryCollectionPreferences) GetAllowChangingUserAndLocation() bool {
	if o == nil || o.AllowChangingUserAndLocation == nil {
		var ret bool
		return ret
	}
	return *o.AllowChangingUserAndLocation
}

// GetAllowChangingUserAndLocationOk returns a tuple with the AllowChangingUserAndLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryCollectionPreferences) GetAllowChangingUserAndLocationOk() (*bool, bool) {
	if o == nil || o.AllowChangingUserAndLocation == nil {
		return nil, false
	}
	return o.AllowChangingUserAndLocation, true
}

// HasAllowChangingUserAndLocation returns a boolean if a field has been set.
func (o *ComputerInventoryCollectionPreferences) HasAllowChangingUserAndLocation() bool {
	if o != nil && o.AllowChangingUserAndLocation != nil {
		return true
	}

	return false
}

// SetAllowChangingUserAndLocation gets a reference to the given bool and assigns it to the AllowChangingUserAndLocation field.
func (o *ComputerInventoryCollectionPreferences) SetAllowChangingUserAndLocation(v bool) {
	o.AllowChangingUserAndLocation = &v
}

// GetUseUnixUserPaths returns the UseUnixUserPaths field value if set, zero value otherwise.
func (o *ComputerInventoryCollectionPreferences) GetUseUnixUserPaths() bool {
	if o == nil || o.UseUnixUserPaths == nil {
		var ret bool
		return ret
	}
	return *o.UseUnixUserPaths
}

// GetUseUnixUserPathsOk returns a tuple with the UseUnixUserPaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryCollectionPreferences) GetUseUnixUserPathsOk() (*bool, bool) {
	if o == nil || o.UseUnixUserPaths == nil {
		return nil, false
	}
	return o.UseUnixUserPaths, true
}

// HasUseUnixUserPaths returns a boolean if a field has been set.
func (o *ComputerInventoryCollectionPreferences) HasUseUnixUserPaths() bool {
	if o != nil && o.UseUnixUserPaths != nil {
		return true
	}

	return false
}

// SetUseUnixUserPaths gets a reference to the given bool and assigns it to the UseUnixUserPaths field.
func (o *ComputerInventoryCollectionPreferences) SetUseUnixUserPaths(v bool) {
	o.UseUnixUserPaths = &v
}

func (o ComputerInventoryCollectionPreferences) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MonitorApplicationUsage != nil {
		toSerialize["monitorApplicationUsage"] = o.MonitorApplicationUsage
	}
	if o.IncludeFonts != nil {
		toSerialize["includeFonts"] = o.IncludeFonts
	}
	if o.IncludePlugins != nil {
		toSerialize["includePlugins"] = o.IncludePlugins
	}
	if o.IncludePackages != nil {
		toSerialize["includePackages"] = o.IncludePackages
	}
	if o.IncludeSoftwareUpdates != nil {
		toSerialize["includeSoftwareUpdates"] = o.IncludeSoftwareUpdates
	}
	if o.IncludeAccounts != nil {
		toSerialize["includeAccounts"] = o.IncludeAccounts
	}
	if o.CalculateSizes != nil {
		toSerialize["calculateSizes"] = o.CalculateSizes
	}
	if o.IncludeHiddenAccounts != nil {
		toSerialize["includeHiddenAccounts"] = o.IncludeHiddenAccounts
	}
	if o.IncludePrinters != nil {
		toSerialize["includePrinters"] = o.IncludePrinters
	}
	if o.IncludeServices != nil {
		toSerialize["includeServices"] = o.IncludeServices
	}
	if o.CollectSyncedMobileDeviceInfo != nil {
		toSerialize["collectSyncedMobileDeviceInfo"] = o.CollectSyncedMobileDeviceInfo
	}
	if o.UpdateLdapInfoOnComputerInventorySubmissions != nil {
		toSerialize["updateLdapInfoOnComputerInventorySubmissions"] = o.UpdateLdapInfoOnComputerInventorySubmissions
	}
	if o.MonitorBeacons != nil {
		toSerialize["monitorBeacons"] = o.MonitorBeacons
	}
	if o.AllowChangingUserAndLocation != nil {
		toSerialize["allowChangingUserAndLocation"] = o.AllowChangingUserAndLocation
	}
	if o.UseUnixUserPaths != nil {
		toSerialize["useUnixUserPaths"] = o.UseUnixUserPaths
	}
	return json.Marshal(toSerialize)
}

type NullableComputerInventoryCollectionPreferences struct {
	value *ComputerInventoryCollectionPreferences
	isSet bool
}

func (v NullableComputerInventoryCollectionPreferences) Get() *ComputerInventoryCollectionPreferences {
	return v.value
}

func (v *NullableComputerInventoryCollectionPreferences) Set(val *ComputerInventoryCollectionPreferences) {
	v.value = val
	v.isSet = true
}

func (v NullableComputerInventoryCollectionPreferences) IsSet() bool {
	return v.isSet
}

func (v *NullableComputerInventoryCollectionPreferences) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComputerInventoryCollectionPreferences(val *ComputerInventoryCollectionPreferences) *NullableComputerInventoryCollectionPreferences {
	return &NullableComputerInventoryCollectionPreferences{value: val, isSet: true}
}

func (v NullableComputerInventoryCollectionPreferences) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComputerInventoryCollectionPreferences) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


