/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the DetailsV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DetailsV2{}

// DetailsV2 will be populated if the type is ios or visionos.
type DetailsV2 struct {
	Model *string `json:"model,omitempty"`
	ModelIdentifier *string `json:"modelIdentifier,omitempty"`
	ModelNumber *string `json:"modelNumber,omitempty"`
	Supervised *bool `json:"supervised,omitempty"`
	BatteryLevel *int64 `json:"batteryLevel,omitempty"`
	LastBackupTimestamp *time.Time `json:"lastBackupTimestamp,omitempty"`
	CapacityMb *int64 `json:"capacityMb,omitempty"`
	AvailableMb *int64 `json:"availableMb,omitempty"`
	PercentageUsed *int64 `json:"percentageUsed,omitempty"`
	Shared *bool `json:"shared,omitempty"`
	DeviceLocatorServiceEnabled *bool `json:"deviceLocatorServiceEnabled,omitempty"`
	DoNotDisturbEnabled *bool `json:"doNotDisturbEnabled,omitempty"`
	CloudBackupEnabled *bool `json:"cloudBackupEnabled,omitempty"`
	LastCloudBackupTimestamp *time.Time `json:"lastCloudBackupTimestamp,omitempty"`
	LocationServicesEnabled *bool `json:"locationServicesEnabled,omitempty"`
	ITunesStoreAccountActive *bool `json:"iTunesStoreAccountActive,omitempty"`
	BleCapable *bool `json:"bleCapable,omitempty"`
	Computer *IdAndNameV2 `json:"computer,omitempty"`
	Purchasing *PurchasingV2 `json:"purchasing,omitempty"`
	Security *SecurityV2 `json:"security,omitempty"`
	Network *NetworkV2 `json:"network,omitempty"`
	ServiceSubscriptions []MobileDeviceServiceSubscriptions `json:"serviceSubscriptions,omitempty"`
	Applications []MobileDeviceApplication `json:"applications,omitempty"`
	Certificates []MobileDeviceCertificateV2 `json:"certificates,omitempty"`
	Ebooks []MobileDeviceEbook `json:"ebooks,omitempty"`
	ConfigurationProfiles []ConfigurationProfile `json:"configurationProfiles,omitempty"`
	ProvisioningProfiles []MobileDeviceProvisioningProfiles `json:"provisioningProfiles,omitempty"`
	Attachments []MobileDeviceAttachmentV2 `json:"attachments,omitempty"`
}

// NewDetailsV2 instantiates a new DetailsV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDetailsV2() *DetailsV2 {
	this := DetailsV2{}
	return &this
}

// NewDetailsV2WithDefaults instantiates a new DetailsV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDetailsV2WithDefaults() *DetailsV2 {
	this := DetailsV2{}
	return &this
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *DetailsV2) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *DetailsV2) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *DetailsV2) SetModel(v string) {
	o.Model = &v
}

// GetModelIdentifier returns the ModelIdentifier field value if set, zero value otherwise.
func (o *DetailsV2) GetModelIdentifier() string {
	if o == nil || IsNil(o.ModelIdentifier) {
		var ret string
		return ret
	}
	return *o.ModelIdentifier
}

// GetModelIdentifierOk returns a tuple with the ModelIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetModelIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.ModelIdentifier) {
		return nil, false
	}
	return o.ModelIdentifier, true
}

// HasModelIdentifier returns a boolean if a field has been set.
func (o *DetailsV2) HasModelIdentifier() bool {
	if o != nil && !IsNil(o.ModelIdentifier) {
		return true
	}

	return false
}

// SetModelIdentifier gets a reference to the given string and assigns it to the ModelIdentifier field.
func (o *DetailsV2) SetModelIdentifier(v string) {
	o.ModelIdentifier = &v
}

// GetModelNumber returns the ModelNumber field value if set, zero value otherwise.
func (o *DetailsV2) GetModelNumber() string {
	if o == nil || IsNil(o.ModelNumber) {
		var ret string
		return ret
	}
	return *o.ModelNumber
}

// GetModelNumberOk returns a tuple with the ModelNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetModelNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ModelNumber) {
		return nil, false
	}
	return o.ModelNumber, true
}

// HasModelNumber returns a boolean if a field has been set.
func (o *DetailsV2) HasModelNumber() bool {
	if o != nil && !IsNil(o.ModelNumber) {
		return true
	}

	return false
}

// SetModelNumber gets a reference to the given string and assigns it to the ModelNumber field.
func (o *DetailsV2) SetModelNumber(v string) {
	o.ModelNumber = &v
}

// GetSupervised returns the Supervised field value if set, zero value otherwise.
func (o *DetailsV2) GetSupervised() bool {
	if o == nil || IsNil(o.Supervised) {
		var ret bool
		return ret
	}
	return *o.Supervised
}

// GetSupervisedOk returns a tuple with the Supervised field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetSupervisedOk() (*bool, bool) {
	if o == nil || IsNil(o.Supervised) {
		return nil, false
	}
	return o.Supervised, true
}

// HasSupervised returns a boolean if a field has been set.
func (o *DetailsV2) HasSupervised() bool {
	if o != nil && !IsNil(o.Supervised) {
		return true
	}

	return false
}

// SetSupervised gets a reference to the given bool and assigns it to the Supervised field.
func (o *DetailsV2) SetSupervised(v bool) {
	o.Supervised = &v
}

// GetBatteryLevel returns the BatteryLevel field value if set, zero value otherwise.
func (o *DetailsV2) GetBatteryLevel() int64 {
	if o == nil || IsNil(o.BatteryLevel) {
		var ret int64
		return ret
	}
	return *o.BatteryLevel
}

// GetBatteryLevelOk returns a tuple with the BatteryLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetBatteryLevelOk() (*int64, bool) {
	if o == nil || IsNil(o.BatteryLevel) {
		return nil, false
	}
	return o.BatteryLevel, true
}

// HasBatteryLevel returns a boolean if a field has been set.
func (o *DetailsV2) HasBatteryLevel() bool {
	if o != nil && !IsNil(o.BatteryLevel) {
		return true
	}

	return false
}

// SetBatteryLevel gets a reference to the given int64 and assigns it to the BatteryLevel field.
func (o *DetailsV2) SetBatteryLevel(v int64) {
	o.BatteryLevel = &v
}

// GetLastBackupTimestamp returns the LastBackupTimestamp field value if set, zero value otherwise.
func (o *DetailsV2) GetLastBackupTimestamp() time.Time {
	if o == nil || IsNil(o.LastBackupTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.LastBackupTimestamp
}

// GetLastBackupTimestampOk returns a tuple with the LastBackupTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetLastBackupTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastBackupTimestamp) {
		return nil, false
	}
	return o.LastBackupTimestamp, true
}

// HasLastBackupTimestamp returns a boolean if a field has been set.
func (o *DetailsV2) HasLastBackupTimestamp() bool {
	if o != nil && !IsNil(o.LastBackupTimestamp) {
		return true
	}

	return false
}

// SetLastBackupTimestamp gets a reference to the given time.Time and assigns it to the LastBackupTimestamp field.
func (o *DetailsV2) SetLastBackupTimestamp(v time.Time) {
	o.LastBackupTimestamp = &v
}

// GetCapacityMb returns the CapacityMb field value if set, zero value otherwise.
func (o *DetailsV2) GetCapacityMb() int64 {
	if o == nil || IsNil(o.CapacityMb) {
		var ret int64
		return ret
	}
	return *o.CapacityMb
}

// GetCapacityMbOk returns a tuple with the CapacityMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetCapacityMbOk() (*int64, bool) {
	if o == nil || IsNil(o.CapacityMb) {
		return nil, false
	}
	return o.CapacityMb, true
}

// HasCapacityMb returns a boolean if a field has been set.
func (o *DetailsV2) HasCapacityMb() bool {
	if o != nil && !IsNil(o.CapacityMb) {
		return true
	}

	return false
}

// SetCapacityMb gets a reference to the given int64 and assigns it to the CapacityMb field.
func (o *DetailsV2) SetCapacityMb(v int64) {
	o.CapacityMb = &v
}

// GetAvailableMb returns the AvailableMb field value if set, zero value otherwise.
func (o *DetailsV2) GetAvailableMb() int64 {
	if o == nil || IsNil(o.AvailableMb) {
		var ret int64
		return ret
	}
	return *o.AvailableMb
}

// GetAvailableMbOk returns a tuple with the AvailableMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetAvailableMbOk() (*int64, bool) {
	if o == nil || IsNil(o.AvailableMb) {
		return nil, false
	}
	return o.AvailableMb, true
}

// HasAvailableMb returns a boolean if a field has been set.
func (o *DetailsV2) HasAvailableMb() bool {
	if o != nil && !IsNil(o.AvailableMb) {
		return true
	}

	return false
}

// SetAvailableMb gets a reference to the given int64 and assigns it to the AvailableMb field.
func (o *DetailsV2) SetAvailableMb(v int64) {
	o.AvailableMb = &v
}

// GetPercentageUsed returns the PercentageUsed field value if set, zero value otherwise.
func (o *DetailsV2) GetPercentageUsed() int64 {
	if o == nil || IsNil(o.PercentageUsed) {
		var ret int64
		return ret
	}
	return *o.PercentageUsed
}

// GetPercentageUsedOk returns a tuple with the PercentageUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetPercentageUsedOk() (*int64, bool) {
	if o == nil || IsNil(o.PercentageUsed) {
		return nil, false
	}
	return o.PercentageUsed, true
}

// HasPercentageUsed returns a boolean if a field has been set.
func (o *DetailsV2) HasPercentageUsed() bool {
	if o != nil && !IsNil(o.PercentageUsed) {
		return true
	}

	return false
}

// SetPercentageUsed gets a reference to the given int64 and assigns it to the PercentageUsed field.
func (o *DetailsV2) SetPercentageUsed(v int64) {
	o.PercentageUsed = &v
}

// GetShared returns the Shared field value if set, zero value otherwise.
func (o *DetailsV2) GetShared() bool {
	if o == nil || IsNil(o.Shared) {
		var ret bool
		return ret
	}
	return *o.Shared
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetSharedOk() (*bool, bool) {
	if o == nil || IsNil(o.Shared) {
		return nil, false
	}
	return o.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (o *DetailsV2) HasShared() bool {
	if o != nil && !IsNil(o.Shared) {
		return true
	}

	return false
}

// SetShared gets a reference to the given bool and assigns it to the Shared field.
func (o *DetailsV2) SetShared(v bool) {
	o.Shared = &v
}

// GetDeviceLocatorServiceEnabled returns the DeviceLocatorServiceEnabled field value if set, zero value otherwise.
func (o *DetailsV2) GetDeviceLocatorServiceEnabled() bool {
	if o == nil || IsNil(o.DeviceLocatorServiceEnabled) {
		var ret bool
		return ret
	}
	return *o.DeviceLocatorServiceEnabled
}

// GetDeviceLocatorServiceEnabledOk returns a tuple with the DeviceLocatorServiceEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetDeviceLocatorServiceEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DeviceLocatorServiceEnabled) {
		return nil, false
	}
	return o.DeviceLocatorServiceEnabled, true
}

// HasDeviceLocatorServiceEnabled returns a boolean if a field has been set.
func (o *DetailsV2) HasDeviceLocatorServiceEnabled() bool {
	if o != nil && !IsNil(o.DeviceLocatorServiceEnabled) {
		return true
	}

	return false
}

// SetDeviceLocatorServiceEnabled gets a reference to the given bool and assigns it to the DeviceLocatorServiceEnabled field.
func (o *DetailsV2) SetDeviceLocatorServiceEnabled(v bool) {
	o.DeviceLocatorServiceEnabled = &v
}

// GetDoNotDisturbEnabled returns the DoNotDisturbEnabled field value if set, zero value otherwise.
func (o *DetailsV2) GetDoNotDisturbEnabled() bool {
	if o == nil || IsNil(o.DoNotDisturbEnabled) {
		var ret bool
		return ret
	}
	return *o.DoNotDisturbEnabled
}

// GetDoNotDisturbEnabledOk returns a tuple with the DoNotDisturbEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetDoNotDisturbEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DoNotDisturbEnabled) {
		return nil, false
	}
	return o.DoNotDisturbEnabled, true
}

// HasDoNotDisturbEnabled returns a boolean if a field has been set.
func (o *DetailsV2) HasDoNotDisturbEnabled() bool {
	if o != nil && !IsNil(o.DoNotDisturbEnabled) {
		return true
	}

	return false
}

// SetDoNotDisturbEnabled gets a reference to the given bool and assigns it to the DoNotDisturbEnabled field.
func (o *DetailsV2) SetDoNotDisturbEnabled(v bool) {
	o.DoNotDisturbEnabled = &v
}

// GetCloudBackupEnabled returns the CloudBackupEnabled field value if set, zero value otherwise.
func (o *DetailsV2) GetCloudBackupEnabled() bool {
	if o == nil || IsNil(o.CloudBackupEnabled) {
		var ret bool
		return ret
	}
	return *o.CloudBackupEnabled
}

// GetCloudBackupEnabledOk returns a tuple with the CloudBackupEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetCloudBackupEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.CloudBackupEnabled) {
		return nil, false
	}
	return o.CloudBackupEnabled, true
}

// HasCloudBackupEnabled returns a boolean if a field has been set.
func (o *DetailsV2) HasCloudBackupEnabled() bool {
	if o != nil && !IsNil(o.CloudBackupEnabled) {
		return true
	}

	return false
}

// SetCloudBackupEnabled gets a reference to the given bool and assigns it to the CloudBackupEnabled field.
func (o *DetailsV2) SetCloudBackupEnabled(v bool) {
	o.CloudBackupEnabled = &v
}

// GetLastCloudBackupTimestamp returns the LastCloudBackupTimestamp field value if set, zero value otherwise.
func (o *DetailsV2) GetLastCloudBackupTimestamp() time.Time {
	if o == nil || IsNil(o.LastCloudBackupTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.LastCloudBackupTimestamp
}

// GetLastCloudBackupTimestampOk returns a tuple with the LastCloudBackupTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetLastCloudBackupTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastCloudBackupTimestamp) {
		return nil, false
	}
	return o.LastCloudBackupTimestamp, true
}

// HasLastCloudBackupTimestamp returns a boolean if a field has been set.
func (o *DetailsV2) HasLastCloudBackupTimestamp() bool {
	if o != nil && !IsNil(o.LastCloudBackupTimestamp) {
		return true
	}

	return false
}

// SetLastCloudBackupTimestamp gets a reference to the given time.Time and assigns it to the LastCloudBackupTimestamp field.
func (o *DetailsV2) SetLastCloudBackupTimestamp(v time.Time) {
	o.LastCloudBackupTimestamp = &v
}

// GetLocationServicesEnabled returns the LocationServicesEnabled field value if set, zero value otherwise.
func (o *DetailsV2) GetLocationServicesEnabled() bool {
	if o == nil || IsNil(o.LocationServicesEnabled) {
		var ret bool
		return ret
	}
	return *o.LocationServicesEnabled
}

// GetLocationServicesEnabledOk returns a tuple with the LocationServicesEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetLocationServicesEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.LocationServicesEnabled) {
		return nil, false
	}
	return o.LocationServicesEnabled, true
}

// HasLocationServicesEnabled returns a boolean if a field has been set.
func (o *DetailsV2) HasLocationServicesEnabled() bool {
	if o != nil && !IsNil(o.LocationServicesEnabled) {
		return true
	}

	return false
}

// SetLocationServicesEnabled gets a reference to the given bool and assigns it to the LocationServicesEnabled field.
func (o *DetailsV2) SetLocationServicesEnabled(v bool) {
	o.LocationServicesEnabled = &v
}

// GetITunesStoreAccountActive returns the ITunesStoreAccountActive field value if set, zero value otherwise.
func (o *DetailsV2) GetITunesStoreAccountActive() bool {
	if o == nil || IsNil(o.ITunesStoreAccountActive) {
		var ret bool
		return ret
	}
	return *o.ITunesStoreAccountActive
}

// GetITunesStoreAccountActiveOk returns a tuple with the ITunesStoreAccountActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetITunesStoreAccountActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.ITunesStoreAccountActive) {
		return nil, false
	}
	return o.ITunesStoreAccountActive, true
}

// HasITunesStoreAccountActive returns a boolean if a field has been set.
func (o *DetailsV2) HasITunesStoreAccountActive() bool {
	if o != nil && !IsNil(o.ITunesStoreAccountActive) {
		return true
	}

	return false
}

// SetITunesStoreAccountActive gets a reference to the given bool and assigns it to the ITunesStoreAccountActive field.
func (o *DetailsV2) SetITunesStoreAccountActive(v bool) {
	o.ITunesStoreAccountActive = &v
}

// GetBleCapable returns the BleCapable field value if set, zero value otherwise.
func (o *DetailsV2) GetBleCapable() bool {
	if o == nil || IsNil(o.BleCapable) {
		var ret bool
		return ret
	}
	return *o.BleCapable
}

// GetBleCapableOk returns a tuple with the BleCapable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetBleCapableOk() (*bool, bool) {
	if o == nil || IsNil(o.BleCapable) {
		return nil, false
	}
	return o.BleCapable, true
}

// HasBleCapable returns a boolean if a field has been set.
func (o *DetailsV2) HasBleCapable() bool {
	if o != nil && !IsNil(o.BleCapable) {
		return true
	}

	return false
}

// SetBleCapable gets a reference to the given bool and assigns it to the BleCapable field.
func (o *DetailsV2) SetBleCapable(v bool) {
	o.BleCapable = &v
}

// GetComputer returns the Computer field value if set, zero value otherwise.
func (o *DetailsV2) GetComputer() IdAndNameV2 {
	if o == nil || IsNil(o.Computer) {
		var ret IdAndNameV2
		return ret
	}
	return *o.Computer
}

// GetComputerOk returns a tuple with the Computer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetComputerOk() (*IdAndNameV2, bool) {
	if o == nil || IsNil(o.Computer) {
		return nil, false
	}
	return o.Computer, true
}

// HasComputer returns a boolean if a field has been set.
func (o *DetailsV2) HasComputer() bool {
	if o != nil && !IsNil(o.Computer) {
		return true
	}

	return false
}

// SetComputer gets a reference to the given IdAndNameV2 and assigns it to the Computer field.
func (o *DetailsV2) SetComputer(v IdAndNameV2) {
	o.Computer = &v
}

// GetPurchasing returns the Purchasing field value if set, zero value otherwise.
func (o *DetailsV2) GetPurchasing() PurchasingV2 {
	if o == nil || IsNil(o.Purchasing) {
		var ret PurchasingV2
		return ret
	}
	return *o.Purchasing
}

// GetPurchasingOk returns a tuple with the Purchasing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetPurchasingOk() (*PurchasingV2, bool) {
	if o == nil || IsNil(o.Purchasing) {
		return nil, false
	}
	return o.Purchasing, true
}

// HasPurchasing returns a boolean if a field has been set.
func (o *DetailsV2) HasPurchasing() bool {
	if o != nil && !IsNil(o.Purchasing) {
		return true
	}

	return false
}

// SetPurchasing gets a reference to the given PurchasingV2 and assigns it to the Purchasing field.
func (o *DetailsV2) SetPurchasing(v PurchasingV2) {
	o.Purchasing = &v
}

// GetSecurity returns the Security field value if set, zero value otherwise.
func (o *DetailsV2) GetSecurity() SecurityV2 {
	if o == nil || IsNil(o.Security) {
		var ret SecurityV2
		return ret
	}
	return *o.Security
}

// GetSecurityOk returns a tuple with the Security field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetSecurityOk() (*SecurityV2, bool) {
	if o == nil || IsNil(o.Security) {
		return nil, false
	}
	return o.Security, true
}

// HasSecurity returns a boolean if a field has been set.
func (o *DetailsV2) HasSecurity() bool {
	if o != nil && !IsNil(o.Security) {
		return true
	}

	return false
}

// SetSecurity gets a reference to the given SecurityV2 and assigns it to the Security field.
func (o *DetailsV2) SetSecurity(v SecurityV2) {
	o.Security = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *DetailsV2) GetNetwork() NetworkV2 {
	if o == nil || IsNil(o.Network) {
		var ret NetworkV2
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetNetworkOk() (*NetworkV2, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *DetailsV2) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given NetworkV2 and assigns it to the Network field.
func (o *DetailsV2) SetNetwork(v NetworkV2) {
	o.Network = &v
}

// GetServiceSubscriptions returns the ServiceSubscriptions field value if set, zero value otherwise.
func (o *DetailsV2) GetServiceSubscriptions() []MobileDeviceServiceSubscriptions {
	if o == nil || IsNil(o.ServiceSubscriptions) {
		var ret []MobileDeviceServiceSubscriptions
		return ret
	}
	return o.ServiceSubscriptions
}

// GetServiceSubscriptionsOk returns a tuple with the ServiceSubscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetServiceSubscriptionsOk() ([]MobileDeviceServiceSubscriptions, bool) {
	if o == nil || IsNil(o.ServiceSubscriptions) {
		return nil, false
	}
	return o.ServiceSubscriptions, true
}

// HasServiceSubscriptions returns a boolean if a field has been set.
func (o *DetailsV2) HasServiceSubscriptions() bool {
	if o != nil && !IsNil(o.ServiceSubscriptions) {
		return true
	}

	return false
}

// SetServiceSubscriptions gets a reference to the given []MobileDeviceServiceSubscriptions and assigns it to the ServiceSubscriptions field.
func (o *DetailsV2) SetServiceSubscriptions(v []MobileDeviceServiceSubscriptions) {
	o.ServiceSubscriptions = v
}

// GetApplications returns the Applications field value if set, zero value otherwise.
func (o *DetailsV2) GetApplications() []MobileDeviceApplication {
	if o == nil || IsNil(o.Applications) {
		var ret []MobileDeviceApplication
		return ret
	}
	return o.Applications
}

// GetApplicationsOk returns a tuple with the Applications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetApplicationsOk() ([]MobileDeviceApplication, bool) {
	if o == nil || IsNil(o.Applications) {
		return nil, false
	}
	return o.Applications, true
}

// HasApplications returns a boolean if a field has been set.
func (o *DetailsV2) HasApplications() bool {
	if o != nil && !IsNil(o.Applications) {
		return true
	}

	return false
}

// SetApplications gets a reference to the given []MobileDeviceApplication and assigns it to the Applications field.
func (o *DetailsV2) SetApplications(v []MobileDeviceApplication) {
	o.Applications = v
}

// GetCertificates returns the Certificates field value if set, zero value otherwise.
func (o *DetailsV2) GetCertificates() []MobileDeviceCertificateV2 {
	if o == nil || IsNil(o.Certificates) {
		var ret []MobileDeviceCertificateV2
		return ret
	}
	return o.Certificates
}

// GetCertificatesOk returns a tuple with the Certificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetCertificatesOk() ([]MobileDeviceCertificateV2, bool) {
	if o == nil || IsNil(o.Certificates) {
		return nil, false
	}
	return o.Certificates, true
}

// HasCertificates returns a boolean if a field has been set.
func (o *DetailsV2) HasCertificates() bool {
	if o != nil && !IsNil(o.Certificates) {
		return true
	}

	return false
}

// SetCertificates gets a reference to the given []MobileDeviceCertificateV2 and assigns it to the Certificates field.
func (o *DetailsV2) SetCertificates(v []MobileDeviceCertificateV2) {
	o.Certificates = v
}

// GetEbooks returns the Ebooks field value if set, zero value otherwise.
func (o *DetailsV2) GetEbooks() []MobileDeviceEbook {
	if o == nil || IsNil(o.Ebooks) {
		var ret []MobileDeviceEbook
		return ret
	}
	return o.Ebooks
}

// GetEbooksOk returns a tuple with the Ebooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetEbooksOk() ([]MobileDeviceEbook, bool) {
	if o == nil || IsNil(o.Ebooks) {
		return nil, false
	}
	return o.Ebooks, true
}

// HasEbooks returns a boolean if a field has been set.
func (o *DetailsV2) HasEbooks() bool {
	if o != nil && !IsNil(o.Ebooks) {
		return true
	}

	return false
}

// SetEbooks gets a reference to the given []MobileDeviceEbook and assigns it to the Ebooks field.
func (o *DetailsV2) SetEbooks(v []MobileDeviceEbook) {
	o.Ebooks = v
}

// GetConfigurationProfiles returns the ConfigurationProfiles field value if set, zero value otherwise.
func (o *DetailsV2) GetConfigurationProfiles() []ConfigurationProfile {
	if o == nil || IsNil(o.ConfigurationProfiles) {
		var ret []ConfigurationProfile
		return ret
	}
	return o.ConfigurationProfiles
}

// GetConfigurationProfilesOk returns a tuple with the ConfigurationProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetConfigurationProfilesOk() ([]ConfigurationProfile, bool) {
	if o == nil || IsNil(o.ConfigurationProfiles) {
		return nil, false
	}
	return o.ConfigurationProfiles, true
}

// HasConfigurationProfiles returns a boolean if a field has been set.
func (o *DetailsV2) HasConfigurationProfiles() bool {
	if o != nil && !IsNil(o.ConfigurationProfiles) {
		return true
	}

	return false
}

// SetConfigurationProfiles gets a reference to the given []ConfigurationProfile and assigns it to the ConfigurationProfiles field.
func (o *DetailsV2) SetConfigurationProfiles(v []ConfigurationProfile) {
	o.ConfigurationProfiles = v
}

// GetProvisioningProfiles returns the ProvisioningProfiles field value if set, zero value otherwise.
func (o *DetailsV2) GetProvisioningProfiles() []MobileDeviceProvisioningProfiles {
	if o == nil || IsNil(o.ProvisioningProfiles) {
		var ret []MobileDeviceProvisioningProfiles
		return ret
	}
	return o.ProvisioningProfiles
}

// GetProvisioningProfilesOk returns a tuple with the ProvisioningProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetProvisioningProfilesOk() ([]MobileDeviceProvisioningProfiles, bool) {
	if o == nil || IsNil(o.ProvisioningProfiles) {
		return nil, false
	}
	return o.ProvisioningProfiles, true
}

// HasProvisioningProfiles returns a boolean if a field has been set.
func (o *DetailsV2) HasProvisioningProfiles() bool {
	if o != nil && !IsNil(o.ProvisioningProfiles) {
		return true
	}

	return false
}

// SetProvisioningProfiles gets a reference to the given []MobileDeviceProvisioningProfiles and assigns it to the ProvisioningProfiles field.
func (o *DetailsV2) SetProvisioningProfiles(v []MobileDeviceProvisioningProfiles) {
	o.ProvisioningProfiles = v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *DetailsV2) GetAttachments() []MobileDeviceAttachmentV2 {
	if o == nil || IsNil(o.Attachments) {
		var ret []MobileDeviceAttachmentV2
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsV2) GetAttachmentsOk() ([]MobileDeviceAttachmentV2, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *DetailsV2) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []MobileDeviceAttachmentV2 and assigns it to the Attachments field.
func (o *DetailsV2) SetAttachments(v []MobileDeviceAttachmentV2) {
	o.Attachments = v
}

func (o DetailsV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DetailsV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.ModelIdentifier) {
		toSerialize["modelIdentifier"] = o.ModelIdentifier
	}
	if !IsNil(o.ModelNumber) {
		toSerialize["modelNumber"] = o.ModelNumber
	}
	if !IsNil(o.Supervised) {
		toSerialize["supervised"] = o.Supervised
	}
	if !IsNil(o.BatteryLevel) {
		toSerialize["batteryLevel"] = o.BatteryLevel
	}
	if !IsNil(o.LastBackupTimestamp) {
		toSerialize["lastBackupTimestamp"] = o.LastBackupTimestamp
	}
	if !IsNil(o.CapacityMb) {
		toSerialize["capacityMb"] = o.CapacityMb
	}
	if !IsNil(o.AvailableMb) {
		toSerialize["availableMb"] = o.AvailableMb
	}
	if !IsNil(o.PercentageUsed) {
		toSerialize["percentageUsed"] = o.PercentageUsed
	}
	if !IsNil(o.Shared) {
		toSerialize["shared"] = o.Shared
	}
	if !IsNil(o.DeviceLocatorServiceEnabled) {
		toSerialize["deviceLocatorServiceEnabled"] = o.DeviceLocatorServiceEnabled
	}
	if !IsNil(o.DoNotDisturbEnabled) {
		toSerialize["doNotDisturbEnabled"] = o.DoNotDisturbEnabled
	}
	if !IsNil(o.CloudBackupEnabled) {
		toSerialize["cloudBackupEnabled"] = o.CloudBackupEnabled
	}
	if !IsNil(o.LastCloudBackupTimestamp) {
		toSerialize["lastCloudBackupTimestamp"] = o.LastCloudBackupTimestamp
	}
	if !IsNil(o.LocationServicesEnabled) {
		toSerialize["locationServicesEnabled"] = o.LocationServicesEnabled
	}
	if !IsNil(o.ITunesStoreAccountActive) {
		toSerialize["iTunesStoreAccountActive"] = o.ITunesStoreAccountActive
	}
	if !IsNil(o.BleCapable) {
		toSerialize["bleCapable"] = o.BleCapable
	}
	if !IsNil(o.Computer) {
		toSerialize["computer"] = o.Computer
	}
	if !IsNil(o.Purchasing) {
		toSerialize["purchasing"] = o.Purchasing
	}
	if !IsNil(o.Security) {
		toSerialize["security"] = o.Security
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.ServiceSubscriptions) {
		toSerialize["serviceSubscriptions"] = o.ServiceSubscriptions
	}
	if !IsNil(o.Applications) {
		toSerialize["applications"] = o.Applications
	}
	if !IsNil(o.Certificates) {
		toSerialize["certificates"] = o.Certificates
	}
	if !IsNil(o.Ebooks) {
		toSerialize["ebooks"] = o.Ebooks
	}
	if !IsNil(o.ConfigurationProfiles) {
		toSerialize["configurationProfiles"] = o.ConfigurationProfiles
	}
	if !IsNil(o.ProvisioningProfiles) {
		toSerialize["provisioningProfiles"] = o.ProvisioningProfiles
	}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	return toSerialize, nil
}

type NullableDetailsV2 struct {
	value *DetailsV2
	isSet bool
}

func (v NullableDetailsV2) Get() *DetailsV2 {
	return v.value
}

func (v *NullableDetailsV2) Set(val *DetailsV2) {
	v.value = val
	v.isSet = true
}

func (v NullableDetailsV2) IsSet() bool {
	return v.isSet
}

func (v *NullableDetailsV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDetailsV2(val *DetailsV2) *NullableDetailsV2 {
	return &NullableDetailsV2{value: val, isSet: true}
}

func (v NullableDetailsV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDetailsV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


