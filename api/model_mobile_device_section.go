/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// MobileDeviceSection the model 'MobileDeviceSection'
type MobileDeviceSection string

// List of MobileDeviceSection
const (
	MOBILEDEVICESECTION_GENERAL MobileDeviceSection = "GENERAL"
	MOBILEDEVICESECTION_HARDWARE MobileDeviceSection = "HARDWARE"
	MOBILEDEVICESECTION_USER_AND_LOCATION MobileDeviceSection = "USER_AND_LOCATION"
	MOBILEDEVICESECTION_PURCHASING MobileDeviceSection = "PURCHASING"
	MOBILEDEVICESECTION_SECURITY MobileDeviceSection = "SECURITY"
	MOBILEDEVICESECTION_APPLICATIONS MobileDeviceSection = "APPLICATIONS"
	MOBILEDEVICESECTION_EBOOKS MobileDeviceSection = "EBOOKS"
	MOBILEDEVICESECTION_NETWORK MobileDeviceSection = "NETWORK"
	MOBILEDEVICESECTION_SERVICE_SUBSCRIPTIONS MobileDeviceSection = "SERVICE_SUBSCRIPTIONS"
	MOBILEDEVICESECTION_CERTIFICATES MobileDeviceSection = "CERTIFICATES"
	MOBILEDEVICESECTION_PROFILES MobileDeviceSection = "PROFILES"
	MOBILEDEVICESECTION_USER_PROFILES MobileDeviceSection = "USER_PROFILES"
	MOBILEDEVICESECTION_PROVISIONING_PROFILES MobileDeviceSection = "PROVISIONING_PROFILES"
	MOBILEDEVICESECTION_SHARED_USERS MobileDeviceSection = "SHARED_USERS"
	MOBILEDEVICESECTION_EXTENSION_ATTRIBUTES MobileDeviceSection = "EXTENSION_ATTRIBUTES"
)

// All allowed values of MobileDeviceSection enum
var AllowedMobileDeviceSectionEnumValues = []MobileDeviceSection{
	"GENERAL",
	"HARDWARE",
	"USER_AND_LOCATION",
	"PURCHASING",
	"SECURITY",
	"APPLICATIONS",
	"EBOOKS",
	"NETWORK",
	"SERVICE_SUBSCRIPTIONS",
	"CERTIFICATES",
	"PROFILES",
	"USER_PROFILES",
	"PROVISIONING_PROFILES",
	"SHARED_USERS",
	"EXTENSION_ATTRIBUTES",
}

func (v *MobileDeviceSection) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MobileDeviceSection(value)
	for _, existing := range AllowedMobileDeviceSectionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MobileDeviceSection", value)
}

// NewMobileDeviceSectionFromValue returns a pointer to a valid MobileDeviceSection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMobileDeviceSectionFromValue(v string) (*MobileDeviceSection, error) {
	ev := MobileDeviceSection(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MobileDeviceSection: valid values are %v", v, AllowedMobileDeviceSectionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MobileDeviceSection) IsValid() bool {
	for _, existing := range AllowedMobileDeviceSectionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MobileDeviceSection value
func (v MobileDeviceSection) Ptr() *MobileDeviceSection {
	return &v
}

type NullableMobileDeviceSection struct {
	value *MobileDeviceSection
	isSet bool
}

func (v NullableMobileDeviceSection) Get() *MobileDeviceSection {
	return v.value
}

func (v *NullableMobileDeviceSection) Set(val *MobileDeviceSection) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileDeviceSection) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileDeviceSection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileDeviceSection(val *MobileDeviceSection) *NullableMobileDeviceSection {
	return &NullableMobileDeviceSection{value: val, isSet: true}
}

func (v NullableMobileDeviceSection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileDeviceSection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

