/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the JamfProServerUrl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JamfProServerUrl{}

// JamfProServerUrl struct for JamfProServerUrl
type JamfProServerUrl struct {
	Url string `json:"url"`
	UnsecuredEnrollmentUrl string `json:"unsecuredEnrollmentUrl"`
}

// NewJamfProServerUrl instantiates a new JamfProServerUrl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJamfProServerUrl(url string, unsecuredEnrollmentUrl string) *JamfProServerUrl {
	this := JamfProServerUrl{}
	this.Url = url
	this.UnsecuredEnrollmentUrl = unsecuredEnrollmentUrl
	return &this
}

// NewJamfProServerUrlWithDefaults instantiates a new JamfProServerUrl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJamfProServerUrlWithDefaults() *JamfProServerUrl {
	this := JamfProServerUrl{}
	return &this
}

// GetUrl returns the Url field value
func (o *JamfProServerUrl) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *JamfProServerUrl) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *JamfProServerUrl) SetUrl(v string) {
	o.Url = v
}

// GetUnsecuredEnrollmentUrl returns the UnsecuredEnrollmentUrl field value
func (o *JamfProServerUrl) GetUnsecuredEnrollmentUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnsecuredEnrollmentUrl
}

// GetUnsecuredEnrollmentUrlOk returns a tuple with the UnsecuredEnrollmentUrl field value
// and a boolean to check if the value has been set.
func (o *JamfProServerUrl) GetUnsecuredEnrollmentUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnsecuredEnrollmentUrl, true
}

// SetUnsecuredEnrollmentUrl sets field value
func (o *JamfProServerUrl) SetUnsecuredEnrollmentUrl(v string) {
	o.UnsecuredEnrollmentUrl = v
}

func (o JamfProServerUrl) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JamfProServerUrl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["unsecuredEnrollmentUrl"] = o.UnsecuredEnrollmentUrl
	return toSerialize, nil
}

type NullableJamfProServerUrl struct {
	value *JamfProServerUrl
	isSet bool
}

func (v NullableJamfProServerUrl) Get() *JamfProServerUrl {
	return v.value
}

func (v *NullableJamfProServerUrl) Set(val *JamfProServerUrl) {
	v.value = val
	v.isSet = true
}

func (v NullableJamfProServerUrl) IsSet() bool {
	return v.isSet
}

func (v *NullableJamfProServerUrl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJamfProServerUrl(val *JamfProServerUrl) *NullableJamfProServerUrl {
	return &NullableJamfProServerUrl{value: val, isSet: true}
}

func (v NullableJamfProServerUrl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJamfProServerUrl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


