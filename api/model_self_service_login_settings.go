/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SelfServiceLoginSettings object representation of Self Service settings regarding login 
type SelfServiceLoginSettings struct {
	// login setting to tell clients how to let users log in 
	UserLoginLevel string `json:"userLoginLevel"`
	// true if remember me functionality is allowed, false if not 
	AllowRememberMe *bool `json:"allowRememberMe,omitempty"`
	// login type to be used when asking users to log in 
	AuthType string `json:"authType"`
}

// NewSelfServiceLoginSettings instantiates a new SelfServiceLoginSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSelfServiceLoginSettings(userLoginLevel string, authType string) *SelfServiceLoginSettings {
	this := SelfServiceLoginSettings{}
	this.UserLoginLevel = userLoginLevel
	var allowRememberMe bool = false
	this.AllowRememberMe = &allowRememberMe
	this.AuthType = authType
	return &this
}

// NewSelfServiceLoginSettingsWithDefaults instantiates a new SelfServiceLoginSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSelfServiceLoginSettingsWithDefaults() *SelfServiceLoginSettings {
	this := SelfServiceLoginSettings{}
	var allowRememberMe bool = false
	this.AllowRememberMe = &allowRememberMe
	return &this
}

// GetUserLoginLevel returns the UserLoginLevel field value
func (o *SelfServiceLoginSettings) GetUserLoginLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserLoginLevel
}

// GetUserLoginLevelOk returns a tuple with the UserLoginLevel field value
// and a boolean to check if the value has been set.
func (o *SelfServiceLoginSettings) GetUserLoginLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserLoginLevel, true
}

// SetUserLoginLevel sets field value
func (o *SelfServiceLoginSettings) SetUserLoginLevel(v string) {
	o.UserLoginLevel = v
}

// GetAllowRememberMe returns the AllowRememberMe field value if set, zero value otherwise.
func (o *SelfServiceLoginSettings) GetAllowRememberMe() bool {
	if o == nil || o.AllowRememberMe == nil {
		var ret bool
		return ret
	}
	return *o.AllowRememberMe
}

// GetAllowRememberMeOk returns a tuple with the AllowRememberMe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfServiceLoginSettings) GetAllowRememberMeOk() (*bool, bool) {
	if o == nil || o.AllowRememberMe == nil {
		return nil, false
	}
	return o.AllowRememberMe, true
}

// HasAllowRememberMe returns a boolean if a field has been set.
func (o *SelfServiceLoginSettings) HasAllowRememberMe() bool {
	if o != nil && o.AllowRememberMe != nil {
		return true
	}

	return false
}

// SetAllowRememberMe gets a reference to the given bool and assigns it to the AllowRememberMe field.
func (o *SelfServiceLoginSettings) SetAllowRememberMe(v bool) {
	o.AllowRememberMe = &v
}

// GetAuthType returns the AuthType field value
func (o *SelfServiceLoginSettings) GetAuthType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthType
}

// GetAuthTypeOk returns a tuple with the AuthType field value
// and a boolean to check if the value has been set.
func (o *SelfServiceLoginSettings) GetAuthTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthType, true
}

// SetAuthType sets field value
func (o *SelfServiceLoginSettings) SetAuthType(v string) {
	o.AuthType = v
}

func (o SelfServiceLoginSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["userLoginLevel"] = o.UserLoginLevel
	}
	if o.AllowRememberMe != nil {
		toSerialize["allowRememberMe"] = o.AllowRememberMe
	}
	if true {
		toSerialize["authType"] = o.AuthType
	}
	return json.Marshal(toSerialize)
}

type NullableSelfServiceLoginSettings struct {
	value *SelfServiceLoginSettings
	isSet bool
}

func (v NullableSelfServiceLoginSettings) Get() *SelfServiceLoginSettings {
	return v.value
}

func (v *NullableSelfServiceLoginSettings) Set(val *SelfServiceLoginSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableSelfServiceLoginSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableSelfServiceLoginSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSelfServiceLoginSettings(val *SelfServiceLoginSettings) *NullableSelfServiceLoginSettings {
	return &NullableSelfServiceLoginSettings{value: val, isSet: true}
}

func (v NullableSelfServiceLoginSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSelfServiceLoginSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


