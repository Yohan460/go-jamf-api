/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the MobileDeviceSearchParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MobileDeviceSearchParams{}

// MobileDeviceSearchParams struct for MobileDeviceSearchParams
type MobileDeviceSearchParams struct {
	PageNumber *int64 `json:"pageNumber,omitempty"`
	PageSize *int64 `json:"pageSize,omitempty"`
	IsLoadToEnd *bool `json:"isLoadToEnd,omitempty"`
	OrderBy []OrderBy `json:"orderBy,omitempty"`
	Udid *string `json:"udid,omitempty"`
	MacAddress *string `json:"macAddress,omitempty"`
	Name *string `json:"name,omitempty"`
	SerialNumber *string `json:"serialNumber,omitempty"`
	OsType *string `json:"osType,omitempty"`
	IsManaged *bool `json:"isManaged,omitempty"`
	ExcludedIds []int64 `json:"excludedIds,omitempty"`
}

// NewMobileDeviceSearchParams instantiates a new MobileDeviceSearchParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileDeviceSearchParams() *MobileDeviceSearchParams {
	this := MobileDeviceSearchParams{}
	return &this
}

// NewMobileDeviceSearchParamsWithDefaults instantiates a new MobileDeviceSearchParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileDeviceSearchParamsWithDefaults() *MobileDeviceSearchParams {
	this := MobileDeviceSearchParams{}
	return &this
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *MobileDeviceSearchParams) GetPageNumber() int64 {
	if o == nil || IsNil(o.PageNumber) {
		var ret int64
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceSearchParams) GetPageNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *MobileDeviceSearchParams) HasPageNumber() bool {
	if o != nil && !IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int64 and assigns it to the PageNumber field.
func (o *MobileDeviceSearchParams) SetPageNumber(v int64) {
	o.PageNumber = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *MobileDeviceSearchParams) GetPageSize() int64 {
	if o == nil || IsNil(o.PageSize) {
		var ret int64
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceSearchParams) GetPageSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *MobileDeviceSearchParams) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int64 and assigns it to the PageSize field.
func (o *MobileDeviceSearchParams) SetPageSize(v int64) {
	o.PageSize = &v
}

// GetIsLoadToEnd returns the IsLoadToEnd field value if set, zero value otherwise.
func (o *MobileDeviceSearchParams) GetIsLoadToEnd() bool {
	if o == nil || IsNil(o.IsLoadToEnd) {
		var ret bool
		return ret
	}
	return *o.IsLoadToEnd
}

// GetIsLoadToEndOk returns a tuple with the IsLoadToEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceSearchParams) GetIsLoadToEndOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLoadToEnd) {
		return nil, false
	}
	return o.IsLoadToEnd, true
}

// HasIsLoadToEnd returns a boolean if a field has been set.
func (o *MobileDeviceSearchParams) HasIsLoadToEnd() bool {
	if o != nil && !IsNil(o.IsLoadToEnd) {
		return true
	}

	return false
}

// SetIsLoadToEnd gets a reference to the given bool and assigns it to the IsLoadToEnd field.
func (o *MobileDeviceSearchParams) SetIsLoadToEnd(v bool) {
	o.IsLoadToEnd = &v
}

// GetOrderBy returns the OrderBy field value if set, zero value otherwise.
func (o *MobileDeviceSearchParams) GetOrderBy() []OrderBy {
	if o == nil || IsNil(o.OrderBy) {
		var ret []OrderBy
		return ret
	}
	return o.OrderBy
}

// GetOrderByOk returns a tuple with the OrderBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceSearchParams) GetOrderByOk() ([]OrderBy, bool) {
	if o == nil || IsNil(o.OrderBy) {
		return nil, false
	}
	return o.OrderBy, true
}

// HasOrderBy returns a boolean if a field has been set.
func (o *MobileDeviceSearchParams) HasOrderBy() bool {
	if o != nil && !IsNil(o.OrderBy) {
		return true
	}

	return false
}

// SetOrderBy gets a reference to the given []OrderBy and assigns it to the OrderBy field.
func (o *MobileDeviceSearchParams) SetOrderBy(v []OrderBy) {
	o.OrderBy = v
}

// GetUdid returns the Udid field value if set, zero value otherwise.
func (o *MobileDeviceSearchParams) GetUdid() string {
	if o == nil || IsNil(o.Udid) {
		var ret string
		return ret
	}
	return *o.Udid
}

// GetUdidOk returns a tuple with the Udid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceSearchParams) GetUdidOk() (*string, bool) {
	if o == nil || IsNil(o.Udid) {
		return nil, false
	}
	return o.Udid, true
}

// HasUdid returns a boolean if a field has been set.
func (o *MobileDeviceSearchParams) HasUdid() bool {
	if o != nil && !IsNil(o.Udid) {
		return true
	}

	return false
}

// SetUdid gets a reference to the given string and assigns it to the Udid field.
func (o *MobileDeviceSearchParams) SetUdid(v string) {
	o.Udid = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *MobileDeviceSearchParams) GetMacAddress() string {
	if o == nil || IsNil(o.MacAddress) {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceSearchParams) GetMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.MacAddress) {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *MobileDeviceSearchParams) HasMacAddress() bool {
	if o != nil && !IsNil(o.MacAddress) {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *MobileDeviceSearchParams) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MobileDeviceSearchParams) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceSearchParams) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MobileDeviceSearchParams) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MobileDeviceSearchParams) SetName(v string) {
	o.Name = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *MobileDeviceSearchParams) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceSearchParams) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *MobileDeviceSearchParams) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *MobileDeviceSearchParams) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetOsType returns the OsType field value if set, zero value otherwise.
func (o *MobileDeviceSearchParams) GetOsType() string {
	if o == nil || IsNil(o.OsType) {
		var ret string
		return ret
	}
	return *o.OsType
}

// GetOsTypeOk returns a tuple with the OsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceSearchParams) GetOsTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OsType) {
		return nil, false
	}
	return o.OsType, true
}

// HasOsType returns a boolean if a field has been set.
func (o *MobileDeviceSearchParams) HasOsType() bool {
	if o != nil && !IsNil(o.OsType) {
		return true
	}

	return false
}

// SetOsType gets a reference to the given string and assigns it to the OsType field.
func (o *MobileDeviceSearchParams) SetOsType(v string) {
	o.OsType = &v
}

// GetIsManaged returns the IsManaged field value if set, zero value otherwise.
func (o *MobileDeviceSearchParams) GetIsManaged() bool {
	if o == nil || IsNil(o.IsManaged) {
		var ret bool
		return ret
	}
	return *o.IsManaged
}

// GetIsManagedOk returns a tuple with the IsManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceSearchParams) GetIsManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsManaged) {
		return nil, false
	}
	return o.IsManaged, true
}

// HasIsManaged returns a boolean if a field has been set.
func (o *MobileDeviceSearchParams) HasIsManaged() bool {
	if o != nil && !IsNil(o.IsManaged) {
		return true
	}

	return false
}

// SetIsManaged gets a reference to the given bool and assigns it to the IsManaged field.
func (o *MobileDeviceSearchParams) SetIsManaged(v bool) {
	o.IsManaged = &v
}

// GetExcludedIds returns the ExcludedIds field value if set, zero value otherwise.
func (o *MobileDeviceSearchParams) GetExcludedIds() []int64 {
	if o == nil || IsNil(o.ExcludedIds) {
		var ret []int64
		return ret
	}
	return o.ExcludedIds
}

// GetExcludedIdsOk returns a tuple with the ExcludedIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceSearchParams) GetExcludedIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.ExcludedIds) {
		return nil, false
	}
	return o.ExcludedIds, true
}

// HasExcludedIds returns a boolean if a field has been set.
func (o *MobileDeviceSearchParams) HasExcludedIds() bool {
	if o != nil && !IsNil(o.ExcludedIds) {
		return true
	}

	return false
}

// SetExcludedIds gets a reference to the given []int64 and assigns it to the ExcludedIds field.
func (o *MobileDeviceSearchParams) SetExcludedIds(v []int64) {
	o.ExcludedIds = v
}

func (o MobileDeviceSearchParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MobileDeviceSearchParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PageNumber) {
		toSerialize["pageNumber"] = o.PageNumber
	}
	if !IsNil(o.PageSize) {
		toSerialize["pageSize"] = o.PageSize
	}
	if !IsNil(o.IsLoadToEnd) {
		toSerialize["isLoadToEnd"] = o.IsLoadToEnd
	}
	if !IsNil(o.OrderBy) {
		toSerialize["orderBy"] = o.OrderBy
	}
	if !IsNil(o.Udid) {
		toSerialize["udid"] = o.Udid
	}
	if !IsNil(o.MacAddress) {
		toSerialize["macAddress"] = o.MacAddress
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["serialNumber"] = o.SerialNumber
	}
	if !IsNil(o.OsType) {
		toSerialize["osType"] = o.OsType
	}
	if !IsNil(o.IsManaged) {
		toSerialize["isManaged"] = o.IsManaged
	}
	if !IsNil(o.ExcludedIds) {
		toSerialize["excludedIds"] = o.ExcludedIds
	}
	return toSerialize, nil
}

type NullableMobileDeviceSearchParams struct {
	value *MobileDeviceSearchParams
	isSet bool
}

func (v NullableMobileDeviceSearchParams) Get() *MobileDeviceSearchParams {
	return v.value
}

func (v *NullableMobileDeviceSearchParams) Set(val *MobileDeviceSearchParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileDeviceSearchParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileDeviceSearchParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileDeviceSearchParams(val *MobileDeviceSearchParams) *NullableMobileDeviceSearchParams {
	return &NullableMobileDeviceSearchParams{value: val, isSet: true}
}

func (v NullableMobileDeviceSearchParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileDeviceSearchParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


