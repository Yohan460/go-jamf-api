/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// GetComputerPrestageAllOf struct for GetComputerPrestageAllOf
type GetComputerPrestageAllOf struct {
	Id *int32 `json:"id,omitempty"`
	ProfileUUID *string `json:"profileUUID,omitempty"`
	SiteId *int32 `json:"siteId,omitempty"`
	VersionLock *int32 `json:"versionLock,omitempty"`
}

// NewGetComputerPrestageAllOf instantiates a new GetComputerPrestageAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetComputerPrestageAllOf() *GetComputerPrestageAllOf {
	this := GetComputerPrestageAllOf{}
	return &this
}

// NewGetComputerPrestageAllOfWithDefaults instantiates a new GetComputerPrestageAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetComputerPrestageAllOfWithDefaults() *GetComputerPrestageAllOf {
	this := GetComputerPrestageAllOf{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetComputerPrestageAllOf) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetComputerPrestageAllOf) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetComputerPrestageAllOf) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetComputerPrestageAllOf) SetId(v int32) {
	o.Id = &v
}

// GetProfileUUID returns the ProfileUUID field value if set, zero value otherwise.
func (o *GetComputerPrestageAllOf) GetProfileUUID() string {
	if o == nil || o.ProfileUUID == nil {
		var ret string
		return ret
	}
	return *o.ProfileUUID
}

// GetProfileUUIDOk returns a tuple with the ProfileUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetComputerPrestageAllOf) GetProfileUUIDOk() (*string, bool) {
	if o == nil || o.ProfileUUID == nil {
		return nil, false
	}
	return o.ProfileUUID, true
}

// HasProfileUUID returns a boolean if a field has been set.
func (o *GetComputerPrestageAllOf) HasProfileUUID() bool {
	if o != nil && o.ProfileUUID != nil {
		return true
	}

	return false
}

// SetProfileUUID gets a reference to the given string and assigns it to the ProfileUUID field.
func (o *GetComputerPrestageAllOf) SetProfileUUID(v string) {
	o.ProfileUUID = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *GetComputerPrestageAllOf) GetSiteId() int32 {
	if o == nil || o.SiteId == nil {
		var ret int32
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetComputerPrestageAllOf) GetSiteIdOk() (*int32, bool) {
	if o == nil || o.SiteId == nil {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *GetComputerPrestageAllOf) HasSiteId() bool {
	if o != nil && o.SiteId != nil {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given int32 and assigns it to the SiteId field.
func (o *GetComputerPrestageAllOf) SetSiteId(v int32) {
	o.SiteId = &v
}

// GetVersionLock returns the VersionLock field value if set, zero value otherwise.
func (o *GetComputerPrestageAllOf) GetVersionLock() int32 {
	if o == nil || o.VersionLock == nil {
		var ret int32
		return ret
	}
	return *o.VersionLock
}

// GetVersionLockOk returns a tuple with the VersionLock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetComputerPrestageAllOf) GetVersionLockOk() (*int32, bool) {
	if o == nil || o.VersionLock == nil {
		return nil, false
	}
	return o.VersionLock, true
}

// HasVersionLock returns a boolean if a field has been set.
func (o *GetComputerPrestageAllOf) HasVersionLock() bool {
	if o != nil && o.VersionLock != nil {
		return true
	}

	return false
}

// SetVersionLock gets a reference to the given int32 and assigns it to the VersionLock field.
func (o *GetComputerPrestageAllOf) SetVersionLock(v int32) {
	o.VersionLock = &v
}

func (o GetComputerPrestageAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ProfileUUID != nil {
		toSerialize["profileUUID"] = o.ProfileUUID
	}
	if o.SiteId != nil {
		toSerialize["siteId"] = o.SiteId
	}
	if o.VersionLock != nil {
		toSerialize["versionLock"] = o.VersionLock
	}
	return json.Marshal(toSerialize)
}

type NullableGetComputerPrestageAllOf struct {
	value *GetComputerPrestageAllOf
	isSet bool
}

func (v NullableGetComputerPrestageAllOf) Get() *GetComputerPrestageAllOf {
	return v.value
}

func (v *NullableGetComputerPrestageAllOf) Set(val *GetComputerPrestageAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGetComputerPrestageAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGetComputerPrestageAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetComputerPrestageAllOf(val *GetComputerPrestageAllOf) *NullableGetComputerPrestageAllOf {
	return &NullableGetComputerPrestageAllOf{value: val, isSet: true}
}

func (v NullableGetComputerPrestageAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetComputerPrestageAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


