/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// UpdateMobileDevice struct for UpdateMobileDevice
type UpdateMobileDevice struct {
	Name *string `json:"name,omitempty"`
	AssetTag *string `json:"assetTag,omitempty"`
	SiteId *int32 `json:"siteId,omitempty"`
	Location *Location `json:"location,omitempty"`
	UpdatedExtensionAttributes []ExtensionAttribute `json:"updatedExtensionAttributes,omitempty"`
	Ios *UpdateIos `json:"ios,omitempty"`
	AppleTv *UpdateAppleTv `json:"appleTv,omitempty"`
}

// NewUpdateMobileDevice instantiates a new UpdateMobileDevice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMobileDevice() *UpdateMobileDevice {
	this := UpdateMobileDevice{}
	return &this
}

// NewUpdateMobileDeviceWithDefaults instantiates a new UpdateMobileDevice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMobileDeviceWithDefaults() *UpdateMobileDevice {
	this := UpdateMobileDevice{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateMobileDevice) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMobileDevice) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateMobileDevice) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateMobileDevice) SetName(v string) {
	o.Name = &v
}

// GetAssetTag returns the AssetTag field value if set, zero value otherwise.
func (o *UpdateMobileDevice) GetAssetTag() string {
	if o == nil || o.AssetTag == nil {
		var ret string
		return ret
	}
	return *o.AssetTag
}

// GetAssetTagOk returns a tuple with the AssetTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMobileDevice) GetAssetTagOk() (*string, bool) {
	if o == nil || o.AssetTag == nil {
		return nil, false
	}
	return o.AssetTag, true
}

// HasAssetTag returns a boolean if a field has been set.
func (o *UpdateMobileDevice) HasAssetTag() bool {
	if o != nil && o.AssetTag != nil {
		return true
	}

	return false
}

// SetAssetTag gets a reference to the given string and assigns it to the AssetTag field.
func (o *UpdateMobileDevice) SetAssetTag(v string) {
	o.AssetTag = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *UpdateMobileDevice) GetSiteId() int32 {
	if o == nil || o.SiteId == nil {
		var ret int32
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMobileDevice) GetSiteIdOk() (*int32, bool) {
	if o == nil || o.SiteId == nil {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *UpdateMobileDevice) HasSiteId() bool {
	if o != nil && o.SiteId != nil {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given int32 and assigns it to the SiteId field.
func (o *UpdateMobileDevice) SetSiteId(v int32) {
	o.SiteId = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *UpdateMobileDevice) GetLocation() Location {
	if o == nil || o.Location == nil {
		var ret Location
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMobileDevice) GetLocationOk() (*Location, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *UpdateMobileDevice) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given Location and assigns it to the Location field.
func (o *UpdateMobileDevice) SetLocation(v Location) {
	o.Location = &v
}

// GetUpdatedExtensionAttributes returns the UpdatedExtensionAttributes field value if set, zero value otherwise.
func (o *UpdateMobileDevice) GetUpdatedExtensionAttributes() []ExtensionAttribute {
	if o == nil || o.UpdatedExtensionAttributes == nil {
		var ret []ExtensionAttribute
		return ret
	}
	return o.UpdatedExtensionAttributes
}

// GetUpdatedExtensionAttributesOk returns a tuple with the UpdatedExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMobileDevice) GetUpdatedExtensionAttributesOk() ([]ExtensionAttribute, bool) {
	if o == nil || o.UpdatedExtensionAttributes == nil {
		return nil, false
	}
	return o.UpdatedExtensionAttributes, true
}

// HasUpdatedExtensionAttributes returns a boolean if a field has been set.
func (o *UpdateMobileDevice) HasUpdatedExtensionAttributes() bool {
	if o != nil && o.UpdatedExtensionAttributes != nil {
		return true
	}

	return false
}

// SetUpdatedExtensionAttributes gets a reference to the given []ExtensionAttribute and assigns it to the UpdatedExtensionAttributes field.
func (o *UpdateMobileDevice) SetUpdatedExtensionAttributes(v []ExtensionAttribute) {
	o.UpdatedExtensionAttributes = v
}

// GetIos returns the Ios field value if set, zero value otherwise.
func (o *UpdateMobileDevice) GetIos() UpdateIos {
	if o == nil || o.Ios == nil {
		var ret UpdateIos
		return ret
	}
	return *o.Ios
}

// GetIosOk returns a tuple with the Ios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMobileDevice) GetIosOk() (*UpdateIos, bool) {
	if o == nil || o.Ios == nil {
		return nil, false
	}
	return o.Ios, true
}

// HasIos returns a boolean if a field has been set.
func (o *UpdateMobileDevice) HasIos() bool {
	if o != nil && o.Ios != nil {
		return true
	}

	return false
}

// SetIos gets a reference to the given UpdateIos and assigns it to the Ios field.
func (o *UpdateMobileDevice) SetIos(v UpdateIos) {
	o.Ios = &v
}

// GetAppleTv returns the AppleTv field value if set, zero value otherwise.
func (o *UpdateMobileDevice) GetAppleTv() UpdateAppleTv {
	if o == nil || o.AppleTv == nil {
		var ret UpdateAppleTv
		return ret
	}
	return *o.AppleTv
}

// GetAppleTvOk returns a tuple with the AppleTv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMobileDevice) GetAppleTvOk() (*UpdateAppleTv, bool) {
	if o == nil || o.AppleTv == nil {
		return nil, false
	}
	return o.AppleTv, true
}

// HasAppleTv returns a boolean if a field has been set.
func (o *UpdateMobileDevice) HasAppleTv() bool {
	if o != nil && o.AppleTv != nil {
		return true
	}

	return false
}

// SetAppleTv gets a reference to the given UpdateAppleTv and assigns it to the AppleTv field.
func (o *UpdateMobileDevice) SetAppleTv(v UpdateAppleTv) {
	o.AppleTv = &v
}

func (o UpdateMobileDevice) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.AssetTag != nil {
		toSerialize["assetTag"] = o.AssetTag
	}
	if o.SiteId != nil {
		toSerialize["siteId"] = o.SiteId
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.UpdatedExtensionAttributes != nil {
		toSerialize["updatedExtensionAttributes"] = o.UpdatedExtensionAttributes
	}
	if o.Ios != nil {
		toSerialize["ios"] = o.Ios
	}
	if o.AppleTv != nil {
		toSerialize["appleTv"] = o.AppleTv
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateMobileDevice struct {
	value *UpdateMobileDevice
	isSet bool
}

func (v NullableUpdateMobileDevice) Get() *UpdateMobileDevice {
	return v.value
}

func (v *NullableUpdateMobileDevice) Set(val *UpdateMobileDevice) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMobileDevice) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMobileDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMobileDevice(val *UpdateMobileDevice) *NullableUpdateMobileDevice {
	return &NullableUpdateMobileDevice{value: val, isSet: true}
}

func (v NullableUpdateMobileDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMobileDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


