/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the MacOsBrandingConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MacOsBrandingConfiguration{}

// MacOsBrandingConfiguration struct for MacOsBrandingConfiguration
type MacOsBrandingConfiguration struct {
	Id *string `json:"id,omitempty"`
	ApplicationName *string `json:"applicationName,omitempty"`
	BrandingName *string `json:"brandingName,omitempty"`
	BrandingNameSecondary *string `json:"brandingNameSecondary,omitempty"`
	IconId *int64 `json:"iconId,omitempty"`
	BrandingHeaderImageId *int64 `json:"brandingHeaderImageId,omitempty"`
}

// NewMacOsBrandingConfiguration instantiates a new MacOsBrandingConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMacOsBrandingConfiguration() *MacOsBrandingConfiguration {
	this := MacOsBrandingConfiguration{}
	return &this
}

// NewMacOsBrandingConfigurationWithDefaults instantiates a new MacOsBrandingConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMacOsBrandingConfigurationWithDefaults() *MacOsBrandingConfiguration {
	this := MacOsBrandingConfiguration{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MacOsBrandingConfiguration) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MacOsBrandingConfiguration) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MacOsBrandingConfiguration) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MacOsBrandingConfiguration) SetId(v string) {
	o.Id = &v
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise.
func (o *MacOsBrandingConfiguration) GetApplicationName() string {
	if o == nil || IsNil(o.ApplicationName) {
		var ret string
		return ret
	}
	return *o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MacOsBrandingConfiguration) GetApplicationNameOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationName) {
		return nil, false
	}
	return o.ApplicationName, true
}

// HasApplicationName returns a boolean if a field has been set.
func (o *MacOsBrandingConfiguration) HasApplicationName() bool {
	if o != nil && !IsNil(o.ApplicationName) {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given string and assigns it to the ApplicationName field.
func (o *MacOsBrandingConfiguration) SetApplicationName(v string) {
	o.ApplicationName = &v
}

// GetBrandingName returns the BrandingName field value if set, zero value otherwise.
func (o *MacOsBrandingConfiguration) GetBrandingName() string {
	if o == nil || IsNil(o.BrandingName) {
		var ret string
		return ret
	}
	return *o.BrandingName
}

// GetBrandingNameOk returns a tuple with the BrandingName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MacOsBrandingConfiguration) GetBrandingNameOk() (*string, bool) {
	if o == nil || IsNil(o.BrandingName) {
		return nil, false
	}
	return o.BrandingName, true
}

// HasBrandingName returns a boolean if a field has been set.
func (o *MacOsBrandingConfiguration) HasBrandingName() bool {
	if o != nil && !IsNil(o.BrandingName) {
		return true
	}

	return false
}

// SetBrandingName gets a reference to the given string and assigns it to the BrandingName field.
func (o *MacOsBrandingConfiguration) SetBrandingName(v string) {
	o.BrandingName = &v
}

// GetBrandingNameSecondary returns the BrandingNameSecondary field value if set, zero value otherwise.
func (o *MacOsBrandingConfiguration) GetBrandingNameSecondary() string {
	if o == nil || IsNil(o.BrandingNameSecondary) {
		var ret string
		return ret
	}
	return *o.BrandingNameSecondary
}

// GetBrandingNameSecondaryOk returns a tuple with the BrandingNameSecondary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MacOsBrandingConfiguration) GetBrandingNameSecondaryOk() (*string, bool) {
	if o == nil || IsNil(o.BrandingNameSecondary) {
		return nil, false
	}
	return o.BrandingNameSecondary, true
}

// HasBrandingNameSecondary returns a boolean if a field has been set.
func (o *MacOsBrandingConfiguration) HasBrandingNameSecondary() bool {
	if o != nil && !IsNil(o.BrandingNameSecondary) {
		return true
	}

	return false
}

// SetBrandingNameSecondary gets a reference to the given string and assigns it to the BrandingNameSecondary field.
func (o *MacOsBrandingConfiguration) SetBrandingNameSecondary(v string) {
	o.BrandingNameSecondary = &v
}

// GetIconId returns the IconId field value if set, zero value otherwise.
func (o *MacOsBrandingConfiguration) GetIconId() int64 {
	if o == nil || IsNil(o.IconId) {
		var ret int64
		return ret
	}
	return *o.IconId
}

// GetIconIdOk returns a tuple with the IconId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MacOsBrandingConfiguration) GetIconIdOk() (*int64, bool) {
	if o == nil || IsNil(o.IconId) {
		return nil, false
	}
	return o.IconId, true
}

// HasIconId returns a boolean if a field has been set.
func (o *MacOsBrandingConfiguration) HasIconId() bool {
	if o != nil && !IsNil(o.IconId) {
		return true
	}

	return false
}

// SetIconId gets a reference to the given int64 and assigns it to the IconId field.
func (o *MacOsBrandingConfiguration) SetIconId(v int64) {
	o.IconId = &v
}

// GetBrandingHeaderImageId returns the BrandingHeaderImageId field value if set, zero value otherwise.
func (o *MacOsBrandingConfiguration) GetBrandingHeaderImageId() int64 {
	if o == nil || IsNil(o.BrandingHeaderImageId) {
		var ret int64
		return ret
	}
	return *o.BrandingHeaderImageId
}

// GetBrandingHeaderImageIdOk returns a tuple with the BrandingHeaderImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MacOsBrandingConfiguration) GetBrandingHeaderImageIdOk() (*int64, bool) {
	if o == nil || IsNil(o.BrandingHeaderImageId) {
		return nil, false
	}
	return o.BrandingHeaderImageId, true
}

// HasBrandingHeaderImageId returns a boolean if a field has been set.
func (o *MacOsBrandingConfiguration) HasBrandingHeaderImageId() bool {
	if o != nil && !IsNil(o.BrandingHeaderImageId) {
		return true
	}

	return false
}

// SetBrandingHeaderImageId gets a reference to the given int64 and assigns it to the BrandingHeaderImageId field.
func (o *MacOsBrandingConfiguration) SetBrandingHeaderImageId(v int64) {
	o.BrandingHeaderImageId = &v
}

func (o MacOsBrandingConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MacOsBrandingConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ApplicationName) {
		toSerialize["applicationName"] = o.ApplicationName
	}
	if !IsNil(o.BrandingName) {
		toSerialize["brandingName"] = o.BrandingName
	}
	if !IsNil(o.BrandingNameSecondary) {
		toSerialize["brandingNameSecondary"] = o.BrandingNameSecondary
	}
	if !IsNil(o.IconId) {
		toSerialize["iconId"] = o.IconId
	}
	if !IsNil(o.BrandingHeaderImageId) {
		toSerialize["brandingHeaderImageId"] = o.BrandingHeaderImageId
	}
	return toSerialize, nil
}

type NullableMacOsBrandingConfiguration struct {
	value *MacOsBrandingConfiguration
	isSet bool
}

func (v NullableMacOsBrandingConfiguration) Get() *MacOsBrandingConfiguration {
	return v.value
}

func (v *NullableMacOsBrandingConfiguration) Set(val *MacOsBrandingConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableMacOsBrandingConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableMacOsBrandingConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMacOsBrandingConfiguration(val *MacOsBrandingConfiguration) *NullableMacOsBrandingConfiguration {
	return &NullableMacOsBrandingConfiguration{value: val, isSet: true}
}

func (v NullableMacOsBrandingConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMacOsBrandingConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


