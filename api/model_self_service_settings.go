/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the SelfServiceSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SelfServiceSettings{}

// SelfServiceSettings object representation of Self Service settings 
type SelfServiceSettings struct {
	InstallSettings *SelfServiceInstallSettings `json:"installSettings,omitempty"`
	LoginSettings *SelfServiceLoginSettings `json:"loginSettings,omitempty"`
	ConfigurationSettings *SelfServiceInteractionSettings `json:"configurationSettings,omitempty"`
}

// NewSelfServiceSettings instantiates a new SelfServiceSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSelfServiceSettings() *SelfServiceSettings {
	this := SelfServiceSettings{}
	return &this
}

// NewSelfServiceSettingsWithDefaults instantiates a new SelfServiceSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSelfServiceSettingsWithDefaults() *SelfServiceSettings {
	this := SelfServiceSettings{}
	return &this
}

// GetInstallSettings returns the InstallSettings field value if set, zero value otherwise.
func (o *SelfServiceSettings) GetInstallSettings() SelfServiceInstallSettings {
	if o == nil || IsNil(o.InstallSettings) {
		var ret SelfServiceInstallSettings
		return ret
	}
	return *o.InstallSettings
}

// GetInstallSettingsOk returns a tuple with the InstallSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfServiceSettings) GetInstallSettingsOk() (*SelfServiceInstallSettings, bool) {
	if o == nil || IsNil(o.InstallSettings) {
		return nil, false
	}
	return o.InstallSettings, true
}

// HasInstallSettings returns a boolean if a field has been set.
func (o *SelfServiceSettings) HasInstallSettings() bool {
	if o != nil && !IsNil(o.InstallSettings) {
		return true
	}

	return false
}

// SetInstallSettings gets a reference to the given SelfServiceInstallSettings and assigns it to the InstallSettings field.
func (o *SelfServiceSettings) SetInstallSettings(v SelfServiceInstallSettings) {
	o.InstallSettings = &v
}

// GetLoginSettings returns the LoginSettings field value if set, zero value otherwise.
func (o *SelfServiceSettings) GetLoginSettings() SelfServiceLoginSettings {
	if o == nil || IsNil(o.LoginSettings) {
		var ret SelfServiceLoginSettings
		return ret
	}
	return *o.LoginSettings
}

// GetLoginSettingsOk returns a tuple with the LoginSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfServiceSettings) GetLoginSettingsOk() (*SelfServiceLoginSettings, bool) {
	if o == nil || IsNil(o.LoginSettings) {
		return nil, false
	}
	return o.LoginSettings, true
}

// HasLoginSettings returns a boolean if a field has been set.
func (o *SelfServiceSettings) HasLoginSettings() bool {
	if o != nil && !IsNil(o.LoginSettings) {
		return true
	}

	return false
}

// SetLoginSettings gets a reference to the given SelfServiceLoginSettings and assigns it to the LoginSettings field.
func (o *SelfServiceSettings) SetLoginSettings(v SelfServiceLoginSettings) {
	o.LoginSettings = &v
}

// GetConfigurationSettings returns the ConfigurationSettings field value if set, zero value otherwise.
func (o *SelfServiceSettings) GetConfigurationSettings() SelfServiceInteractionSettings {
	if o == nil || IsNil(o.ConfigurationSettings) {
		var ret SelfServiceInteractionSettings
		return ret
	}
	return *o.ConfigurationSettings
}

// GetConfigurationSettingsOk returns a tuple with the ConfigurationSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfServiceSettings) GetConfigurationSettingsOk() (*SelfServiceInteractionSettings, bool) {
	if o == nil || IsNil(o.ConfigurationSettings) {
		return nil, false
	}
	return o.ConfigurationSettings, true
}

// HasConfigurationSettings returns a boolean if a field has been set.
func (o *SelfServiceSettings) HasConfigurationSettings() bool {
	if o != nil && !IsNil(o.ConfigurationSettings) {
		return true
	}

	return false
}

// SetConfigurationSettings gets a reference to the given SelfServiceInteractionSettings and assigns it to the ConfigurationSettings field.
func (o *SelfServiceSettings) SetConfigurationSettings(v SelfServiceInteractionSettings) {
	o.ConfigurationSettings = &v
}

func (o SelfServiceSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SelfServiceSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstallSettings) {
		toSerialize["installSettings"] = o.InstallSettings
	}
	if !IsNil(o.LoginSettings) {
		toSerialize["loginSettings"] = o.LoginSettings
	}
	if !IsNil(o.ConfigurationSettings) {
		toSerialize["configurationSettings"] = o.ConfigurationSettings
	}
	return toSerialize, nil
}

type NullableSelfServiceSettings struct {
	value *SelfServiceSettings
	isSet bool
}

func (v NullableSelfServiceSettings) Get() *SelfServiceSettings {
	return v.value
}

func (v *NullableSelfServiceSettings) Set(val *SelfServiceSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableSelfServiceSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableSelfServiceSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSelfServiceSettings(val *SelfServiceSettings) *NullableSelfServiceSettings {
	return &NullableSelfServiceSettings{value: val, isSet: true}
}

func (v NullableSelfServiceSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSelfServiceSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


