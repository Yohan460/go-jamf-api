/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the MobileDeviceLostModeLocation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MobileDeviceLostModeLocation{}

// MobileDeviceLostModeLocation struct for MobileDeviceLostModeLocation
type MobileDeviceLostModeLocation struct {
	LastLocationUpdate *time.Time `json:"lastLocationUpdate,omitempty"`
	LostModeLocationHorizontalAccuracyMeters *float32 `json:"lostModeLocationHorizontalAccuracyMeters,omitempty"`
	LostModeLocationVerticalAccuracyMeters *float32 `json:"lostModeLocationVerticalAccuracyMeters,omitempty"`
	LostModeLocationAltitudeMeters *float32 `json:"lostModeLocationAltitudeMeters,omitempty"`
	LostModeLocationSpeedMetersPerSecond *float32 `json:"lostModeLocationSpeedMetersPerSecond,omitempty"`
	LostModeLocationCourseDegrees *float32 `json:"lostModeLocationCourseDegrees,omitempty"`
	LostModeLocationTimestamp *string `json:"lostModeLocationTimestamp,omitempty"`
}

// NewMobileDeviceLostModeLocation instantiates a new MobileDeviceLostModeLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileDeviceLostModeLocation() *MobileDeviceLostModeLocation {
	this := MobileDeviceLostModeLocation{}
	return &this
}

// NewMobileDeviceLostModeLocationWithDefaults instantiates a new MobileDeviceLostModeLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileDeviceLostModeLocationWithDefaults() *MobileDeviceLostModeLocation {
	this := MobileDeviceLostModeLocation{}
	return &this
}

// GetLastLocationUpdate returns the LastLocationUpdate field value if set, zero value otherwise.
func (o *MobileDeviceLostModeLocation) GetLastLocationUpdate() time.Time {
	if o == nil || IsNil(o.LastLocationUpdate) {
		var ret time.Time
		return ret
	}
	return *o.LastLocationUpdate
}

// GetLastLocationUpdateOk returns a tuple with the LastLocationUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceLostModeLocation) GetLastLocationUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastLocationUpdate) {
		return nil, false
	}
	return o.LastLocationUpdate, true
}

// HasLastLocationUpdate returns a boolean if a field has been set.
func (o *MobileDeviceLostModeLocation) HasLastLocationUpdate() bool {
	if o != nil && !IsNil(o.LastLocationUpdate) {
		return true
	}

	return false
}

// SetLastLocationUpdate gets a reference to the given time.Time and assigns it to the LastLocationUpdate field.
func (o *MobileDeviceLostModeLocation) SetLastLocationUpdate(v time.Time) {
	o.LastLocationUpdate = &v
}

// GetLostModeLocationHorizontalAccuracyMeters returns the LostModeLocationHorizontalAccuracyMeters field value if set, zero value otherwise.
func (o *MobileDeviceLostModeLocation) GetLostModeLocationHorizontalAccuracyMeters() float32 {
	if o == nil || IsNil(o.LostModeLocationHorizontalAccuracyMeters) {
		var ret float32
		return ret
	}
	return *o.LostModeLocationHorizontalAccuracyMeters
}

// GetLostModeLocationHorizontalAccuracyMetersOk returns a tuple with the LostModeLocationHorizontalAccuracyMeters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceLostModeLocation) GetLostModeLocationHorizontalAccuracyMetersOk() (*float32, bool) {
	if o == nil || IsNil(o.LostModeLocationHorizontalAccuracyMeters) {
		return nil, false
	}
	return o.LostModeLocationHorizontalAccuracyMeters, true
}

// HasLostModeLocationHorizontalAccuracyMeters returns a boolean if a field has been set.
func (o *MobileDeviceLostModeLocation) HasLostModeLocationHorizontalAccuracyMeters() bool {
	if o != nil && !IsNil(o.LostModeLocationHorizontalAccuracyMeters) {
		return true
	}

	return false
}

// SetLostModeLocationHorizontalAccuracyMeters gets a reference to the given float32 and assigns it to the LostModeLocationHorizontalAccuracyMeters field.
func (o *MobileDeviceLostModeLocation) SetLostModeLocationHorizontalAccuracyMeters(v float32) {
	o.LostModeLocationHorizontalAccuracyMeters = &v
}

// GetLostModeLocationVerticalAccuracyMeters returns the LostModeLocationVerticalAccuracyMeters field value if set, zero value otherwise.
func (o *MobileDeviceLostModeLocation) GetLostModeLocationVerticalAccuracyMeters() float32 {
	if o == nil || IsNil(o.LostModeLocationVerticalAccuracyMeters) {
		var ret float32
		return ret
	}
	return *o.LostModeLocationVerticalAccuracyMeters
}

// GetLostModeLocationVerticalAccuracyMetersOk returns a tuple with the LostModeLocationVerticalAccuracyMeters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceLostModeLocation) GetLostModeLocationVerticalAccuracyMetersOk() (*float32, bool) {
	if o == nil || IsNil(o.LostModeLocationVerticalAccuracyMeters) {
		return nil, false
	}
	return o.LostModeLocationVerticalAccuracyMeters, true
}

// HasLostModeLocationVerticalAccuracyMeters returns a boolean if a field has been set.
func (o *MobileDeviceLostModeLocation) HasLostModeLocationVerticalAccuracyMeters() bool {
	if o != nil && !IsNil(o.LostModeLocationVerticalAccuracyMeters) {
		return true
	}

	return false
}

// SetLostModeLocationVerticalAccuracyMeters gets a reference to the given float32 and assigns it to the LostModeLocationVerticalAccuracyMeters field.
func (o *MobileDeviceLostModeLocation) SetLostModeLocationVerticalAccuracyMeters(v float32) {
	o.LostModeLocationVerticalAccuracyMeters = &v
}

// GetLostModeLocationAltitudeMeters returns the LostModeLocationAltitudeMeters field value if set, zero value otherwise.
func (o *MobileDeviceLostModeLocation) GetLostModeLocationAltitudeMeters() float32 {
	if o == nil || IsNil(o.LostModeLocationAltitudeMeters) {
		var ret float32
		return ret
	}
	return *o.LostModeLocationAltitudeMeters
}

// GetLostModeLocationAltitudeMetersOk returns a tuple with the LostModeLocationAltitudeMeters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceLostModeLocation) GetLostModeLocationAltitudeMetersOk() (*float32, bool) {
	if o == nil || IsNil(o.LostModeLocationAltitudeMeters) {
		return nil, false
	}
	return o.LostModeLocationAltitudeMeters, true
}

// HasLostModeLocationAltitudeMeters returns a boolean if a field has been set.
func (o *MobileDeviceLostModeLocation) HasLostModeLocationAltitudeMeters() bool {
	if o != nil && !IsNil(o.LostModeLocationAltitudeMeters) {
		return true
	}

	return false
}

// SetLostModeLocationAltitudeMeters gets a reference to the given float32 and assigns it to the LostModeLocationAltitudeMeters field.
func (o *MobileDeviceLostModeLocation) SetLostModeLocationAltitudeMeters(v float32) {
	o.LostModeLocationAltitudeMeters = &v
}

// GetLostModeLocationSpeedMetersPerSecond returns the LostModeLocationSpeedMetersPerSecond field value if set, zero value otherwise.
func (o *MobileDeviceLostModeLocation) GetLostModeLocationSpeedMetersPerSecond() float32 {
	if o == nil || IsNil(o.LostModeLocationSpeedMetersPerSecond) {
		var ret float32
		return ret
	}
	return *o.LostModeLocationSpeedMetersPerSecond
}

// GetLostModeLocationSpeedMetersPerSecondOk returns a tuple with the LostModeLocationSpeedMetersPerSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceLostModeLocation) GetLostModeLocationSpeedMetersPerSecondOk() (*float32, bool) {
	if o == nil || IsNil(o.LostModeLocationSpeedMetersPerSecond) {
		return nil, false
	}
	return o.LostModeLocationSpeedMetersPerSecond, true
}

// HasLostModeLocationSpeedMetersPerSecond returns a boolean if a field has been set.
func (o *MobileDeviceLostModeLocation) HasLostModeLocationSpeedMetersPerSecond() bool {
	if o != nil && !IsNil(o.LostModeLocationSpeedMetersPerSecond) {
		return true
	}

	return false
}

// SetLostModeLocationSpeedMetersPerSecond gets a reference to the given float32 and assigns it to the LostModeLocationSpeedMetersPerSecond field.
func (o *MobileDeviceLostModeLocation) SetLostModeLocationSpeedMetersPerSecond(v float32) {
	o.LostModeLocationSpeedMetersPerSecond = &v
}

// GetLostModeLocationCourseDegrees returns the LostModeLocationCourseDegrees field value if set, zero value otherwise.
func (o *MobileDeviceLostModeLocation) GetLostModeLocationCourseDegrees() float32 {
	if o == nil || IsNil(o.LostModeLocationCourseDegrees) {
		var ret float32
		return ret
	}
	return *o.LostModeLocationCourseDegrees
}

// GetLostModeLocationCourseDegreesOk returns a tuple with the LostModeLocationCourseDegrees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceLostModeLocation) GetLostModeLocationCourseDegreesOk() (*float32, bool) {
	if o == nil || IsNil(o.LostModeLocationCourseDegrees) {
		return nil, false
	}
	return o.LostModeLocationCourseDegrees, true
}

// HasLostModeLocationCourseDegrees returns a boolean if a field has been set.
func (o *MobileDeviceLostModeLocation) HasLostModeLocationCourseDegrees() bool {
	if o != nil && !IsNil(o.LostModeLocationCourseDegrees) {
		return true
	}

	return false
}

// SetLostModeLocationCourseDegrees gets a reference to the given float32 and assigns it to the LostModeLocationCourseDegrees field.
func (o *MobileDeviceLostModeLocation) SetLostModeLocationCourseDegrees(v float32) {
	o.LostModeLocationCourseDegrees = &v
}

// GetLostModeLocationTimestamp returns the LostModeLocationTimestamp field value if set, zero value otherwise.
func (o *MobileDeviceLostModeLocation) GetLostModeLocationTimestamp() string {
	if o == nil || IsNil(o.LostModeLocationTimestamp) {
		var ret string
		return ret
	}
	return *o.LostModeLocationTimestamp
}

// GetLostModeLocationTimestampOk returns a tuple with the LostModeLocationTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceLostModeLocation) GetLostModeLocationTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.LostModeLocationTimestamp) {
		return nil, false
	}
	return o.LostModeLocationTimestamp, true
}

// HasLostModeLocationTimestamp returns a boolean if a field has been set.
func (o *MobileDeviceLostModeLocation) HasLostModeLocationTimestamp() bool {
	if o != nil && !IsNil(o.LostModeLocationTimestamp) {
		return true
	}

	return false
}

// SetLostModeLocationTimestamp gets a reference to the given string and assigns it to the LostModeLocationTimestamp field.
func (o *MobileDeviceLostModeLocation) SetLostModeLocationTimestamp(v string) {
	o.LostModeLocationTimestamp = &v
}

func (o MobileDeviceLostModeLocation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MobileDeviceLostModeLocation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LastLocationUpdate) {
		toSerialize["lastLocationUpdate"] = o.LastLocationUpdate
	}
	if !IsNil(o.LostModeLocationHorizontalAccuracyMeters) {
		toSerialize["lostModeLocationHorizontalAccuracyMeters"] = o.LostModeLocationHorizontalAccuracyMeters
	}
	if !IsNil(o.LostModeLocationVerticalAccuracyMeters) {
		toSerialize["lostModeLocationVerticalAccuracyMeters"] = o.LostModeLocationVerticalAccuracyMeters
	}
	if !IsNil(o.LostModeLocationAltitudeMeters) {
		toSerialize["lostModeLocationAltitudeMeters"] = o.LostModeLocationAltitudeMeters
	}
	if !IsNil(o.LostModeLocationSpeedMetersPerSecond) {
		toSerialize["lostModeLocationSpeedMetersPerSecond"] = o.LostModeLocationSpeedMetersPerSecond
	}
	if !IsNil(o.LostModeLocationCourseDegrees) {
		toSerialize["lostModeLocationCourseDegrees"] = o.LostModeLocationCourseDegrees
	}
	if !IsNil(o.LostModeLocationTimestamp) {
		toSerialize["lostModeLocationTimestamp"] = o.LostModeLocationTimestamp
	}
	return toSerialize, nil
}

type NullableMobileDeviceLostModeLocation struct {
	value *MobileDeviceLostModeLocation
	isSet bool
}

func (v NullableMobileDeviceLostModeLocation) Get() *MobileDeviceLostModeLocation {
	return v.value
}

func (v *NullableMobileDeviceLostModeLocation) Set(val *MobileDeviceLostModeLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileDeviceLostModeLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileDeviceLostModeLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileDeviceLostModeLocation(val *MobileDeviceLostModeLocation) *NullableMobileDeviceLostModeLocation {
	return &NullableMobileDeviceLostModeLocation{value: val, isSet: true}
}

func (v NullableMobileDeviceLostModeLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileDeviceLostModeLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


