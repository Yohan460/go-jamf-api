/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EnrollmentCustomizationPanelText type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnrollmentCustomizationPanelText{}

// EnrollmentCustomizationPanelText struct for EnrollmentCustomizationPanelText
type EnrollmentCustomizationPanelText struct {
	DisplayName string `json:"displayName"`
	Rank int64 `json:"rank"`
	Body string `json:"body"`
	Subtext *string `json:"subtext,omitempty"`
	Title string `json:"title"`
	BackButtonText string `json:"backButtonText"`
	ContinueButtonText string `json:"continueButtonText"`
}

type _EnrollmentCustomizationPanelText EnrollmentCustomizationPanelText

// NewEnrollmentCustomizationPanelText instantiates a new EnrollmentCustomizationPanelText object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnrollmentCustomizationPanelText(displayName string, rank int64, body string, title string, backButtonText string, continueButtonText string) *EnrollmentCustomizationPanelText {
	this := EnrollmentCustomizationPanelText{}
	this.DisplayName = displayName
	this.Rank = rank
	this.Body = body
	this.Title = title
	this.BackButtonText = backButtonText
	this.ContinueButtonText = continueButtonText
	return &this
}

// NewEnrollmentCustomizationPanelTextWithDefaults instantiates a new EnrollmentCustomizationPanelText object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnrollmentCustomizationPanelTextWithDefaults() *EnrollmentCustomizationPanelText {
	this := EnrollmentCustomizationPanelText{}
	return &this
}

// GetDisplayName returns the DisplayName field value
func (o *EnrollmentCustomizationPanelText) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *EnrollmentCustomizationPanelText) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *EnrollmentCustomizationPanelText) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetRank returns the Rank field value
func (o *EnrollmentCustomizationPanelText) GetRank() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Rank
}

// GetRankOk returns a tuple with the Rank field value
// and a boolean to check if the value has been set.
func (o *EnrollmentCustomizationPanelText) GetRankOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rank, true
}

// SetRank sets field value
func (o *EnrollmentCustomizationPanelText) SetRank(v int64) {
	o.Rank = v
}

// GetBody returns the Body field value
func (o *EnrollmentCustomizationPanelText) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *EnrollmentCustomizationPanelText) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *EnrollmentCustomizationPanelText) SetBody(v string) {
	o.Body = v
}

// GetSubtext returns the Subtext field value if set, zero value otherwise.
func (o *EnrollmentCustomizationPanelText) GetSubtext() string {
	if o == nil || IsNil(o.Subtext) {
		var ret string
		return ret
	}
	return *o.Subtext
}

// GetSubtextOk returns a tuple with the Subtext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentCustomizationPanelText) GetSubtextOk() (*string, bool) {
	if o == nil || IsNil(o.Subtext) {
		return nil, false
	}
	return o.Subtext, true
}

// HasSubtext returns a boolean if a field has been set.
func (o *EnrollmentCustomizationPanelText) HasSubtext() bool {
	if o != nil && !IsNil(o.Subtext) {
		return true
	}

	return false
}

// SetSubtext gets a reference to the given string and assigns it to the Subtext field.
func (o *EnrollmentCustomizationPanelText) SetSubtext(v string) {
	o.Subtext = &v
}

// GetTitle returns the Title field value
func (o *EnrollmentCustomizationPanelText) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *EnrollmentCustomizationPanelText) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *EnrollmentCustomizationPanelText) SetTitle(v string) {
	o.Title = v
}

// GetBackButtonText returns the BackButtonText field value
func (o *EnrollmentCustomizationPanelText) GetBackButtonText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackButtonText
}

// GetBackButtonTextOk returns a tuple with the BackButtonText field value
// and a boolean to check if the value has been set.
func (o *EnrollmentCustomizationPanelText) GetBackButtonTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackButtonText, true
}

// SetBackButtonText sets field value
func (o *EnrollmentCustomizationPanelText) SetBackButtonText(v string) {
	o.BackButtonText = v
}

// GetContinueButtonText returns the ContinueButtonText field value
func (o *EnrollmentCustomizationPanelText) GetContinueButtonText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContinueButtonText
}

// GetContinueButtonTextOk returns a tuple with the ContinueButtonText field value
// and a boolean to check if the value has been set.
func (o *EnrollmentCustomizationPanelText) GetContinueButtonTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContinueButtonText, true
}

// SetContinueButtonText sets field value
func (o *EnrollmentCustomizationPanelText) SetContinueButtonText(v string) {
	o.ContinueButtonText = v
}

func (o EnrollmentCustomizationPanelText) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnrollmentCustomizationPanelText) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["displayName"] = o.DisplayName
	toSerialize["rank"] = o.Rank
	toSerialize["body"] = o.Body
	if !IsNil(o.Subtext) {
		toSerialize["subtext"] = o.Subtext
	}
	toSerialize["title"] = o.Title
	toSerialize["backButtonText"] = o.BackButtonText
	toSerialize["continueButtonText"] = o.ContinueButtonText
	return toSerialize, nil
}

func (o *EnrollmentCustomizationPanelText) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"displayName",
		"rank",
		"body",
		"title",
		"backButtonText",
		"continueButtonText",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEnrollmentCustomizationPanelText := _EnrollmentCustomizationPanelText{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEnrollmentCustomizationPanelText)

	if err != nil {
		return err
	}

	*o = EnrollmentCustomizationPanelText(varEnrollmentCustomizationPanelText)

	return err
}

type NullableEnrollmentCustomizationPanelText struct {
	value *EnrollmentCustomizationPanelText
	isSet bool
}

func (v NullableEnrollmentCustomizationPanelText) Get() *EnrollmentCustomizationPanelText {
	return v.value
}

func (v *NullableEnrollmentCustomizationPanelText) Set(val *EnrollmentCustomizationPanelText) {
	v.value = val
	v.isSet = true
}

func (v NullableEnrollmentCustomizationPanelText) IsSet() bool {
	return v.isSet
}

func (v *NullableEnrollmentCustomizationPanelText) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnrollmentCustomizationPanelText(val *EnrollmentCustomizationPanelText) *NullableEnrollmentCustomizationPanelText {
	return &NullableEnrollmentCustomizationPanelText{value: val, isSet: true}
}

func (v NullableEnrollmentCustomizationPanelText) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnrollmentCustomizationPanelText) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


