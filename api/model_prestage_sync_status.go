/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PrestageSyncStatus struct for PrestageSyncStatus
type PrestageSyncStatus struct {
	SyncState *string `json:"syncState,omitempty"`
	PrestageId *int32 `json:"prestageId,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`
}

// NewPrestageSyncStatus instantiates a new PrestageSyncStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrestageSyncStatus() *PrestageSyncStatus {
	this := PrestageSyncStatus{}
	return &this
}

// NewPrestageSyncStatusWithDefaults instantiates a new PrestageSyncStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrestageSyncStatusWithDefaults() *PrestageSyncStatus {
	this := PrestageSyncStatus{}
	return &this
}

// GetSyncState returns the SyncState field value if set, zero value otherwise.
func (o *PrestageSyncStatus) GetSyncState() string {
	if o == nil || o.SyncState == nil {
		var ret string
		return ret
	}
	return *o.SyncState
}

// GetSyncStateOk returns a tuple with the SyncState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrestageSyncStatus) GetSyncStateOk() (*string, bool) {
	if o == nil || o.SyncState == nil {
		return nil, false
	}
	return o.SyncState, true
}

// HasSyncState returns a boolean if a field has been set.
func (o *PrestageSyncStatus) HasSyncState() bool {
	if o != nil && o.SyncState != nil {
		return true
	}

	return false
}

// SetSyncState gets a reference to the given string and assigns it to the SyncState field.
func (o *PrestageSyncStatus) SetSyncState(v string) {
	o.SyncState = &v
}

// GetPrestageId returns the PrestageId field value if set, zero value otherwise.
func (o *PrestageSyncStatus) GetPrestageId() int32 {
	if o == nil || o.PrestageId == nil {
		var ret int32
		return ret
	}
	return *o.PrestageId
}

// GetPrestageIdOk returns a tuple with the PrestageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrestageSyncStatus) GetPrestageIdOk() (*int32, bool) {
	if o == nil || o.PrestageId == nil {
		return nil, false
	}
	return o.PrestageId, true
}

// HasPrestageId returns a boolean if a field has been set.
func (o *PrestageSyncStatus) HasPrestageId() bool {
	if o != nil && o.PrestageId != nil {
		return true
	}

	return false
}

// SetPrestageId gets a reference to the given int32 and assigns it to the PrestageId field.
func (o *PrestageSyncStatus) SetPrestageId(v int32) {
	o.PrestageId = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *PrestageSyncStatus) GetTimestamp() string {
	if o == nil || o.Timestamp == nil {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrestageSyncStatus) GetTimestampOk() (*string, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *PrestageSyncStatus) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *PrestageSyncStatus) SetTimestamp(v string) {
	o.Timestamp = &v
}

func (o PrestageSyncStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SyncState != nil {
		toSerialize["syncState"] = o.SyncState
	}
	if o.PrestageId != nil {
		toSerialize["prestageId"] = o.PrestageId
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	return json.Marshal(toSerialize)
}

type NullablePrestageSyncStatus struct {
	value *PrestageSyncStatus
	isSet bool
}

func (v NullablePrestageSyncStatus) Get() *PrestageSyncStatus {
	return v.value
}

func (v *NullablePrestageSyncStatus) Set(val *PrestageSyncStatus) {
	v.value = val
	v.isSet = true
}

func (v NullablePrestageSyncStatus) IsSet() bool {
	return v.isSet
}

func (v *NullablePrestageSyncStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrestageSyncStatus(val *PrestageSyncStatus) *NullablePrestageSyncStatus {
	return &NullablePrestageSyncStatus{value: val, isSet: true}
}

func (v NullablePrestageSyncStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrestageSyncStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


