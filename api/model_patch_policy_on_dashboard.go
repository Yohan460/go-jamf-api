/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PatchPolicyOnDashboard struct for PatchPolicyOnDashboard
type PatchPolicyOnDashboard struct {
	IsOnDashboard *bool `json:"isOnDashboard,omitempty"`
}

// NewPatchPolicyOnDashboard instantiates a new PatchPolicyOnDashboard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchPolicyOnDashboard() *PatchPolicyOnDashboard {
	this := PatchPolicyOnDashboard{}
	return &this
}

// NewPatchPolicyOnDashboardWithDefaults instantiates a new PatchPolicyOnDashboard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchPolicyOnDashboardWithDefaults() *PatchPolicyOnDashboard {
	this := PatchPolicyOnDashboard{}
	return &this
}

// GetIsOnDashboard returns the IsOnDashboard field value if set, zero value otherwise.
func (o *PatchPolicyOnDashboard) GetIsOnDashboard() bool {
	if o == nil || o.IsOnDashboard == nil {
		var ret bool
		return ret
	}
	return *o.IsOnDashboard
}

// GetIsOnDashboardOk returns a tuple with the IsOnDashboard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyOnDashboard) GetIsOnDashboardOk() (*bool, bool) {
	if o == nil || o.IsOnDashboard == nil {
		return nil, false
	}
	return o.IsOnDashboard, true
}

// HasIsOnDashboard returns a boolean if a field has been set.
func (o *PatchPolicyOnDashboard) HasIsOnDashboard() bool {
	if o != nil && o.IsOnDashboard != nil {
		return true
	}

	return false
}

// SetIsOnDashboard gets a reference to the given bool and assigns it to the IsOnDashboard field.
func (o *PatchPolicyOnDashboard) SetIsOnDashboard(v bool) {
	o.IsOnDashboard = &v
}

func (o PatchPolicyOnDashboard) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsOnDashboard != nil {
		toSerialize["isOnDashboard"] = o.IsOnDashboard
	}
	return json.Marshal(toSerialize)
}

type NullablePatchPolicyOnDashboard struct {
	value *PatchPolicyOnDashboard
	isSet bool
}

func (v NullablePatchPolicyOnDashboard) Get() *PatchPolicyOnDashboard {
	return v.value
}

func (v *NullablePatchPolicyOnDashboard) Set(val *PatchPolicyOnDashboard) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchPolicyOnDashboard) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchPolicyOnDashboard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchPolicyOnDashboard(val *PatchPolicyOnDashboard) *NullablePatchPolicyOnDashboard {
	return &NullablePatchPolicyOnDashboard{value: val, isSet: true}
}

func (v NullablePatchPolicyOnDashboard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchPolicyOnDashboard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


