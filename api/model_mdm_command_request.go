/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the MdmCommandRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MdmCommandRequest{}

// MdmCommandRequest struct for MdmCommandRequest
type MdmCommandRequest struct {
	ClientData []MdmCommandClientRequest `json:"clientData,omitempty"`
	CommandData *MdmCommandRequestCommandData `json:"commandData,omitempty"`
}

// NewMdmCommandRequest instantiates a new MdmCommandRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMdmCommandRequest() *MdmCommandRequest {
	this := MdmCommandRequest{}
	return &this
}

// NewMdmCommandRequestWithDefaults instantiates a new MdmCommandRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMdmCommandRequestWithDefaults() *MdmCommandRequest {
	this := MdmCommandRequest{}
	return &this
}

// GetClientData returns the ClientData field value if set, zero value otherwise.
func (o *MdmCommandRequest) GetClientData() []MdmCommandClientRequest {
	if o == nil || IsNil(o.ClientData) {
		var ret []MdmCommandClientRequest
		return ret
	}
	return o.ClientData
}

// GetClientDataOk returns a tuple with the ClientData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MdmCommandRequest) GetClientDataOk() ([]MdmCommandClientRequest, bool) {
	if o == nil || IsNil(o.ClientData) {
		return nil, false
	}
	return o.ClientData, true
}

// HasClientData returns a boolean if a field has been set.
func (o *MdmCommandRequest) HasClientData() bool {
	if o != nil && !IsNil(o.ClientData) {
		return true
	}

	return false
}

// SetClientData gets a reference to the given []MdmCommandClientRequest and assigns it to the ClientData field.
func (o *MdmCommandRequest) SetClientData(v []MdmCommandClientRequest) {
	o.ClientData = v
}

// GetCommandData returns the CommandData field value if set, zero value otherwise.
func (o *MdmCommandRequest) GetCommandData() MdmCommandRequestCommandData {
	if o == nil || IsNil(o.CommandData) {
		var ret MdmCommandRequestCommandData
		return ret
	}
	return *o.CommandData
}

// GetCommandDataOk returns a tuple with the CommandData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MdmCommandRequest) GetCommandDataOk() (*MdmCommandRequestCommandData, bool) {
	if o == nil || IsNil(o.CommandData) {
		return nil, false
	}
	return o.CommandData, true
}

// HasCommandData returns a boolean if a field has been set.
func (o *MdmCommandRequest) HasCommandData() bool {
	if o != nil && !IsNil(o.CommandData) {
		return true
	}

	return false
}

// SetCommandData gets a reference to the given MdmCommandRequestCommandData and assigns it to the CommandData field.
func (o *MdmCommandRequest) SetCommandData(v MdmCommandRequestCommandData) {
	o.CommandData = &v
}

func (o MdmCommandRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MdmCommandRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientData) {
		toSerialize["clientData"] = o.ClientData
	}
	if !IsNil(o.CommandData) {
		toSerialize["commandData"] = o.CommandData
	}
	return toSerialize, nil
}

type NullableMdmCommandRequest struct {
	value *MdmCommandRequest
	isSet bool
}

func (v NullableMdmCommandRequest) Get() *MdmCommandRequest {
	return v.value
}

func (v *NullableMdmCommandRequest) Set(val *MdmCommandRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMdmCommandRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMdmCommandRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMdmCommandRequest(val *MdmCommandRequest) *NullableMdmCommandRequest {
	return &NullableMdmCommandRequest{value: val, isSet: true}
}

func (v NullableMdmCommandRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMdmCommandRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


