/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the MembershipTestSearchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipTestSearchRequest{}

// MembershipTestSearchRequest struct for MembershipTestSearchRequest
type MembershipTestSearchRequest struct {
	Username string `json:"username"`
	Groupname string `json:"groupname"`
}

// NewMembershipTestSearchRequest instantiates a new MembershipTestSearchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipTestSearchRequest(username string, groupname string) *MembershipTestSearchRequest {
	this := MembershipTestSearchRequest{}
	this.Username = username
	this.Groupname = groupname
	return &this
}

// NewMembershipTestSearchRequestWithDefaults instantiates a new MembershipTestSearchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipTestSearchRequestWithDefaults() *MembershipTestSearchRequest {
	this := MembershipTestSearchRequest{}
	return &this
}

// GetUsername returns the Username field value
func (o *MembershipTestSearchRequest) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *MembershipTestSearchRequest) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *MembershipTestSearchRequest) SetUsername(v string) {
	o.Username = v
}

// GetGroupname returns the Groupname field value
func (o *MembershipTestSearchRequest) GetGroupname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Groupname
}

// GetGroupnameOk returns a tuple with the Groupname field value
// and a boolean to check if the value has been set.
func (o *MembershipTestSearchRequest) GetGroupnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Groupname, true
}

// SetGroupname sets field value
func (o *MembershipTestSearchRequest) SetGroupname(v string) {
	o.Groupname = v
}

func (o MembershipTestSearchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipTestSearchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["username"] = o.Username
	toSerialize["groupname"] = o.Groupname
	return toSerialize, nil
}

type NullableMembershipTestSearchRequest struct {
	value *MembershipTestSearchRequest
	isSet bool
}

func (v NullableMembershipTestSearchRequest) Get() *MembershipTestSearchRequest {
	return v.value
}

func (v *NullableMembershipTestSearchRequest) Set(val *MembershipTestSearchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipTestSearchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipTestSearchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipTestSearchRequest(val *MembershipTestSearchRequest) *NullableMembershipTestSearchRequest {
	return &NullableMembershipTestSearchRequest{value: val, isSet: true}
}

func (v NullableMembershipTestSearchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipTestSearchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


