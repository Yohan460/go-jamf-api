/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// EnrollmentAccessGroup struct for EnrollmentAccessGroup
type EnrollmentAccessGroup struct {
	Id *string `json:"id,omitempty"`
	LdapServerId *int32 `json:"ldapServerId,omitempty"`
	Name *string `json:"name,omitempty"`
	SiteId *int32 `json:"siteId,omitempty"`
	IsEnableEnterpriseEnrollment *bool `json:"isEnableEnterpriseEnrollment,omitempty"`
	IsEnablePersonalEnrollment *bool `json:"isEnablePersonalEnrollment,omitempty"`
	IsRequireEula *bool `json:"isRequireEula,omitempty"`
}

// NewEnrollmentAccessGroup instantiates a new EnrollmentAccessGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnrollmentAccessGroup() *EnrollmentAccessGroup {
	this := EnrollmentAccessGroup{}
	return &this
}

// NewEnrollmentAccessGroupWithDefaults instantiates a new EnrollmentAccessGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnrollmentAccessGroupWithDefaults() *EnrollmentAccessGroup {
	this := EnrollmentAccessGroup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EnrollmentAccessGroup) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentAccessGroup) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EnrollmentAccessGroup) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EnrollmentAccessGroup) SetId(v string) {
	o.Id = &v
}

// GetLdapServerId returns the LdapServerId field value if set, zero value otherwise.
func (o *EnrollmentAccessGroup) GetLdapServerId() int32 {
	if o == nil || o.LdapServerId == nil {
		var ret int32
		return ret
	}
	return *o.LdapServerId
}

// GetLdapServerIdOk returns a tuple with the LdapServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentAccessGroup) GetLdapServerIdOk() (*int32, bool) {
	if o == nil || o.LdapServerId == nil {
		return nil, false
	}
	return o.LdapServerId, true
}

// HasLdapServerId returns a boolean if a field has been set.
func (o *EnrollmentAccessGroup) HasLdapServerId() bool {
	if o != nil && o.LdapServerId != nil {
		return true
	}

	return false
}

// SetLdapServerId gets a reference to the given int32 and assigns it to the LdapServerId field.
func (o *EnrollmentAccessGroup) SetLdapServerId(v int32) {
	o.LdapServerId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EnrollmentAccessGroup) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentAccessGroup) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EnrollmentAccessGroup) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EnrollmentAccessGroup) SetName(v string) {
	o.Name = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *EnrollmentAccessGroup) GetSiteId() int32 {
	if o == nil || o.SiteId == nil {
		var ret int32
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentAccessGroup) GetSiteIdOk() (*int32, bool) {
	if o == nil || o.SiteId == nil {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *EnrollmentAccessGroup) HasSiteId() bool {
	if o != nil && o.SiteId != nil {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given int32 and assigns it to the SiteId field.
func (o *EnrollmentAccessGroup) SetSiteId(v int32) {
	o.SiteId = &v
}

// GetIsEnableEnterpriseEnrollment returns the IsEnableEnterpriseEnrollment field value if set, zero value otherwise.
func (o *EnrollmentAccessGroup) GetIsEnableEnterpriseEnrollment() bool {
	if o == nil || o.IsEnableEnterpriseEnrollment == nil {
		var ret bool
		return ret
	}
	return *o.IsEnableEnterpriseEnrollment
}

// GetIsEnableEnterpriseEnrollmentOk returns a tuple with the IsEnableEnterpriseEnrollment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentAccessGroup) GetIsEnableEnterpriseEnrollmentOk() (*bool, bool) {
	if o == nil || o.IsEnableEnterpriseEnrollment == nil {
		return nil, false
	}
	return o.IsEnableEnterpriseEnrollment, true
}

// HasIsEnableEnterpriseEnrollment returns a boolean if a field has been set.
func (o *EnrollmentAccessGroup) HasIsEnableEnterpriseEnrollment() bool {
	if o != nil && o.IsEnableEnterpriseEnrollment != nil {
		return true
	}

	return false
}

// SetIsEnableEnterpriseEnrollment gets a reference to the given bool and assigns it to the IsEnableEnterpriseEnrollment field.
func (o *EnrollmentAccessGroup) SetIsEnableEnterpriseEnrollment(v bool) {
	o.IsEnableEnterpriseEnrollment = &v
}

// GetIsEnablePersonalEnrollment returns the IsEnablePersonalEnrollment field value if set, zero value otherwise.
func (o *EnrollmentAccessGroup) GetIsEnablePersonalEnrollment() bool {
	if o == nil || o.IsEnablePersonalEnrollment == nil {
		var ret bool
		return ret
	}
	return *o.IsEnablePersonalEnrollment
}

// GetIsEnablePersonalEnrollmentOk returns a tuple with the IsEnablePersonalEnrollment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentAccessGroup) GetIsEnablePersonalEnrollmentOk() (*bool, bool) {
	if o == nil || o.IsEnablePersonalEnrollment == nil {
		return nil, false
	}
	return o.IsEnablePersonalEnrollment, true
}

// HasIsEnablePersonalEnrollment returns a boolean if a field has been set.
func (o *EnrollmentAccessGroup) HasIsEnablePersonalEnrollment() bool {
	if o != nil && o.IsEnablePersonalEnrollment != nil {
		return true
	}

	return false
}

// SetIsEnablePersonalEnrollment gets a reference to the given bool and assigns it to the IsEnablePersonalEnrollment field.
func (o *EnrollmentAccessGroup) SetIsEnablePersonalEnrollment(v bool) {
	o.IsEnablePersonalEnrollment = &v
}

// GetIsRequireEula returns the IsRequireEula field value if set, zero value otherwise.
func (o *EnrollmentAccessGroup) GetIsRequireEula() bool {
	if o == nil || o.IsRequireEula == nil {
		var ret bool
		return ret
	}
	return *o.IsRequireEula
}

// GetIsRequireEulaOk returns a tuple with the IsRequireEula field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentAccessGroup) GetIsRequireEulaOk() (*bool, bool) {
	if o == nil || o.IsRequireEula == nil {
		return nil, false
	}
	return o.IsRequireEula, true
}

// HasIsRequireEula returns a boolean if a field has been set.
func (o *EnrollmentAccessGroup) HasIsRequireEula() bool {
	if o != nil && o.IsRequireEula != nil {
		return true
	}

	return false
}

// SetIsRequireEula gets a reference to the given bool and assigns it to the IsRequireEula field.
func (o *EnrollmentAccessGroup) SetIsRequireEula(v bool) {
	o.IsRequireEula = &v
}

func (o EnrollmentAccessGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LdapServerId != nil {
		toSerialize["ldapServerId"] = o.LdapServerId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.SiteId != nil {
		toSerialize["siteId"] = o.SiteId
	}
	if o.IsEnableEnterpriseEnrollment != nil {
		toSerialize["isEnableEnterpriseEnrollment"] = o.IsEnableEnterpriseEnrollment
	}
	if o.IsEnablePersonalEnrollment != nil {
		toSerialize["isEnablePersonalEnrollment"] = o.IsEnablePersonalEnrollment
	}
	if o.IsRequireEula != nil {
		toSerialize["isRequireEula"] = o.IsRequireEula
	}
	return json.Marshal(toSerialize)
}

type NullableEnrollmentAccessGroup struct {
	value *EnrollmentAccessGroup
	isSet bool
}

func (v NullableEnrollmentAccessGroup) Get() *EnrollmentAccessGroup {
	return v.value
}

func (v *NullableEnrollmentAccessGroup) Set(val *EnrollmentAccessGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableEnrollmentAccessGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableEnrollmentAccessGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnrollmentAccessGroup(val *EnrollmentAccessGroup) *NullableEnrollmentAccessGroup {
	return &NullableEnrollmentAccessGroup{value: val, isSet: true}
}

func (v NullableEnrollmentAccessGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnrollmentAccessGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


