/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the LapsSettingsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LapsSettingsResponse{}

// LapsSettingsResponse struct for LapsSettingsResponse
type LapsSettingsResponse struct {
	// When enabled, all appropriate computers will have the SetAutoAdminPassword command sent to them automatically.
	AutoDeployEnabled *bool `json:"autoDeployEnabled,omitempty"`
	// The amount of time in seconds that the local admin password will be rotated after viewing.
	PasswordRotationTime *int32 `json:"passwordRotationTime,omitempty"`
	// The amount of time in seconds that the local admin password will be rotated automatically if it is never viewed.
	AutoExpirationTime *int32 `json:"autoExpirationTime,omitempty"`
}

// NewLapsSettingsResponse instantiates a new LapsSettingsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLapsSettingsResponse() *LapsSettingsResponse {
	this := LapsSettingsResponse{}
	return &this
}

// NewLapsSettingsResponseWithDefaults instantiates a new LapsSettingsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLapsSettingsResponseWithDefaults() *LapsSettingsResponse {
	this := LapsSettingsResponse{}
	return &this
}

// GetAutoDeployEnabled returns the AutoDeployEnabled field value if set, zero value otherwise.
func (o *LapsSettingsResponse) GetAutoDeployEnabled() bool {
	if o == nil || IsNil(o.AutoDeployEnabled) {
		var ret bool
		return ret
	}
	return *o.AutoDeployEnabled
}

// GetAutoDeployEnabledOk returns a tuple with the AutoDeployEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LapsSettingsResponse) GetAutoDeployEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoDeployEnabled) {
		return nil, false
	}
	return o.AutoDeployEnabled, true
}

// HasAutoDeployEnabled returns a boolean if a field has been set.
func (o *LapsSettingsResponse) HasAutoDeployEnabled() bool {
	if o != nil && !IsNil(o.AutoDeployEnabled) {
		return true
	}

	return false
}

// SetAutoDeployEnabled gets a reference to the given bool and assigns it to the AutoDeployEnabled field.
func (o *LapsSettingsResponse) SetAutoDeployEnabled(v bool) {
	o.AutoDeployEnabled = &v
}

// GetPasswordRotationTime returns the PasswordRotationTime field value if set, zero value otherwise.
func (o *LapsSettingsResponse) GetPasswordRotationTime() int32 {
	if o == nil || IsNil(o.PasswordRotationTime) {
		var ret int32
		return ret
	}
	return *o.PasswordRotationTime
}

// GetPasswordRotationTimeOk returns a tuple with the PasswordRotationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LapsSettingsResponse) GetPasswordRotationTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.PasswordRotationTime) {
		return nil, false
	}
	return o.PasswordRotationTime, true
}

// HasPasswordRotationTime returns a boolean if a field has been set.
func (o *LapsSettingsResponse) HasPasswordRotationTime() bool {
	if o != nil && !IsNil(o.PasswordRotationTime) {
		return true
	}

	return false
}

// SetPasswordRotationTime gets a reference to the given int32 and assigns it to the PasswordRotationTime field.
func (o *LapsSettingsResponse) SetPasswordRotationTime(v int32) {
	o.PasswordRotationTime = &v
}

// GetAutoExpirationTime returns the AutoExpirationTime field value if set, zero value otherwise.
func (o *LapsSettingsResponse) GetAutoExpirationTime() int32 {
	if o == nil || IsNil(o.AutoExpirationTime) {
		var ret int32
		return ret
	}
	return *o.AutoExpirationTime
}

// GetAutoExpirationTimeOk returns a tuple with the AutoExpirationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LapsSettingsResponse) GetAutoExpirationTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.AutoExpirationTime) {
		return nil, false
	}
	return o.AutoExpirationTime, true
}

// HasAutoExpirationTime returns a boolean if a field has been set.
func (o *LapsSettingsResponse) HasAutoExpirationTime() bool {
	if o != nil && !IsNil(o.AutoExpirationTime) {
		return true
	}

	return false
}

// SetAutoExpirationTime gets a reference to the given int32 and assigns it to the AutoExpirationTime field.
func (o *LapsSettingsResponse) SetAutoExpirationTime(v int32) {
	o.AutoExpirationTime = &v
}

func (o LapsSettingsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LapsSettingsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AutoDeployEnabled) {
		toSerialize["autoDeployEnabled"] = o.AutoDeployEnabled
	}
	if !IsNil(o.PasswordRotationTime) {
		toSerialize["passwordRotationTime"] = o.PasswordRotationTime
	}
	if !IsNil(o.AutoExpirationTime) {
		toSerialize["autoExpirationTime"] = o.AutoExpirationTime
	}
	return toSerialize, nil
}

type NullableLapsSettingsResponse struct {
	value *LapsSettingsResponse
	isSet bool
}

func (v NullableLapsSettingsResponse) Get() *LapsSettingsResponse {
	return v.value
}

func (v *NullableLapsSettingsResponse) Set(val *LapsSettingsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLapsSettingsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLapsSettingsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLapsSettingsResponse(val *LapsSettingsResponse) *NullableLapsSettingsResponse {
	return &NullableLapsSettingsResponse{value: val, isSet: true}
}

func (v NullableLapsSettingsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLapsSettingsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


