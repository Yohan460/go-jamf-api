/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the SessionDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SessionDetails{}

// SessionDetails Session details
type SessionDetails struct {
	// Session identifier
	Id *string `json:"id,omitempty"`
	// Sessions code
	Code *string `json:"code,omitempty"`
	// Session description. To be used for additional context on the reason of the session
	Description *string `json:"description,omitempty"`
	// Supporter session URL
	SupporterLink *string `json:"supporterLink,omitempty"`
	// End user session URL
	EndUserLink *string `json:"endUserLink,omitempty"`
	// Device identifier
	DeviceId *string `json:"deviceId,omitempty"`
	// Device name if found - null otherwise
	DeviceName *string `json:"deviceName,omitempty"`
	// Device type
	DeviceType *string `json:"deviceType,omitempty"`
	// Session state
	State *string `json:"state,omitempty"`
	// ID of session creator if session created by Jamf Pro local user, null otherwise
	CreatorId *string `json:"creatorId,omitempty"`
	// Username of the session creator
	CreatorName *string `json:"creatorName,omitempty"`
	// Session creation time
	CreatedAt *time.Time `json:"createdAt,omitempty"`
}

// NewSessionDetails instantiates a new SessionDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionDetails() *SessionDetails {
	this := SessionDetails{}
	return &this
}

// NewSessionDetailsWithDefaults instantiates a new SessionDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionDetailsWithDefaults() *SessionDetails {
	this := SessionDetails{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SessionDetails) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionDetails) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SessionDetails) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SessionDetails) SetId(v string) {
	o.Id = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *SessionDetails) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionDetails) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *SessionDetails) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *SessionDetails) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SessionDetails) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionDetails) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SessionDetails) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SessionDetails) SetDescription(v string) {
	o.Description = &v
}

// GetSupporterLink returns the SupporterLink field value if set, zero value otherwise.
func (o *SessionDetails) GetSupporterLink() string {
	if o == nil || IsNil(o.SupporterLink) {
		var ret string
		return ret
	}
	return *o.SupporterLink
}

// GetSupporterLinkOk returns a tuple with the SupporterLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionDetails) GetSupporterLinkOk() (*string, bool) {
	if o == nil || IsNil(o.SupporterLink) {
		return nil, false
	}
	return o.SupporterLink, true
}

// HasSupporterLink returns a boolean if a field has been set.
func (o *SessionDetails) HasSupporterLink() bool {
	if o != nil && !IsNil(o.SupporterLink) {
		return true
	}

	return false
}

// SetSupporterLink gets a reference to the given string and assigns it to the SupporterLink field.
func (o *SessionDetails) SetSupporterLink(v string) {
	o.SupporterLink = &v
}

// GetEndUserLink returns the EndUserLink field value if set, zero value otherwise.
func (o *SessionDetails) GetEndUserLink() string {
	if o == nil || IsNil(o.EndUserLink) {
		var ret string
		return ret
	}
	return *o.EndUserLink
}

// GetEndUserLinkOk returns a tuple with the EndUserLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionDetails) GetEndUserLinkOk() (*string, bool) {
	if o == nil || IsNil(o.EndUserLink) {
		return nil, false
	}
	return o.EndUserLink, true
}

// HasEndUserLink returns a boolean if a field has been set.
func (o *SessionDetails) HasEndUserLink() bool {
	if o != nil && !IsNil(o.EndUserLink) {
		return true
	}

	return false
}

// SetEndUserLink gets a reference to the given string and assigns it to the EndUserLink field.
func (o *SessionDetails) SetEndUserLink(v string) {
	o.EndUserLink = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *SessionDetails) GetDeviceId() string {
	if o == nil || IsNil(o.DeviceId) {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionDetails) GetDeviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *SessionDetails) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *SessionDetails) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetDeviceName returns the DeviceName field value if set, zero value otherwise.
func (o *SessionDetails) GetDeviceName() string {
	if o == nil || IsNil(o.DeviceName) {
		var ret string
		return ret
	}
	return *o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionDetails) GetDeviceNameOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceName) {
		return nil, false
	}
	return o.DeviceName, true
}

// HasDeviceName returns a boolean if a field has been set.
func (o *SessionDetails) HasDeviceName() bool {
	if o != nil && !IsNil(o.DeviceName) {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given string and assigns it to the DeviceName field.
func (o *SessionDetails) SetDeviceName(v string) {
	o.DeviceName = &v
}

// GetDeviceType returns the DeviceType field value if set, zero value otherwise.
func (o *SessionDetails) GetDeviceType() string {
	if o == nil || IsNil(o.DeviceType) {
		var ret string
		return ret
	}
	return *o.DeviceType
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionDetails) GetDeviceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceType) {
		return nil, false
	}
	return o.DeviceType, true
}

// HasDeviceType returns a boolean if a field has been set.
func (o *SessionDetails) HasDeviceType() bool {
	if o != nil && !IsNil(o.DeviceType) {
		return true
	}

	return false
}

// SetDeviceType gets a reference to the given string and assigns it to the DeviceType field.
func (o *SessionDetails) SetDeviceType(v string) {
	o.DeviceType = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *SessionDetails) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionDetails) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *SessionDetails) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *SessionDetails) SetState(v string) {
	o.State = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *SessionDetails) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionDetails) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *SessionDetails) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *SessionDetails) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetCreatorName returns the CreatorName field value if set, zero value otherwise.
func (o *SessionDetails) GetCreatorName() string {
	if o == nil || IsNil(o.CreatorName) {
		var ret string
		return ret
	}
	return *o.CreatorName
}

// GetCreatorNameOk returns a tuple with the CreatorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionDetails) GetCreatorNameOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorName) {
		return nil, false
	}
	return o.CreatorName, true
}

// HasCreatorName returns a boolean if a field has been set.
func (o *SessionDetails) HasCreatorName() bool {
	if o != nil && !IsNil(o.CreatorName) {
		return true
	}

	return false
}

// SetCreatorName gets a reference to the given string and assigns it to the CreatorName field.
func (o *SessionDetails) SetCreatorName(v string) {
	o.CreatorName = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SessionDetails) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionDetails) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SessionDetails) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *SessionDetails) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o SessionDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SessionDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.SupporterLink) {
		toSerialize["supporterLink"] = o.SupporterLink
	}
	if !IsNil(o.EndUserLink) {
		toSerialize["endUserLink"] = o.EndUserLink
	}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.DeviceName) {
		toSerialize["deviceName"] = o.DeviceName
	}
	if !IsNil(o.DeviceType) {
		toSerialize["deviceType"] = o.DeviceType
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.CreatorName) {
		toSerialize["creatorName"] = o.CreatorName
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableSessionDetails struct {
	value *SessionDetails
	isSet bool
}

func (v NullableSessionDetails) Get() *SessionDetails {
	return v.value
}

func (v *NullableSessionDetails) Set(val *SessionDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionDetails(val *SessionDetails) *NullableSessionDetails {
	return &NullableSessionDetails{value: val, isSet: true}
}

func (v NullableSessionDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


