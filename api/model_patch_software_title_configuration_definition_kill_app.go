/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PatchSoftwareTitleConfigurationDefinitionKillApp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchSoftwareTitleConfigurationDefinitionKillApp{}

// PatchSoftwareTitleConfigurationDefinitionKillApp struct for PatchSoftwareTitleConfigurationDefinitionKillApp
type PatchSoftwareTitleConfigurationDefinitionKillApp struct {
	AppName *string `json:"appName,omitempty"`
}

// NewPatchSoftwareTitleConfigurationDefinitionKillApp instantiates a new PatchSoftwareTitleConfigurationDefinitionKillApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchSoftwareTitleConfigurationDefinitionKillApp() *PatchSoftwareTitleConfigurationDefinitionKillApp {
	this := PatchSoftwareTitleConfigurationDefinitionKillApp{}
	return &this
}

// NewPatchSoftwareTitleConfigurationDefinitionKillAppWithDefaults instantiates a new PatchSoftwareTitleConfigurationDefinitionKillApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchSoftwareTitleConfigurationDefinitionKillAppWithDefaults() *PatchSoftwareTitleConfigurationDefinitionKillApp {
	this := PatchSoftwareTitleConfigurationDefinitionKillApp{}
	return &this
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *PatchSoftwareTitleConfigurationDefinitionKillApp) GetAppName() string {
	if o == nil || IsNil(o.AppName) {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchSoftwareTitleConfigurationDefinitionKillApp) GetAppNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppName) {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *PatchSoftwareTitleConfigurationDefinitionKillApp) HasAppName() bool {
	if o != nil && !IsNil(o.AppName) {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *PatchSoftwareTitleConfigurationDefinitionKillApp) SetAppName(v string) {
	o.AppName = &v
}

func (o PatchSoftwareTitleConfigurationDefinitionKillApp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchSoftwareTitleConfigurationDefinitionKillApp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppName) {
		toSerialize["appName"] = o.AppName
	}
	return toSerialize, nil
}

type NullablePatchSoftwareTitleConfigurationDefinitionKillApp struct {
	value *PatchSoftwareTitleConfigurationDefinitionKillApp
	isSet bool
}

func (v NullablePatchSoftwareTitleConfigurationDefinitionKillApp) Get() *PatchSoftwareTitleConfigurationDefinitionKillApp {
	return v.value
}

func (v *NullablePatchSoftwareTitleConfigurationDefinitionKillApp) Set(val *PatchSoftwareTitleConfigurationDefinitionKillApp) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchSoftwareTitleConfigurationDefinitionKillApp) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchSoftwareTitleConfigurationDefinitionKillApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchSoftwareTitleConfigurationDefinitionKillApp(val *PatchSoftwareTitleConfigurationDefinitionKillApp) *NullablePatchSoftwareTitleConfigurationDefinitionKillApp {
	return &NullablePatchSoftwareTitleConfigurationDefinitionKillApp{value: val, isSet: true}
}

func (v NullablePatchSoftwareTitleConfigurationDefinitionKillApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchSoftwareTitleConfigurationDefinitionKillApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


