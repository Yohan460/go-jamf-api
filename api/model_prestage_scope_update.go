/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PrestageScopeUpdate struct for PrestageScopeUpdate
type PrestageScopeUpdate struct {
	SerialNumbers []string `json:"serialNumbers"`
	VersionLock int32 `json:"versionLock"`
}

// NewPrestageScopeUpdate instantiates a new PrestageScopeUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrestageScopeUpdate(serialNumbers []string, versionLock int32) *PrestageScopeUpdate {
	this := PrestageScopeUpdate{}
	this.SerialNumbers = serialNumbers
	this.VersionLock = versionLock
	return &this
}

// NewPrestageScopeUpdateWithDefaults instantiates a new PrestageScopeUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrestageScopeUpdateWithDefaults() *PrestageScopeUpdate {
	this := PrestageScopeUpdate{}
	return &this
}

// GetSerialNumbers returns the SerialNumbers field value
func (o *PrestageScopeUpdate) GetSerialNumbers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SerialNumbers
}

// GetSerialNumbersOk returns a tuple with the SerialNumbers field value
// and a boolean to check if the value has been set.
func (o *PrestageScopeUpdate) GetSerialNumbersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SerialNumbers, true
}

// SetSerialNumbers sets field value
func (o *PrestageScopeUpdate) SetSerialNumbers(v []string) {
	o.SerialNumbers = v
}

// GetVersionLock returns the VersionLock field value
func (o *PrestageScopeUpdate) GetVersionLock() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VersionLock
}

// GetVersionLockOk returns a tuple with the VersionLock field value
// and a boolean to check if the value has been set.
func (o *PrestageScopeUpdate) GetVersionLockOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VersionLock, true
}

// SetVersionLock sets field value
func (o *PrestageScopeUpdate) SetVersionLock(v int32) {
	o.VersionLock = v
}

func (o PrestageScopeUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["serialNumbers"] = o.SerialNumbers
	}
	if true {
		toSerialize["versionLock"] = o.VersionLock
	}
	return json.Marshal(toSerialize)
}

type NullablePrestageScopeUpdate struct {
	value *PrestageScopeUpdate
	isSet bool
}

func (v NullablePrestageScopeUpdate) Get() *PrestageScopeUpdate {
	return v.value
}

func (v *NullablePrestageScopeUpdate) Set(val *PrestageScopeUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullablePrestageScopeUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullablePrestageScopeUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrestageScopeUpdate(val *PrestageScopeUpdate) *NullablePrestageScopeUpdate {
	return &NullablePrestageScopeUpdate{value: val, isSet: true}
}

func (v NullablePrestageScopeUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrestageScopeUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


