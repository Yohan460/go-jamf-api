/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// VerbosePackageDeploymentResponseErrorsInner The error will contain either the 'device' or 'group' property
type VerbosePackageDeploymentResponseErrorsInner struct {
	Device *int32 `json:"device,omitempty"`
	Group *int32 `json:"group,omitempty"`
	Reason *string `json:"reason,omitempty"`
}

// NewVerbosePackageDeploymentResponseErrorsInner instantiates a new VerbosePackageDeploymentResponseErrorsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerbosePackageDeploymentResponseErrorsInner() *VerbosePackageDeploymentResponseErrorsInner {
	this := VerbosePackageDeploymentResponseErrorsInner{}
	return &this
}

// NewVerbosePackageDeploymentResponseErrorsInnerWithDefaults instantiates a new VerbosePackageDeploymentResponseErrorsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerbosePackageDeploymentResponseErrorsInnerWithDefaults() *VerbosePackageDeploymentResponseErrorsInner {
	this := VerbosePackageDeploymentResponseErrorsInner{}
	return &this
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *VerbosePackageDeploymentResponseErrorsInner) GetDevice() int32 {
	if o == nil || o.Device == nil {
		var ret int32
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerbosePackageDeploymentResponseErrorsInner) GetDeviceOk() (*int32, bool) {
	if o == nil || o.Device == nil {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *VerbosePackageDeploymentResponseErrorsInner) HasDevice() bool {
	if o != nil && o.Device != nil {
		return true
	}

	return false
}

// SetDevice gets a reference to the given int32 and assigns it to the Device field.
func (o *VerbosePackageDeploymentResponseErrorsInner) SetDevice(v int32) {
	o.Device = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *VerbosePackageDeploymentResponseErrorsInner) GetGroup() int32 {
	if o == nil || o.Group == nil {
		var ret int32
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerbosePackageDeploymentResponseErrorsInner) GetGroupOk() (*int32, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *VerbosePackageDeploymentResponseErrorsInner) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given int32 and assigns it to the Group field.
func (o *VerbosePackageDeploymentResponseErrorsInner) SetGroup(v int32) {
	o.Group = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *VerbosePackageDeploymentResponseErrorsInner) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerbosePackageDeploymentResponseErrorsInner) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *VerbosePackageDeploymentResponseErrorsInner) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *VerbosePackageDeploymentResponseErrorsInner) SetReason(v string) {
	o.Reason = &v
}

func (o VerbosePackageDeploymentResponseErrorsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Device != nil {
		toSerialize["device"] = o.Device
	}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	return json.Marshal(toSerialize)
}

type NullableVerbosePackageDeploymentResponseErrorsInner struct {
	value *VerbosePackageDeploymentResponseErrorsInner
	isSet bool
}

func (v NullableVerbosePackageDeploymentResponseErrorsInner) Get() *VerbosePackageDeploymentResponseErrorsInner {
	return v.value
}

func (v *NullableVerbosePackageDeploymentResponseErrorsInner) Set(val *VerbosePackageDeploymentResponseErrorsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableVerbosePackageDeploymentResponseErrorsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableVerbosePackageDeploymentResponseErrorsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerbosePackageDeploymentResponseErrorsInner(val *VerbosePackageDeploymentResponseErrorsInner) *NullableVerbosePackageDeploymentResponseErrorsInner {
	return &NullableVerbosePackageDeploymentResponseErrorsInner{value: val, isSet: true}
}

func (v NullableVerbosePackageDeploymentResponseErrorsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerbosePackageDeploymentResponseErrorsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


