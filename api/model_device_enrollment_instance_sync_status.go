/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the DeviceEnrollmentInstanceSyncStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeviceEnrollmentInstanceSyncStatus{}

// DeviceEnrollmentInstanceSyncStatus struct for DeviceEnrollmentInstanceSyncStatus
type DeviceEnrollmentInstanceSyncStatus struct {
	SyncState *string `json:"syncState,omitempty"`
	InstanceId *string `json:"instanceId,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`
}

// NewDeviceEnrollmentInstanceSyncStatus instantiates a new DeviceEnrollmentInstanceSyncStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceEnrollmentInstanceSyncStatus() *DeviceEnrollmentInstanceSyncStatus {
	this := DeviceEnrollmentInstanceSyncStatus{}
	return &this
}

// NewDeviceEnrollmentInstanceSyncStatusWithDefaults instantiates a new DeviceEnrollmentInstanceSyncStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceEnrollmentInstanceSyncStatusWithDefaults() *DeviceEnrollmentInstanceSyncStatus {
	this := DeviceEnrollmentInstanceSyncStatus{}
	return &this
}

// GetSyncState returns the SyncState field value if set, zero value otherwise.
func (o *DeviceEnrollmentInstanceSyncStatus) GetSyncState() string {
	if o == nil || IsNil(o.SyncState) {
		var ret string
		return ret
	}
	return *o.SyncState
}

// GetSyncStateOk returns a tuple with the SyncState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEnrollmentInstanceSyncStatus) GetSyncStateOk() (*string, bool) {
	if o == nil || IsNil(o.SyncState) {
		return nil, false
	}
	return o.SyncState, true
}

// HasSyncState returns a boolean if a field has been set.
func (o *DeviceEnrollmentInstanceSyncStatus) HasSyncState() bool {
	if o != nil && !IsNil(o.SyncState) {
		return true
	}

	return false
}

// SetSyncState gets a reference to the given string and assigns it to the SyncState field.
func (o *DeviceEnrollmentInstanceSyncStatus) SetSyncState(v string) {
	o.SyncState = &v
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *DeviceEnrollmentInstanceSyncStatus) GetInstanceId() string {
	if o == nil || IsNil(o.InstanceId) {
		var ret string
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEnrollmentInstanceSyncStatus) GetInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceId) {
		return nil, false
	}
	return o.InstanceId, true
}

// HasInstanceId returns a boolean if a field has been set.
func (o *DeviceEnrollmentInstanceSyncStatus) HasInstanceId() bool {
	if o != nil && !IsNil(o.InstanceId) {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given string and assigns it to the InstanceId field.
func (o *DeviceEnrollmentInstanceSyncStatus) SetInstanceId(v string) {
	o.InstanceId = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *DeviceEnrollmentInstanceSyncStatus) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceEnrollmentInstanceSyncStatus) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *DeviceEnrollmentInstanceSyncStatus) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *DeviceEnrollmentInstanceSyncStatus) SetTimestamp(v string) {
	o.Timestamp = &v
}

func (o DeviceEnrollmentInstanceSyncStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeviceEnrollmentInstanceSyncStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SyncState) {
		toSerialize["syncState"] = o.SyncState
	}
	if !IsNil(o.InstanceId) {
		toSerialize["instanceId"] = o.InstanceId
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableDeviceEnrollmentInstanceSyncStatus struct {
	value *DeviceEnrollmentInstanceSyncStatus
	isSet bool
}

func (v NullableDeviceEnrollmentInstanceSyncStatus) Get() *DeviceEnrollmentInstanceSyncStatus {
	return v.value
}

func (v *NullableDeviceEnrollmentInstanceSyncStatus) Set(val *DeviceEnrollmentInstanceSyncStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceEnrollmentInstanceSyncStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceEnrollmentInstanceSyncStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceEnrollmentInstanceSyncStatus(val *DeviceEnrollmentInstanceSyncStatus) *NullableDeviceEnrollmentInstanceSyncStatus {
	return &NullableDeviceEnrollmentInstanceSyncStatus{value: val, isSet: true}
}

func (v NullableDeviceEnrollmentInstanceSyncStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceEnrollmentInstanceSyncStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


