/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PolicyProperties struct for PolicyProperties
type PolicyProperties struct {
	// This field always returns false.
	IsPoliciesRequireNetworkStateChange *bool `json:"isPoliciesRequireNetworkStateChange,omitempty"`
	IsAllowNetworkStateChangeTriggers *bool `json:"isAllowNetworkStateChangeTriggers,omitempty"`
}

// NewPolicyProperties instantiates a new PolicyProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyProperties() *PolicyProperties {
	this := PolicyProperties{}
	var isPoliciesRequireNetworkStateChange bool = false
	this.IsPoliciesRequireNetworkStateChange = &isPoliciesRequireNetworkStateChange
	var isAllowNetworkStateChangeTriggers bool = true
	this.IsAllowNetworkStateChangeTriggers = &isAllowNetworkStateChangeTriggers
	return &this
}

// NewPolicyPropertiesWithDefaults instantiates a new PolicyProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyPropertiesWithDefaults() *PolicyProperties {
	this := PolicyProperties{}
	var isPoliciesRequireNetworkStateChange bool = false
	this.IsPoliciesRequireNetworkStateChange = &isPoliciesRequireNetworkStateChange
	var isAllowNetworkStateChangeTriggers bool = true
	this.IsAllowNetworkStateChangeTriggers = &isAllowNetworkStateChangeTriggers
	return &this
}

// GetIsPoliciesRequireNetworkStateChange returns the IsPoliciesRequireNetworkStateChange field value if set, zero value otherwise.
func (o *PolicyProperties) GetIsPoliciesRequireNetworkStateChange() bool {
	if o == nil || o.IsPoliciesRequireNetworkStateChange == nil {
		var ret bool
		return ret
	}
	return *o.IsPoliciesRequireNetworkStateChange
}

// GetIsPoliciesRequireNetworkStateChangeOk returns a tuple with the IsPoliciesRequireNetworkStateChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyProperties) GetIsPoliciesRequireNetworkStateChangeOk() (*bool, bool) {
	if o == nil || o.IsPoliciesRequireNetworkStateChange == nil {
		return nil, false
	}
	return o.IsPoliciesRequireNetworkStateChange, true
}

// HasIsPoliciesRequireNetworkStateChange returns a boolean if a field has been set.
func (o *PolicyProperties) HasIsPoliciesRequireNetworkStateChange() bool {
	if o != nil && o.IsPoliciesRequireNetworkStateChange != nil {
		return true
	}

	return false
}

// SetIsPoliciesRequireNetworkStateChange gets a reference to the given bool and assigns it to the IsPoliciesRequireNetworkStateChange field.
func (o *PolicyProperties) SetIsPoliciesRequireNetworkStateChange(v bool) {
	o.IsPoliciesRequireNetworkStateChange = &v
}

// GetIsAllowNetworkStateChangeTriggers returns the IsAllowNetworkStateChangeTriggers field value if set, zero value otherwise.
func (o *PolicyProperties) GetIsAllowNetworkStateChangeTriggers() bool {
	if o == nil || o.IsAllowNetworkStateChangeTriggers == nil {
		var ret bool
		return ret
	}
	return *o.IsAllowNetworkStateChangeTriggers
}

// GetIsAllowNetworkStateChangeTriggersOk returns a tuple with the IsAllowNetworkStateChangeTriggers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyProperties) GetIsAllowNetworkStateChangeTriggersOk() (*bool, bool) {
	if o == nil || o.IsAllowNetworkStateChangeTriggers == nil {
		return nil, false
	}
	return o.IsAllowNetworkStateChangeTriggers, true
}

// HasIsAllowNetworkStateChangeTriggers returns a boolean if a field has been set.
func (o *PolicyProperties) HasIsAllowNetworkStateChangeTriggers() bool {
	if o != nil && o.IsAllowNetworkStateChangeTriggers != nil {
		return true
	}

	return false
}

// SetIsAllowNetworkStateChangeTriggers gets a reference to the given bool and assigns it to the IsAllowNetworkStateChangeTriggers field.
func (o *PolicyProperties) SetIsAllowNetworkStateChangeTriggers(v bool) {
	o.IsAllowNetworkStateChangeTriggers = &v
}

func (o PolicyProperties) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsPoliciesRequireNetworkStateChange != nil {
		toSerialize["isPoliciesRequireNetworkStateChange"] = o.IsPoliciesRequireNetworkStateChange
	}
	if o.IsAllowNetworkStateChangeTriggers != nil {
		toSerialize["isAllowNetworkStateChangeTriggers"] = o.IsAllowNetworkStateChangeTriggers
	}
	return json.Marshal(toSerialize)
}

type NullablePolicyProperties struct {
	value *PolicyProperties
	isSet bool
}

func (v NullablePolicyProperties) Get() *PolicyProperties {
	return v.value
}

func (v *NullablePolicyProperties) Set(val *PolicyProperties) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyProperties) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyProperties(val *PolicyProperties) *NullablePolicyProperties {
	return &NullablePolicyProperties{value: val, isSet: true}
}

func (v NullablePolicyProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


