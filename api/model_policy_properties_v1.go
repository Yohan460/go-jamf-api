/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PolicyPropertiesV1 struct for PolicyPropertiesV1
type PolicyPropertiesV1 struct {
	// This field always returns false.
	PoliciesRequireNetworkStateChange *bool `json:"policiesRequireNetworkStateChange,omitempty"`
	AllowNetworkStateChangeTriggers *bool `json:"allowNetworkStateChangeTriggers,omitempty"`
}

// NewPolicyPropertiesV1 instantiates a new PolicyPropertiesV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyPropertiesV1() *PolicyPropertiesV1 {
	this := PolicyPropertiesV1{}
	var policiesRequireNetworkStateChange bool = false
	this.PoliciesRequireNetworkStateChange = &policiesRequireNetworkStateChange
	var allowNetworkStateChangeTriggers bool = true
	this.AllowNetworkStateChangeTriggers = &allowNetworkStateChangeTriggers
	return &this
}

// NewPolicyPropertiesV1WithDefaults instantiates a new PolicyPropertiesV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyPropertiesV1WithDefaults() *PolicyPropertiesV1 {
	this := PolicyPropertiesV1{}
	var policiesRequireNetworkStateChange bool = false
	this.PoliciesRequireNetworkStateChange = &policiesRequireNetworkStateChange
	var allowNetworkStateChangeTriggers bool = true
	this.AllowNetworkStateChangeTriggers = &allowNetworkStateChangeTriggers
	return &this
}

// GetPoliciesRequireNetworkStateChange returns the PoliciesRequireNetworkStateChange field value if set, zero value otherwise.
func (o *PolicyPropertiesV1) GetPoliciesRequireNetworkStateChange() bool {
	if o == nil || o.PoliciesRequireNetworkStateChange == nil {
		var ret bool
		return ret
	}
	return *o.PoliciesRequireNetworkStateChange
}

// GetPoliciesRequireNetworkStateChangeOk returns a tuple with the PoliciesRequireNetworkStateChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyPropertiesV1) GetPoliciesRequireNetworkStateChangeOk() (*bool, bool) {
	if o == nil || o.PoliciesRequireNetworkStateChange == nil {
		return nil, false
	}
	return o.PoliciesRequireNetworkStateChange, true
}

// HasPoliciesRequireNetworkStateChange returns a boolean if a field has been set.
func (o *PolicyPropertiesV1) HasPoliciesRequireNetworkStateChange() bool {
	if o != nil && o.PoliciesRequireNetworkStateChange != nil {
		return true
	}

	return false
}

// SetPoliciesRequireNetworkStateChange gets a reference to the given bool and assigns it to the PoliciesRequireNetworkStateChange field.
func (o *PolicyPropertiesV1) SetPoliciesRequireNetworkStateChange(v bool) {
	o.PoliciesRequireNetworkStateChange = &v
}

// GetAllowNetworkStateChangeTriggers returns the AllowNetworkStateChangeTriggers field value if set, zero value otherwise.
func (o *PolicyPropertiesV1) GetAllowNetworkStateChangeTriggers() bool {
	if o == nil || o.AllowNetworkStateChangeTriggers == nil {
		var ret bool
		return ret
	}
	return *o.AllowNetworkStateChangeTriggers
}

// GetAllowNetworkStateChangeTriggersOk returns a tuple with the AllowNetworkStateChangeTriggers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyPropertiesV1) GetAllowNetworkStateChangeTriggersOk() (*bool, bool) {
	if o == nil || o.AllowNetworkStateChangeTriggers == nil {
		return nil, false
	}
	return o.AllowNetworkStateChangeTriggers, true
}

// HasAllowNetworkStateChangeTriggers returns a boolean if a field has been set.
func (o *PolicyPropertiesV1) HasAllowNetworkStateChangeTriggers() bool {
	if o != nil && o.AllowNetworkStateChangeTriggers != nil {
		return true
	}

	return false
}

// SetAllowNetworkStateChangeTriggers gets a reference to the given bool and assigns it to the AllowNetworkStateChangeTriggers field.
func (o *PolicyPropertiesV1) SetAllowNetworkStateChangeTriggers(v bool) {
	o.AllowNetworkStateChangeTriggers = &v
}

func (o PolicyPropertiesV1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PoliciesRequireNetworkStateChange != nil {
		toSerialize["policiesRequireNetworkStateChange"] = o.PoliciesRequireNetworkStateChange
	}
	if o.AllowNetworkStateChangeTriggers != nil {
		toSerialize["allowNetworkStateChangeTriggers"] = o.AllowNetworkStateChangeTriggers
	}
	return json.Marshal(toSerialize)
}

type NullablePolicyPropertiesV1 struct {
	value *PolicyPropertiesV1
	isSet bool
}

func (v NullablePolicyPropertiesV1) Get() *PolicyPropertiesV1 {
	return v.value
}

func (v *NullablePolicyPropertiesV1) Set(val *PolicyPropertiesV1) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyPropertiesV1) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyPropertiesV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyPropertiesV1(val *PolicyPropertiesV1) *NullablePolicyPropertiesV1 {
	return &NullablePolicyPropertiesV1{value: val, isSet: true}
}

func (v NullablePolicyPropertiesV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyPropertiesV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


