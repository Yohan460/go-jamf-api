/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TeacherFeatures struct for TeacherFeatures
type TeacherFeatures struct {
	IsAllowAppLock *bool `json:"isAllowAppLock,omitempty"`
	IsAllowWebLock *bool `json:"isAllowWebLock,omitempty"`
	IsAllowRestrictions *bool `json:"isAllowRestrictions,omitempty"`
	IsAllowAttentionScreen *bool `json:"isAllowAttentionScreen,omitempty"`
	IsAllowClearPasscode *bool `json:"isAllowClearPasscode,omitempty"`
}

// NewTeacherFeatures instantiates a new TeacherFeatures object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeacherFeatures() *TeacherFeatures {
	this := TeacherFeatures{}
	return &this
}

// NewTeacherFeaturesWithDefaults instantiates a new TeacherFeatures object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeacherFeaturesWithDefaults() *TeacherFeatures {
	this := TeacherFeatures{}
	return &this
}

// GetIsAllowAppLock returns the IsAllowAppLock field value if set, zero value otherwise.
func (o *TeacherFeatures) GetIsAllowAppLock() bool {
	if o == nil || o.IsAllowAppLock == nil {
		var ret bool
		return ret
	}
	return *o.IsAllowAppLock
}

// GetIsAllowAppLockOk returns a tuple with the IsAllowAppLock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeacherFeatures) GetIsAllowAppLockOk() (*bool, bool) {
	if o == nil || o.IsAllowAppLock == nil {
		return nil, false
	}
	return o.IsAllowAppLock, true
}

// HasIsAllowAppLock returns a boolean if a field has been set.
func (o *TeacherFeatures) HasIsAllowAppLock() bool {
	if o != nil && o.IsAllowAppLock != nil {
		return true
	}

	return false
}

// SetIsAllowAppLock gets a reference to the given bool and assigns it to the IsAllowAppLock field.
func (o *TeacherFeatures) SetIsAllowAppLock(v bool) {
	o.IsAllowAppLock = &v
}

// GetIsAllowWebLock returns the IsAllowWebLock field value if set, zero value otherwise.
func (o *TeacherFeatures) GetIsAllowWebLock() bool {
	if o == nil || o.IsAllowWebLock == nil {
		var ret bool
		return ret
	}
	return *o.IsAllowWebLock
}

// GetIsAllowWebLockOk returns a tuple with the IsAllowWebLock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeacherFeatures) GetIsAllowWebLockOk() (*bool, bool) {
	if o == nil || o.IsAllowWebLock == nil {
		return nil, false
	}
	return o.IsAllowWebLock, true
}

// HasIsAllowWebLock returns a boolean if a field has been set.
func (o *TeacherFeatures) HasIsAllowWebLock() bool {
	if o != nil && o.IsAllowWebLock != nil {
		return true
	}

	return false
}

// SetIsAllowWebLock gets a reference to the given bool and assigns it to the IsAllowWebLock field.
func (o *TeacherFeatures) SetIsAllowWebLock(v bool) {
	o.IsAllowWebLock = &v
}

// GetIsAllowRestrictions returns the IsAllowRestrictions field value if set, zero value otherwise.
func (o *TeacherFeatures) GetIsAllowRestrictions() bool {
	if o == nil || o.IsAllowRestrictions == nil {
		var ret bool
		return ret
	}
	return *o.IsAllowRestrictions
}

// GetIsAllowRestrictionsOk returns a tuple with the IsAllowRestrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeacherFeatures) GetIsAllowRestrictionsOk() (*bool, bool) {
	if o == nil || o.IsAllowRestrictions == nil {
		return nil, false
	}
	return o.IsAllowRestrictions, true
}

// HasIsAllowRestrictions returns a boolean if a field has been set.
func (o *TeacherFeatures) HasIsAllowRestrictions() bool {
	if o != nil && o.IsAllowRestrictions != nil {
		return true
	}

	return false
}

// SetIsAllowRestrictions gets a reference to the given bool and assigns it to the IsAllowRestrictions field.
func (o *TeacherFeatures) SetIsAllowRestrictions(v bool) {
	o.IsAllowRestrictions = &v
}

// GetIsAllowAttentionScreen returns the IsAllowAttentionScreen field value if set, zero value otherwise.
func (o *TeacherFeatures) GetIsAllowAttentionScreen() bool {
	if o == nil || o.IsAllowAttentionScreen == nil {
		var ret bool
		return ret
	}
	return *o.IsAllowAttentionScreen
}

// GetIsAllowAttentionScreenOk returns a tuple with the IsAllowAttentionScreen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeacherFeatures) GetIsAllowAttentionScreenOk() (*bool, bool) {
	if o == nil || o.IsAllowAttentionScreen == nil {
		return nil, false
	}
	return o.IsAllowAttentionScreen, true
}

// HasIsAllowAttentionScreen returns a boolean if a field has been set.
func (o *TeacherFeatures) HasIsAllowAttentionScreen() bool {
	if o != nil && o.IsAllowAttentionScreen != nil {
		return true
	}

	return false
}

// SetIsAllowAttentionScreen gets a reference to the given bool and assigns it to the IsAllowAttentionScreen field.
func (o *TeacherFeatures) SetIsAllowAttentionScreen(v bool) {
	o.IsAllowAttentionScreen = &v
}

// GetIsAllowClearPasscode returns the IsAllowClearPasscode field value if set, zero value otherwise.
func (o *TeacherFeatures) GetIsAllowClearPasscode() bool {
	if o == nil || o.IsAllowClearPasscode == nil {
		var ret bool
		return ret
	}
	return *o.IsAllowClearPasscode
}

// GetIsAllowClearPasscodeOk returns a tuple with the IsAllowClearPasscode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeacherFeatures) GetIsAllowClearPasscodeOk() (*bool, bool) {
	if o == nil || o.IsAllowClearPasscode == nil {
		return nil, false
	}
	return o.IsAllowClearPasscode, true
}

// HasIsAllowClearPasscode returns a boolean if a field has been set.
func (o *TeacherFeatures) HasIsAllowClearPasscode() bool {
	if o != nil && o.IsAllowClearPasscode != nil {
		return true
	}

	return false
}

// SetIsAllowClearPasscode gets a reference to the given bool and assigns it to the IsAllowClearPasscode field.
func (o *TeacherFeatures) SetIsAllowClearPasscode(v bool) {
	o.IsAllowClearPasscode = &v
}

func (o TeacherFeatures) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsAllowAppLock != nil {
		toSerialize["isAllowAppLock"] = o.IsAllowAppLock
	}
	if o.IsAllowWebLock != nil {
		toSerialize["isAllowWebLock"] = o.IsAllowWebLock
	}
	if o.IsAllowRestrictions != nil {
		toSerialize["isAllowRestrictions"] = o.IsAllowRestrictions
	}
	if o.IsAllowAttentionScreen != nil {
		toSerialize["isAllowAttentionScreen"] = o.IsAllowAttentionScreen
	}
	if o.IsAllowClearPasscode != nil {
		toSerialize["isAllowClearPasscode"] = o.IsAllowClearPasscode
	}
	return json.Marshal(toSerialize)
}

type NullableTeacherFeatures struct {
	value *TeacherFeatures
	isSet bool
}

func (v NullableTeacherFeatures) Get() *TeacherFeatures {
	return v.value
}

func (v *NullableTeacherFeatures) Set(val *TeacherFeatures) {
	v.value = val
	v.isSet = true
}

func (v NullableTeacherFeatures) IsSet() bool {
	return v.isSet
}

func (v *NullableTeacherFeatures) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeacherFeatures(val *TeacherFeatures) *NullableTeacherFeatures {
	return &NullableTeacherFeatures{value: val, isSet: true}
}

func (v NullableTeacherFeatures) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeacherFeatures) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


