/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// Purchasing struct for Purchasing
type Purchasing struct {
	IsPurchased *bool `json:"isPurchased,omitempty"`
	IsLeased *bool `json:"isLeased,omitempty"`
	PoNumber *string `json:"poNumber,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
	AppleCareId *string `json:"appleCareId,omitempty"`
	PurchasePrice *string `json:"purchasePrice,omitempty"`
	PurchasingAccount *string `json:"purchasingAccount,omitempty"`
	PoDate *time.Time `json:"poDate,omitempty"`
	WarrantyExpiresDate *time.Time `json:"warrantyExpiresDate,omitempty"`
	LeaseExpiresDate *time.Time `json:"leaseExpiresDate,omitempty"`
	LifeExpectancy *int32 `json:"lifeExpectancy,omitempty"`
	PurchasingContact *string `json:"purchasingContact,omitempty"`
}

// NewPurchasing instantiates a new Purchasing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPurchasing() *Purchasing {
	this := Purchasing{}
	return &this
}

// NewPurchasingWithDefaults instantiates a new Purchasing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPurchasingWithDefaults() *Purchasing {
	this := Purchasing{}
	return &this
}

// GetIsPurchased returns the IsPurchased field value if set, zero value otherwise.
func (o *Purchasing) GetIsPurchased() bool {
	if o == nil || o.IsPurchased == nil {
		var ret bool
		return ret
	}
	return *o.IsPurchased
}

// GetIsPurchasedOk returns a tuple with the IsPurchased field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Purchasing) GetIsPurchasedOk() (*bool, bool) {
	if o == nil || o.IsPurchased == nil {
		return nil, false
	}
	return o.IsPurchased, true
}

// HasIsPurchased returns a boolean if a field has been set.
func (o *Purchasing) HasIsPurchased() bool {
	if o != nil && o.IsPurchased != nil {
		return true
	}

	return false
}

// SetIsPurchased gets a reference to the given bool and assigns it to the IsPurchased field.
func (o *Purchasing) SetIsPurchased(v bool) {
	o.IsPurchased = &v
}

// GetIsLeased returns the IsLeased field value if set, zero value otherwise.
func (o *Purchasing) GetIsLeased() bool {
	if o == nil || o.IsLeased == nil {
		var ret bool
		return ret
	}
	return *o.IsLeased
}

// GetIsLeasedOk returns a tuple with the IsLeased field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Purchasing) GetIsLeasedOk() (*bool, bool) {
	if o == nil || o.IsLeased == nil {
		return nil, false
	}
	return o.IsLeased, true
}

// HasIsLeased returns a boolean if a field has been set.
func (o *Purchasing) HasIsLeased() bool {
	if o != nil && o.IsLeased != nil {
		return true
	}

	return false
}

// SetIsLeased gets a reference to the given bool and assigns it to the IsLeased field.
func (o *Purchasing) SetIsLeased(v bool) {
	o.IsLeased = &v
}

// GetPoNumber returns the PoNumber field value if set, zero value otherwise.
func (o *Purchasing) GetPoNumber() string {
	if o == nil || o.PoNumber == nil {
		var ret string
		return ret
	}
	return *o.PoNumber
}

// GetPoNumberOk returns a tuple with the PoNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Purchasing) GetPoNumberOk() (*string, bool) {
	if o == nil || o.PoNumber == nil {
		return nil, false
	}
	return o.PoNumber, true
}

// HasPoNumber returns a boolean if a field has been set.
func (o *Purchasing) HasPoNumber() bool {
	if o != nil && o.PoNumber != nil {
		return true
	}

	return false
}

// SetPoNumber gets a reference to the given string and assigns it to the PoNumber field.
func (o *Purchasing) SetPoNumber(v string) {
	o.PoNumber = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *Purchasing) GetVendor() string {
	if o == nil || o.Vendor == nil {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Purchasing) GetVendorOk() (*string, bool) {
	if o == nil || o.Vendor == nil {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *Purchasing) HasVendor() bool {
	if o != nil && o.Vendor != nil {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *Purchasing) SetVendor(v string) {
	o.Vendor = &v
}

// GetAppleCareId returns the AppleCareId field value if set, zero value otherwise.
func (o *Purchasing) GetAppleCareId() string {
	if o == nil || o.AppleCareId == nil {
		var ret string
		return ret
	}
	return *o.AppleCareId
}

// GetAppleCareIdOk returns a tuple with the AppleCareId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Purchasing) GetAppleCareIdOk() (*string, bool) {
	if o == nil || o.AppleCareId == nil {
		return nil, false
	}
	return o.AppleCareId, true
}

// HasAppleCareId returns a boolean if a field has been set.
func (o *Purchasing) HasAppleCareId() bool {
	if o != nil && o.AppleCareId != nil {
		return true
	}

	return false
}

// SetAppleCareId gets a reference to the given string and assigns it to the AppleCareId field.
func (o *Purchasing) SetAppleCareId(v string) {
	o.AppleCareId = &v
}

// GetPurchasePrice returns the PurchasePrice field value if set, zero value otherwise.
func (o *Purchasing) GetPurchasePrice() string {
	if o == nil || o.PurchasePrice == nil {
		var ret string
		return ret
	}
	return *o.PurchasePrice
}

// GetPurchasePriceOk returns a tuple with the PurchasePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Purchasing) GetPurchasePriceOk() (*string, bool) {
	if o == nil || o.PurchasePrice == nil {
		return nil, false
	}
	return o.PurchasePrice, true
}

// HasPurchasePrice returns a boolean if a field has been set.
func (o *Purchasing) HasPurchasePrice() bool {
	if o != nil && o.PurchasePrice != nil {
		return true
	}

	return false
}

// SetPurchasePrice gets a reference to the given string and assigns it to the PurchasePrice field.
func (o *Purchasing) SetPurchasePrice(v string) {
	o.PurchasePrice = &v
}

// GetPurchasingAccount returns the PurchasingAccount field value if set, zero value otherwise.
func (o *Purchasing) GetPurchasingAccount() string {
	if o == nil || o.PurchasingAccount == nil {
		var ret string
		return ret
	}
	return *o.PurchasingAccount
}

// GetPurchasingAccountOk returns a tuple with the PurchasingAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Purchasing) GetPurchasingAccountOk() (*string, bool) {
	if o == nil || o.PurchasingAccount == nil {
		return nil, false
	}
	return o.PurchasingAccount, true
}

// HasPurchasingAccount returns a boolean if a field has been set.
func (o *Purchasing) HasPurchasingAccount() bool {
	if o != nil && o.PurchasingAccount != nil {
		return true
	}

	return false
}

// SetPurchasingAccount gets a reference to the given string and assigns it to the PurchasingAccount field.
func (o *Purchasing) SetPurchasingAccount(v string) {
	o.PurchasingAccount = &v
}

// GetPoDate returns the PoDate field value if set, zero value otherwise.
func (o *Purchasing) GetPoDate() time.Time {
	if o == nil || o.PoDate == nil {
		var ret time.Time
		return ret
	}
	return *o.PoDate
}

// GetPoDateOk returns a tuple with the PoDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Purchasing) GetPoDateOk() (*time.Time, bool) {
	if o == nil || o.PoDate == nil {
		return nil, false
	}
	return o.PoDate, true
}

// HasPoDate returns a boolean if a field has been set.
func (o *Purchasing) HasPoDate() bool {
	if o != nil && o.PoDate != nil {
		return true
	}

	return false
}

// SetPoDate gets a reference to the given time.Time and assigns it to the PoDate field.
func (o *Purchasing) SetPoDate(v time.Time) {
	o.PoDate = &v
}

// GetWarrantyExpiresDate returns the WarrantyExpiresDate field value if set, zero value otherwise.
func (o *Purchasing) GetWarrantyExpiresDate() time.Time {
	if o == nil || o.WarrantyExpiresDate == nil {
		var ret time.Time
		return ret
	}
	return *o.WarrantyExpiresDate
}

// GetWarrantyExpiresDateOk returns a tuple with the WarrantyExpiresDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Purchasing) GetWarrantyExpiresDateOk() (*time.Time, bool) {
	if o == nil || o.WarrantyExpiresDate == nil {
		return nil, false
	}
	return o.WarrantyExpiresDate, true
}

// HasWarrantyExpiresDate returns a boolean if a field has been set.
func (o *Purchasing) HasWarrantyExpiresDate() bool {
	if o != nil && o.WarrantyExpiresDate != nil {
		return true
	}

	return false
}

// SetWarrantyExpiresDate gets a reference to the given time.Time and assigns it to the WarrantyExpiresDate field.
func (o *Purchasing) SetWarrantyExpiresDate(v time.Time) {
	o.WarrantyExpiresDate = &v
}

// GetLeaseExpiresDate returns the LeaseExpiresDate field value if set, zero value otherwise.
func (o *Purchasing) GetLeaseExpiresDate() time.Time {
	if o == nil || o.LeaseExpiresDate == nil {
		var ret time.Time
		return ret
	}
	return *o.LeaseExpiresDate
}

// GetLeaseExpiresDateOk returns a tuple with the LeaseExpiresDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Purchasing) GetLeaseExpiresDateOk() (*time.Time, bool) {
	if o == nil || o.LeaseExpiresDate == nil {
		return nil, false
	}
	return o.LeaseExpiresDate, true
}

// HasLeaseExpiresDate returns a boolean if a field has been set.
func (o *Purchasing) HasLeaseExpiresDate() bool {
	if o != nil && o.LeaseExpiresDate != nil {
		return true
	}

	return false
}

// SetLeaseExpiresDate gets a reference to the given time.Time and assigns it to the LeaseExpiresDate field.
func (o *Purchasing) SetLeaseExpiresDate(v time.Time) {
	o.LeaseExpiresDate = &v
}

// GetLifeExpectancy returns the LifeExpectancy field value if set, zero value otherwise.
func (o *Purchasing) GetLifeExpectancy() int32 {
	if o == nil || o.LifeExpectancy == nil {
		var ret int32
		return ret
	}
	return *o.LifeExpectancy
}

// GetLifeExpectancyOk returns a tuple with the LifeExpectancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Purchasing) GetLifeExpectancyOk() (*int32, bool) {
	if o == nil || o.LifeExpectancy == nil {
		return nil, false
	}
	return o.LifeExpectancy, true
}

// HasLifeExpectancy returns a boolean if a field has been set.
func (o *Purchasing) HasLifeExpectancy() bool {
	if o != nil && o.LifeExpectancy != nil {
		return true
	}

	return false
}

// SetLifeExpectancy gets a reference to the given int32 and assigns it to the LifeExpectancy field.
func (o *Purchasing) SetLifeExpectancy(v int32) {
	o.LifeExpectancy = &v
}

// GetPurchasingContact returns the PurchasingContact field value if set, zero value otherwise.
func (o *Purchasing) GetPurchasingContact() string {
	if o == nil || o.PurchasingContact == nil {
		var ret string
		return ret
	}
	return *o.PurchasingContact
}

// GetPurchasingContactOk returns a tuple with the PurchasingContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Purchasing) GetPurchasingContactOk() (*string, bool) {
	if o == nil || o.PurchasingContact == nil {
		return nil, false
	}
	return o.PurchasingContact, true
}

// HasPurchasingContact returns a boolean if a field has been set.
func (o *Purchasing) HasPurchasingContact() bool {
	if o != nil && o.PurchasingContact != nil {
		return true
	}

	return false
}

// SetPurchasingContact gets a reference to the given string and assigns it to the PurchasingContact field.
func (o *Purchasing) SetPurchasingContact(v string) {
	o.PurchasingContact = &v
}

func (o Purchasing) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsPurchased != nil {
		toSerialize["isPurchased"] = o.IsPurchased
	}
	if o.IsLeased != nil {
		toSerialize["isLeased"] = o.IsLeased
	}
	if o.PoNumber != nil {
		toSerialize["poNumber"] = o.PoNumber
	}
	if o.Vendor != nil {
		toSerialize["vendor"] = o.Vendor
	}
	if o.AppleCareId != nil {
		toSerialize["appleCareId"] = o.AppleCareId
	}
	if o.PurchasePrice != nil {
		toSerialize["purchasePrice"] = o.PurchasePrice
	}
	if o.PurchasingAccount != nil {
		toSerialize["purchasingAccount"] = o.PurchasingAccount
	}
	if o.PoDate != nil {
		toSerialize["poDate"] = o.PoDate
	}
	if o.WarrantyExpiresDate != nil {
		toSerialize["warrantyExpiresDate"] = o.WarrantyExpiresDate
	}
	if o.LeaseExpiresDate != nil {
		toSerialize["leaseExpiresDate"] = o.LeaseExpiresDate
	}
	if o.LifeExpectancy != nil {
		toSerialize["lifeExpectancy"] = o.LifeExpectancy
	}
	if o.PurchasingContact != nil {
		toSerialize["purchasingContact"] = o.PurchasingContact
	}
	return json.Marshal(toSerialize)
}

type NullablePurchasing struct {
	value *Purchasing
	isSet bool
}

func (v NullablePurchasing) Get() *Purchasing {
	return v.value
}

func (v *NullablePurchasing) Set(val *Purchasing) {
	v.value = val
	v.isSet = true
}

func (v NullablePurchasing) IsSet() bool {
	return v.isSet
}

func (v *NullablePurchasing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePurchasing(val *Purchasing) *NullablePurchasing {
	return &NullablePurchasing{value: val, isSet: true}
}

func (v NullablePurchasing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePurchasing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


