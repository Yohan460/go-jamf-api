/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the Recipients type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Recipients{}

// Recipients struct for Recipients
type Recipients struct {
	RecipientList []Recipient `json:"recipientList,omitempty"`
}

// NewRecipients instantiates a new Recipients object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecipients() *Recipients {
	this := Recipients{}
	return &this
}

// NewRecipientsWithDefaults instantiates a new Recipients object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecipientsWithDefaults() *Recipients {
	this := Recipients{}
	return &this
}

// GetRecipientList returns the RecipientList field value if set, zero value otherwise.
func (o *Recipients) GetRecipientList() []Recipient {
	if o == nil || IsNil(o.RecipientList) {
		var ret []Recipient
		return ret
	}
	return o.RecipientList
}

// GetRecipientListOk returns a tuple with the RecipientList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recipients) GetRecipientListOk() ([]Recipient, bool) {
	if o == nil || IsNil(o.RecipientList) {
		return nil, false
	}
	return o.RecipientList, true
}

// HasRecipientList returns a boolean if a field has been set.
func (o *Recipients) HasRecipientList() bool {
	if o != nil && !IsNil(o.RecipientList) {
		return true
	}

	return false
}

// SetRecipientList gets a reference to the given []Recipient and assigns it to the RecipientList field.
func (o *Recipients) SetRecipientList(v []Recipient) {
	o.RecipientList = v
}

func (o Recipients) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Recipients) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RecipientList) {
		toSerialize["recipientList"] = o.RecipientList
	}
	return toSerialize, nil
}

type NullableRecipients struct {
	value *Recipients
	isSet bool
}

func (v NullableRecipients) Get() *Recipients {
	return v.value
}

func (v *NullableRecipients) Set(val *Recipients) {
	v.value = val
	v.isSet = true
}

func (v NullableRecipients) IsSet() bool {
	return v.isSet
}

func (v *NullableRecipients) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecipients(val *Recipients) *NullableRecipients {
	return &NullableRecipients{value: val, isSet: true}
}

func (v NullableRecipients) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecipients) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


