/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ComputerInventoryUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComputerInventoryUpdateRequest{}

// ComputerInventoryUpdateRequest struct for ComputerInventoryUpdateRequest
type ComputerInventoryUpdateRequest struct {
	Udid *string `json:"udid,omitempty"`
	General *ComputerGeneralUpdate `json:"general,omitempty"`
	Purchasing *ComputerPurchase `json:"purchasing,omitempty"`
	UserAndLocation *ComputerUserAndLocation `json:"userAndLocation,omitempty"`
	Hardware *ComputerHardwareUpdate `json:"hardware,omitempty"`
	OperatingSystem *ComputerOperatingSystemUpdate `json:"operatingSystem,omitempty"`
	ExtensionAttributes []ComputerExtensionAttribute `json:"extensionAttributes,omitempty"`
}

// NewComputerInventoryUpdateRequest instantiates a new ComputerInventoryUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComputerInventoryUpdateRequest() *ComputerInventoryUpdateRequest {
	this := ComputerInventoryUpdateRequest{}
	return &this
}

// NewComputerInventoryUpdateRequestWithDefaults instantiates a new ComputerInventoryUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComputerInventoryUpdateRequestWithDefaults() *ComputerInventoryUpdateRequest {
	this := ComputerInventoryUpdateRequest{}
	return &this
}

// GetUdid returns the Udid field value if set, zero value otherwise.
func (o *ComputerInventoryUpdateRequest) GetUdid() string {
	if o == nil || IsNil(o.Udid) {
		var ret string
		return ret
	}
	return *o.Udid
}

// GetUdidOk returns a tuple with the Udid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryUpdateRequest) GetUdidOk() (*string, bool) {
	if o == nil || IsNil(o.Udid) {
		return nil, false
	}
	return o.Udid, true
}

// HasUdid returns a boolean if a field has been set.
func (o *ComputerInventoryUpdateRequest) HasUdid() bool {
	if o != nil && !IsNil(o.Udid) {
		return true
	}

	return false
}

// SetUdid gets a reference to the given string and assigns it to the Udid field.
func (o *ComputerInventoryUpdateRequest) SetUdid(v string) {
	o.Udid = &v
}

// GetGeneral returns the General field value if set, zero value otherwise.
func (o *ComputerInventoryUpdateRequest) GetGeneral() ComputerGeneralUpdate {
	if o == nil || IsNil(o.General) {
		var ret ComputerGeneralUpdate
		return ret
	}
	return *o.General
}

// GetGeneralOk returns a tuple with the General field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryUpdateRequest) GetGeneralOk() (*ComputerGeneralUpdate, bool) {
	if o == nil || IsNil(o.General) {
		return nil, false
	}
	return o.General, true
}

// HasGeneral returns a boolean if a field has been set.
func (o *ComputerInventoryUpdateRequest) HasGeneral() bool {
	if o != nil && !IsNil(o.General) {
		return true
	}

	return false
}

// SetGeneral gets a reference to the given ComputerGeneralUpdate and assigns it to the General field.
func (o *ComputerInventoryUpdateRequest) SetGeneral(v ComputerGeneralUpdate) {
	o.General = &v
}

// GetPurchasing returns the Purchasing field value if set, zero value otherwise.
func (o *ComputerInventoryUpdateRequest) GetPurchasing() ComputerPurchase {
	if o == nil || IsNil(o.Purchasing) {
		var ret ComputerPurchase
		return ret
	}
	return *o.Purchasing
}

// GetPurchasingOk returns a tuple with the Purchasing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryUpdateRequest) GetPurchasingOk() (*ComputerPurchase, bool) {
	if o == nil || IsNil(o.Purchasing) {
		return nil, false
	}
	return o.Purchasing, true
}

// HasPurchasing returns a boolean if a field has been set.
func (o *ComputerInventoryUpdateRequest) HasPurchasing() bool {
	if o != nil && !IsNil(o.Purchasing) {
		return true
	}

	return false
}

// SetPurchasing gets a reference to the given ComputerPurchase and assigns it to the Purchasing field.
func (o *ComputerInventoryUpdateRequest) SetPurchasing(v ComputerPurchase) {
	o.Purchasing = &v
}

// GetUserAndLocation returns the UserAndLocation field value if set, zero value otherwise.
func (o *ComputerInventoryUpdateRequest) GetUserAndLocation() ComputerUserAndLocation {
	if o == nil || IsNil(o.UserAndLocation) {
		var ret ComputerUserAndLocation
		return ret
	}
	return *o.UserAndLocation
}

// GetUserAndLocationOk returns a tuple with the UserAndLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryUpdateRequest) GetUserAndLocationOk() (*ComputerUserAndLocation, bool) {
	if o == nil || IsNil(o.UserAndLocation) {
		return nil, false
	}
	return o.UserAndLocation, true
}

// HasUserAndLocation returns a boolean if a field has been set.
func (o *ComputerInventoryUpdateRequest) HasUserAndLocation() bool {
	if o != nil && !IsNil(o.UserAndLocation) {
		return true
	}

	return false
}

// SetUserAndLocation gets a reference to the given ComputerUserAndLocation and assigns it to the UserAndLocation field.
func (o *ComputerInventoryUpdateRequest) SetUserAndLocation(v ComputerUserAndLocation) {
	o.UserAndLocation = &v
}

// GetHardware returns the Hardware field value if set, zero value otherwise.
func (o *ComputerInventoryUpdateRequest) GetHardware() ComputerHardwareUpdate {
	if o == nil || IsNil(o.Hardware) {
		var ret ComputerHardwareUpdate
		return ret
	}
	return *o.Hardware
}

// GetHardwareOk returns a tuple with the Hardware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryUpdateRequest) GetHardwareOk() (*ComputerHardwareUpdate, bool) {
	if o == nil || IsNil(o.Hardware) {
		return nil, false
	}
	return o.Hardware, true
}

// HasHardware returns a boolean if a field has been set.
func (o *ComputerInventoryUpdateRequest) HasHardware() bool {
	if o != nil && !IsNil(o.Hardware) {
		return true
	}

	return false
}

// SetHardware gets a reference to the given ComputerHardwareUpdate and assigns it to the Hardware field.
func (o *ComputerInventoryUpdateRequest) SetHardware(v ComputerHardwareUpdate) {
	o.Hardware = &v
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise.
func (o *ComputerInventoryUpdateRequest) GetOperatingSystem() ComputerOperatingSystemUpdate {
	if o == nil || IsNil(o.OperatingSystem) {
		var ret ComputerOperatingSystemUpdate
		return ret
	}
	return *o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryUpdateRequest) GetOperatingSystemOk() (*ComputerOperatingSystemUpdate, bool) {
	if o == nil || IsNil(o.OperatingSystem) {
		return nil, false
	}
	return o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *ComputerInventoryUpdateRequest) HasOperatingSystem() bool {
	if o != nil && !IsNil(o.OperatingSystem) {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given ComputerOperatingSystemUpdate and assigns it to the OperatingSystem field.
func (o *ComputerInventoryUpdateRequest) SetOperatingSystem(v ComputerOperatingSystemUpdate) {
	o.OperatingSystem = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *ComputerInventoryUpdateRequest) GetExtensionAttributes() []ComputerExtensionAttribute {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret []ComputerExtensionAttribute
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryUpdateRequest) GetExtensionAttributesOk() ([]ComputerExtensionAttribute, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *ComputerInventoryUpdateRequest) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given []ComputerExtensionAttribute and assigns it to the ExtensionAttributes field.
func (o *ComputerInventoryUpdateRequest) SetExtensionAttributes(v []ComputerExtensionAttribute) {
	o.ExtensionAttributes = v
}

func (o ComputerInventoryUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComputerInventoryUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Udid) {
		toSerialize["udid"] = o.Udid
	}
	if !IsNil(o.General) {
		toSerialize["general"] = o.General
	}
	if !IsNil(o.Purchasing) {
		toSerialize["purchasing"] = o.Purchasing
	}
	if !IsNil(o.UserAndLocation) {
		toSerialize["userAndLocation"] = o.UserAndLocation
	}
	if !IsNil(o.Hardware) {
		toSerialize["hardware"] = o.Hardware
	}
	if !IsNil(o.OperatingSystem) {
		toSerialize["operatingSystem"] = o.OperatingSystem
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extensionAttributes"] = o.ExtensionAttributes
	}
	return toSerialize, nil
}

type NullableComputerInventoryUpdateRequest struct {
	value *ComputerInventoryUpdateRequest
	isSet bool
}

func (v NullableComputerInventoryUpdateRequest) Get() *ComputerInventoryUpdateRequest {
	return v.value
}

func (v *NullableComputerInventoryUpdateRequest) Set(val *ComputerInventoryUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableComputerInventoryUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableComputerInventoryUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComputerInventoryUpdateRequest(val *ComputerInventoryUpdateRequest) *NullableComputerInventoryUpdateRequest {
	return &NullableComputerInventoryUpdateRequest{value: val, isSet: true}
}

func (v NullableComputerInventoryUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComputerInventoryUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


