/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ComputerInventoryResponse struct for ComputerInventoryResponse
type ComputerInventoryResponse struct {
	Id *string `json:"id,omitempty"`
	Udid *string `json:"udid,omitempty"`
	General *ComputerGeneral `json:"general,omitempty"`
	DiskEncryption *ComputerDiskEncryption `json:"diskEncryption,omitempty"`
	Purchasing *ComputerPurchase `json:"purchasing,omitempty"`
	Applications []ComputerApplication `json:"applications,omitempty"`
	Storage *ComputerStorage `json:"storage,omitempty"`
	UserAndLocation *ComputerUserAndLocation `json:"userAndLocation,omitempty"`
	ConfigurationProfiles []ComputerConfigurationProfile `json:"configurationProfiles,omitempty"`
	Printers []ComputerPrinter `json:"printers,omitempty"`
	Services []ComputerService `json:"services,omitempty"`
	Hardware *ComputerHardware `json:"hardware,omitempty"`
	LocalUserAccounts []ComputerLocalUserAccount `json:"localUserAccounts,omitempty"`
	Certificates []ComputerCertificate `json:"certificates,omitempty"`
	Attachments []ComputerAttachment `json:"attachments,omitempty"`
	Plugins []ComputerPlugin `json:"plugins,omitempty"`
	PackageReceipts *ComputerPackageReceipts `json:"packageReceipts,omitempty"`
	Fonts []ComputerFont `json:"fonts,omitempty"`
	Security *ComputerSecurity `json:"security,omitempty"`
	OperatingSystem *ComputerOperatingSystem `json:"operatingSystem,omitempty"`
	LicensedSoftware []ComputerLicensedSoftware `json:"licensedSoftware,omitempty"`
	Ibeacons []ComputerIbeacon `json:"ibeacons,omitempty"`
	SoftwareUpdates []ComputerSoftwareUpdate `json:"softwareUpdates,omitempty"`
	ExtensionAttributes []ComputerExtensionAttribute `json:"extensionAttributes,omitempty"`
	ContentCaching *ComputerContentCaching `json:"contentCaching,omitempty"`
	GroupMemberships []GroupMembership `json:"groupMemberships,omitempty"`
}

// NewComputerInventoryResponse instantiates a new ComputerInventoryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComputerInventoryResponse() *ComputerInventoryResponse {
	this := ComputerInventoryResponse{}
	return &this
}

// NewComputerInventoryResponseWithDefaults instantiates a new ComputerInventoryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComputerInventoryResponseWithDefaults() *ComputerInventoryResponse {
	this := ComputerInventoryResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ComputerInventoryResponse) SetId(v string) {
	o.Id = &v
}

// GetUdid returns the Udid field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetUdid() string {
	if o == nil || o.Udid == nil {
		var ret string
		return ret
	}
	return *o.Udid
}

// GetUdidOk returns a tuple with the Udid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetUdidOk() (*string, bool) {
	if o == nil || o.Udid == nil {
		return nil, false
	}
	return o.Udid, true
}

// HasUdid returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasUdid() bool {
	if o != nil && o.Udid != nil {
		return true
	}

	return false
}

// SetUdid gets a reference to the given string and assigns it to the Udid field.
func (o *ComputerInventoryResponse) SetUdid(v string) {
	o.Udid = &v
}

// GetGeneral returns the General field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetGeneral() ComputerGeneral {
	if o == nil || o.General == nil {
		var ret ComputerGeneral
		return ret
	}
	return *o.General
}

// GetGeneralOk returns a tuple with the General field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetGeneralOk() (*ComputerGeneral, bool) {
	if o == nil || o.General == nil {
		return nil, false
	}
	return o.General, true
}

// HasGeneral returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasGeneral() bool {
	if o != nil && o.General != nil {
		return true
	}

	return false
}

// SetGeneral gets a reference to the given ComputerGeneral and assigns it to the General field.
func (o *ComputerInventoryResponse) SetGeneral(v ComputerGeneral) {
	o.General = &v
}

// GetDiskEncryption returns the DiskEncryption field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetDiskEncryption() ComputerDiskEncryption {
	if o == nil || o.DiskEncryption == nil {
		var ret ComputerDiskEncryption
		return ret
	}
	return *o.DiskEncryption
}

// GetDiskEncryptionOk returns a tuple with the DiskEncryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetDiskEncryptionOk() (*ComputerDiskEncryption, bool) {
	if o == nil || o.DiskEncryption == nil {
		return nil, false
	}
	return o.DiskEncryption, true
}

// HasDiskEncryption returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasDiskEncryption() bool {
	if o != nil && o.DiskEncryption != nil {
		return true
	}

	return false
}

// SetDiskEncryption gets a reference to the given ComputerDiskEncryption and assigns it to the DiskEncryption field.
func (o *ComputerInventoryResponse) SetDiskEncryption(v ComputerDiskEncryption) {
	o.DiskEncryption = &v
}

// GetPurchasing returns the Purchasing field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetPurchasing() ComputerPurchase {
	if o == nil || o.Purchasing == nil {
		var ret ComputerPurchase
		return ret
	}
	return *o.Purchasing
}

// GetPurchasingOk returns a tuple with the Purchasing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetPurchasingOk() (*ComputerPurchase, bool) {
	if o == nil || o.Purchasing == nil {
		return nil, false
	}
	return o.Purchasing, true
}

// HasPurchasing returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasPurchasing() bool {
	if o != nil && o.Purchasing != nil {
		return true
	}

	return false
}

// SetPurchasing gets a reference to the given ComputerPurchase and assigns it to the Purchasing field.
func (o *ComputerInventoryResponse) SetPurchasing(v ComputerPurchase) {
	o.Purchasing = &v
}

// GetApplications returns the Applications field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetApplications() []ComputerApplication {
	if o == nil || o.Applications == nil {
		var ret []ComputerApplication
		return ret
	}
	return o.Applications
}

// GetApplicationsOk returns a tuple with the Applications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetApplicationsOk() ([]ComputerApplication, bool) {
	if o == nil || o.Applications == nil {
		return nil, false
	}
	return o.Applications, true
}

// HasApplications returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasApplications() bool {
	if o != nil && o.Applications != nil {
		return true
	}

	return false
}

// SetApplications gets a reference to the given []ComputerApplication and assigns it to the Applications field.
func (o *ComputerInventoryResponse) SetApplications(v []ComputerApplication) {
	o.Applications = v
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetStorage() ComputerStorage {
	if o == nil || o.Storage == nil {
		var ret ComputerStorage
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetStorageOk() (*ComputerStorage, bool) {
	if o == nil || o.Storage == nil {
		return nil, false
	}
	return o.Storage, true
}

// HasStorage returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasStorage() bool {
	if o != nil && o.Storage != nil {
		return true
	}

	return false
}

// SetStorage gets a reference to the given ComputerStorage and assigns it to the Storage field.
func (o *ComputerInventoryResponse) SetStorage(v ComputerStorage) {
	o.Storage = &v
}

// GetUserAndLocation returns the UserAndLocation field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetUserAndLocation() ComputerUserAndLocation {
	if o == nil || o.UserAndLocation == nil {
		var ret ComputerUserAndLocation
		return ret
	}
	return *o.UserAndLocation
}

// GetUserAndLocationOk returns a tuple with the UserAndLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetUserAndLocationOk() (*ComputerUserAndLocation, bool) {
	if o == nil || o.UserAndLocation == nil {
		return nil, false
	}
	return o.UserAndLocation, true
}

// HasUserAndLocation returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasUserAndLocation() bool {
	if o != nil && o.UserAndLocation != nil {
		return true
	}

	return false
}

// SetUserAndLocation gets a reference to the given ComputerUserAndLocation and assigns it to the UserAndLocation field.
func (o *ComputerInventoryResponse) SetUserAndLocation(v ComputerUserAndLocation) {
	o.UserAndLocation = &v
}

// GetConfigurationProfiles returns the ConfigurationProfiles field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetConfigurationProfiles() []ComputerConfigurationProfile {
	if o == nil || o.ConfigurationProfiles == nil {
		var ret []ComputerConfigurationProfile
		return ret
	}
	return o.ConfigurationProfiles
}

// GetConfigurationProfilesOk returns a tuple with the ConfigurationProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetConfigurationProfilesOk() ([]ComputerConfigurationProfile, bool) {
	if o == nil || o.ConfigurationProfiles == nil {
		return nil, false
	}
	return o.ConfigurationProfiles, true
}

// HasConfigurationProfiles returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasConfigurationProfiles() bool {
	if o != nil && o.ConfigurationProfiles != nil {
		return true
	}

	return false
}

// SetConfigurationProfiles gets a reference to the given []ComputerConfigurationProfile and assigns it to the ConfigurationProfiles field.
func (o *ComputerInventoryResponse) SetConfigurationProfiles(v []ComputerConfigurationProfile) {
	o.ConfigurationProfiles = v
}

// GetPrinters returns the Printers field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetPrinters() []ComputerPrinter {
	if o == nil || o.Printers == nil {
		var ret []ComputerPrinter
		return ret
	}
	return o.Printers
}

// GetPrintersOk returns a tuple with the Printers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetPrintersOk() ([]ComputerPrinter, bool) {
	if o == nil || o.Printers == nil {
		return nil, false
	}
	return o.Printers, true
}

// HasPrinters returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasPrinters() bool {
	if o != nil && o.Printers != nil {
		return true
	}

	return false
}

// SetPrinters gets a reference to the given []ComputerPrinter and assigns it to the Printers field.
func (o *ComputerInventoryResponse) SetPrinters(v []ComputerPrinter) {
	o.Printers = v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetServices() []ComputerService {
	if o == nil || o.Services == nil {
		var ret []ComputerService
		return ret
	}
	return o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetServicesOk() ([]ComputerService, bool) {
	if o == nil || o.Services == nil {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasServices() bool {
	if o != nil && o.Services != nil {
		return true
	}

	return false
}

// SetServices gets a reference to the given []ComputerService and assigns it to the Services field.
func (o *ComputerInventoryResponse) SetServices(v []ComputerService) {
	o.Services = v
}

// GetHardware returns the Hardware field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetHardware() ComputerHardware {
	if o == nil || o.Hardware == nil {
		var ret ComputerHardware
		return ret
	}
	return *o.Hardware
}

// GetHardwareOk returns a tuple with the Hardware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetHardwareOk() (*ComputerHardware, bool) {
	if o == nil || o.Hardware == nil {
		return nil, false
	}
	return o.Hardware, true
}

// HasHardware returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasHardware() bool {
	if o != nil && o.Hardware != nil {
		return true
	}

	return false
}

// SetHardware gets a reference to the given ComputerHardware and assigns it to the Hardware field.
func (o *ComputerInventoryResponse) SetHardware(v ComputerHardware) {
	o.Hardware = &v
}

// GetLocalUserAccounts returns the LocalUserAccounts field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetLocalUserAccounts() []ComputerLocalUserAccount {
	if o == nil || o.LocalUserAccounts == nil {
		var ret []ComputerLocalUserAccount
		return ret
	}
	return o.LocalUserAccounts
}

// GetLocalUserAccountsOk returns a tuple with the LocalUserAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetLocalUserAccountsOk() ([]ComputerLocalUserAccount, bool) {
	if o == nil || o.LocalUserAccounts == nil {
		return nil, false
	}
	return o.LocalUserAccounts, true
}

// HasLocalUserAccounts returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasLocalUserAccounts() bool {
	if o != nil && o.LocalUserAccounts != nil {
		return true
	}

	return false
}

// SetLocalUserAccounts gets a reference to the given []ComputerLocalUserAccount and assigns it to the LocalUserAccounts field.
func (o *ComputerInventoryResponse) SetLocalUserAccounts(v []ComputerLocalUserAccount) {
	o.LocalUserAccounts = v
}

// GetCertificates returns the Certificates field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetCertificates() []ComputerCertificate {
	if o == nil || o.Certificates == nil {
		var ret []ComputerCertificate
		return ret
	}
	return o.Certificates
}

// GetCertificatesOk returns a tuple with the Certificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetCertificatesOk() ([]ComputerCertificate, bool) {
	if o == nil || o.Certificates == nil {
		return nil, false
	}
	return o.Certificates, true
}

// HasCertificates returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasCertificates() bool {
	if o != nil && o.Certificates != nil {
		return true
	}

	return false
}

// SetCertificates gets a reference to the given []ComputerCertificate and assigns it to the Certificates field.
func (o *ComputerInventoryResponse) SetCertificates(v []ComputerCertificate) {
	o.Certificates = v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetAttachments() []ComputerAttachment {
	if o == nil || o.Attachments == nil {
		var ret []ComputerAttachment
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetAttachmentsOk() ([]ComputerAttachment, bool) {
	if o == nil || o.Attachments == nil {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasAttachments() bool {
	if o != nil && o.Attachments != nil {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []ComputerAttachment and assigns it to the Attachments field.
func (o *ComputerInventoryResponse) SetAttachments(v []ComputerAttachment) {
	o.Attachments = v
}

// GetPlugins returns the Plugins field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetPlugins() []ComputerPlugin {
	if o == nil || o.Plugins == nil {
		var ret []ComputerPlugin
		return ret
	}
	return o.Plugins
}

// GetPluginsOk returns a tuple with the Plugins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetPluginsOk() ([]ComputerPlugin, bool) {
	if o == nil || o.Plugins == nil {
		return nil, false
	}
	return o.Plugins, true
}

// HasPlugins returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasPlugins() bool {
	if o != nil && o.Plugins != nil {
		return true
	}

	return false
}

// SetPlugins gets a reference to the given []ComputerPlugin and assigns it to the Plugins field.
func (o *ComputerInventoryResponse) SetPlugins(v []ComputerPlugin) {
	o.Plugins = v
}

// GetPackageReceipts returns the PackageReceipts field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetPackageReceipts() ComputerPackageReceipts {
	if o == nil || o.PackageReceipts == nil {
		var ret ComputerPackageReceipts
		return ret
	}
	return *o.PackageReceipts
}

// GetPackageReceiptsOk returns a tuple with the PackageReceipts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetPackageReceiptsOk() (*ComputerPackageReceipts, bool) {
	if o == nil || o.PackageReceipts == nil {
		return nil, false
	}
	return o.PackageReceipts, true
}

// HasPackageReceipts returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasPackageReceipts() bool {
	if o != nil && o.PackageReceipts != nil {
		return true
	}

	return false
}

// SetPackageReceipts gets a reference to the given ComputerPackageReceipts and assigns it to the PackageReceipts field.
func (o *ComputerInventoryResponse) SetPackageReceipts(v ComputerPackageReceipts) {
	o.PackageReceipts = &v
}

// GetFonts returns the Fonts field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetFonts() []ComputerFont {
	if o == nil || o.Fonts == nil {
		var ret []ComputerFont
		return ret
	}
	return o.Fonts
}

// GetFontsOk returns a tuple with the Fonts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetFontsOk() ([]ComputerFont, bool) {
	if o == nil || o.Fonts == nil {
		return nil, false
	}
	return o.Fonts, true
}

// HasFonts returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasFonts() bool {
	if o != nil && o.Fonts != nil {
		return true
	}

	return false
}

// SetFonts gets a reference to the given []ComputerFont and assigns it to the Fonts field.
func (o *ComputerInventoryResponse) SetFonts(v []ComputerFont) {
	o.Fonts = v
}

// GetSecurity returns the Security field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetSecurity() ComputerSecurity {
	if o == nil || o.Security == nil {
		var ret ComputerSecurity
		return ret
	}
	return *o.Security
}

// GetSecurityOk returns a tuple with the Security field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetSecurityOk() (*ComputerSecurity, bool) {
	if o == nil || o.Security == nil {
		return nil, false
	}
	return o.Security, true
}

// HasSecurity returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasSecurity() bool {
	if o != nil && o.Security != nil {
		return true
	}

	return false
}

// SetSecurity gets a reference to the given ComputerSecurity and assigns it to the Security field.
func (o *ComputerInventoryResponse) SetSecurity(v ComputerSecurity) {
	o.Security = &v
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetOperatingSystem() ComputerOperatingSystem {
	if o == nil || o.OperatingSystem == nil {
		var ret ComputerOperatingSystem
		return ret
	}
	return *o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetOperatingSystemOk() (*ComputerOperatingSystem, bool) {
	if o == nil || o.OperatingSystem == nil {
		return nil, false
	}
	return o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasOperatingSystem() bool {
	if o != nil && o.OperatingSystem != nil {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given ComputerOperatingSystem and assigns it to the OperatingSystem field.
func (o *ComputerInventoryResponse) SetOperatingSystem(v ComputerOperatingSystem) {
	o.OperatingSystem = &v
}

// GetLicensedSoftware returns the LicensedSoftware field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetLicensedSoftware() []ComputerLicensedSoftware {
	if o == nil || o.LicensedSoftware == nil {
		var ret []ComputerLicensedSoftware
		return ret
	}
	return o.LicensedSoftware
}

// GetLicensedSoftwareOk returns a tuple with the LicensedSoftware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetLicensedSoftwareOk() ([]ComputerLicensedSoftware, bool) {
	if o == nil || o.LicensedSoftware == nil {
		return nil, false
	}
	return o.LicensedSoftware, true
}

// HasLicensedSoftware returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasLicensedSoftware() bool {
	if o != nil && o.LicensedSoftware != nil {
		return true
	}

	return false
}

// SetLicensedSoftware gets a reference to the given []ComputerLicensedSoftware and assigns it to the LicensedSoftware field.
func (o *ComputerInventoryResponse) SetLicensedSoftware(v []ComputerLicensedSoftware) {
	o.LicensedSoftware = v
}

// GetIbeacons returns the Ibeacons field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetIbeacons() []ComputerIbeacon {
	if o == nil || o.Ibeacons == nil {
		var ret []ComputerIbeacon
		return ret
	}
	return o.Ibeacons
}

// GetIbeaconsOk returns a tuple with the Ibeacons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetIbeaconsOk() ([]ComputerIbeacon, bool) {
	if o == nil || o.Ibeacons == nil {
		return nil, false
	}
	return o.Ibeacons, true
}

// HasIbeacons returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasIbeacons() bool {
	if o != nil && o.Ibeacons != nil {
		return true
	}

	return false
}

// SetIbeacons gets a reference to the given []ComputerIbeacon and assigns it to the Ibeacons field.
func (o *ComputerInventoryResponse) SetIbeacons(v []ComputerIbeacon) {
	o.Ibeacons = v
}

// GetSoftwareUpdates returns the SoftwareUpdates field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetSoftwareUpdates() []ComputerSoftwareUpdate {
	if o == nil || o.SoftwareUpdates == nil {
		var ret []ComputerSoftwareUpdate
		return ret
	}
	return o.SoftwareUpdates
}

// GetSoftwareUpdatesOk returns a tuple with the SoftwareUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetSoftwareUpdatesOk() ([]ComputerSoftwareUpdate, bool) {
	if o == nil || o.SoftwareUpdates == nil {
		return nil, false
	}
	return o.SoftwareUpdates, true
}

// HasSoftwareUpdates returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasSoftwareUpdates() bool {
	if o != nil && o.SoftwareUpdates != nil {
		return true
	}

	return false
}

// SetSoftwareUpdates gets a reference to the given []ComputerSoftwareUpdate and assigns it to the SoftwareUpdates field.
func (o *ComputerInventoryResponse) SetSoftwareUpdates(v []ComputerSoftwareUpdate) {
	o.SoftwareUpdates = v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetExtensionAttributes() []ComputerExtensionAttribute {
	if o == nil || o.ExtensionAttributes == nil {
		var ret []ComputerExtensionAttribute
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetExtensionAttributesOk() ([]ComputerExtensionAttribute, bool) {
	if o == nil || o.ExtensionAttributes == nil {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasExtensionAttributes() bool {
	if o != nil && o.ExtensionAttributes != nil {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given []ComputerExtensionAttribute and assigns it to the ExtensionAttributes field.
func (o *ComputerInventoryResponse) SetExtensionAttributes(v []ComputerExtensionAttribute) {
	o.ExtensionAttributes = v
}

// GetContentCaching returns the ContentCaching field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetContentCaching() ComputerContentCaching {
	if o == nil || o.ContentCaching == nil {
		var ret ComputerContentCaching
		return ret
	}
	return *o.ContentCaching
}

// GetContentCachingOk returns a tuple with the ContentCaching field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetContentCachingOk() (*ComputerContentCaching, bool) {
	if o == nil || o.ContentCaching == nil {
		return nil, false
	}
	return o.ContentCaching, true
}

// HasContentCaching returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasContentCaching() bool {
	if o != nil && o.ContentCaching != nil {
		return true
	}

	return false
}

// SetContentCaching gets a reference to the given ComputerContentCaching and assigns it to the ContentCaching field.
func (o *ComputerInventoryResponse) SetContentCaching(v ComputerContentCaching) {
	o.ContentCaching = &v
}

// GetGroupMemberships returns the GroupMemberships field value if set, zero value otherwise.
func (o *ComputerInventoryResponse) GetGroupMemberships() []GroupMembership {
	if o == nil || o.GroupMemberships == nil {
		var ret []GroupMembership
		return ret
	}
	return o.GroupMemberships
}

// GetGroupMembershipsOk returns a tuple with the GroupMemberships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerInventoryResponse) GetGroupMembershipsOk() ([]GroupMembership, bool) {
	if o == nil || o.GroupMemberships == nil {
		return nil, false
	}
	return o.GroupMemberships, true
}

// HasGroupMemberships returns a boolean if a field has been set.
func (o *ComputerInventoryResponse) HasGroupMemberships() bool {
	if o != nil && o.GroupMemberships != nil {
		return true
	}

	return false
}

// SetGroupMemberships gets a reference to the given []GroupMembership and assigns it to the GroupMemberships field.
func (o *ComputerInventoryResponse) SetGroupMemberships(v []GroupMembership) {
	o.GroupMemberships = v
}

func (o ComputerInventoryResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Udid != nil {
		toSerialize["udid"] = o.Udid
	}
	if o.General != nil {
		toSerialize["general"] = o.General
	}
	if o.DiskEncryption != nil {
		toSerialize["diskEncryption"] = o.DiskEncryption
	}
	if o.Purchasing != nil {
		toSerialize["purchasing"] = o.Purchasing
	}
	if o.Applications != nil {
		toSerialize["applications"] = o.Applications
	}
	if o.Storage != nil {
		toSerialize["storage"] = o.Storage
	}
	if o.UserAndLocation != nil {
		toSerialize["userAndLocation"] = o.UserAndLocation
	}
	if o.ConfigurationProfiles != nil {
		toSerialize["configurationProfiles"] = o.ConfigurationProfiles
	}
	if o.Printers != nil {
		toSerialize["printers"] = o.Printers
	}
	if o.Services != nil {
		toSerialize["services"] = o.Services
	}
	if o.Hardware != nil {
		toSerialize["hardware"] = o.Hardware
	}
	if o.LocalUserAccounts != nil {
		toSerialize["localUserAccounts"] = o.LocalUserAccounts
	}
	if o.Certificates != nil {
		toSerialize["certificates"] = o.Certificates
	}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	if o.Plugins != nil {
		toSerialize["plugins"] = o.Plugins
	}
	if o.PackageReceipts != nil {
		toSerialize["packageReceipts"] = o.PackageReceipts
	}
	if o.Fonts != nil {
		toSerialize["fonts"] = o.Fonts
	}
	if o.Security != nil {
		toSerialize["security"] = o.Security
	}
	if o.OperatingSystem != nil {
		toSerialize["operatingSystem"] = o.OperatingSystem
	}
	if o.LicensedSoftware != nil {
		toSerialize["licensedSoftware"] = o.LicensedSoftware
	}
	if o.Ibeacons != nil {
		toSerialize["ibeacons"] = o.Ibeacons
	}
	if o.SoftwareUpdates != nil {
		toSerialize["softwareUpdates"] = o.SoftwareUpdates
	}
	if o.ExtensionAttributes != nil {
		toSerialize["extensionAttributes"] = o.ExtensionAttributes
	}
	if o.ContentCaching != nil {
		toSerialize["contentCaching"] = o.ContentCaching
	}
	if o.GroupMemberships != nil {
		toSerialize["groupMemberships"] = o.GroupMemberships
	}
	return json.Marshal(toSerialize)
}

type NullableComputerInventoryResponse struct {
	value *ComputerInventoryResponse
	isSet bool
}

func (v NullableComputerInventoryResponse) Get() *ComputerInventoryResponse {
	return v.value
}

func (v *NullableComputerInventoryResponse) Set(val *ComputerInventoryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableComputerInventoryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableComputerInventoryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComputerInventoryResponse(val *ComputerInventoryResponse) *NullableComputerInventoryResponse {
	return &NullableComputerInventoryResponse{value: val, isSet: true}
}

func (v NullableComputerInventoryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComputerInventoryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


