/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// LocationV2 struct for LocationV2
type LocationV2 struct {
	Username *string `json:"username,omitempty"`
	RealName *string `json:"realName,omitempty"`
	EmailAddress *string `json:"emailAddress,omitempty"`
	Position *string `json:"position,omitempty"`
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	DepartmentId *string `json:"departmentId,omitempty"`
	BuildingId *string `json:"buildingId,omitempty"`
	Room *string `json:"room,omitempty"`
}

// NewLocationV2 instantiates a new LocationV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationV2() *LocationV2 {
	this := LocationV2{}
	return &this
}

// NewLocationV2WithDefaults instantiates a new LocationV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationV2WithDefaults() *LocationV2 {
	this := LocationV2{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *LocationV2) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationV2) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *LocationV2) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *LocationV2) SetUsername(v string) {
	o.Username = &v
}

// GetRealName returns the RealName field value if set, zero value otherwise.
func (o *LocationV2) GetRealName() string {
	if o == nil || o.RealName == nil {
		var ret string
		return ret
	}
	return *o.RealName
}

// GetRealNameOk returns a tuple with the RealName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationV2) GetRealNameOk() (*string, bool) {
	if o == nil || o.RealName == nil {
		return nil, false
	}
	return o.RealName, true
}

// HasRealName returns a boolean if a field has been set.
func (o *LocationV2) HasRealName() bool {
	if o != nil && o.RealName != nil {
		return true
	}

	return false
}

// SetRealName gets a reference to the given string and assigns it to the RealName field.
func (o *LocationV2) SetRealName(v string) {
	o.RealName = &v
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise.
func (o *LocationV2) GetEmailAddress() string {
	if o == nil || o.EmailAddress == nil {
		var ret string
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationV2) GetEmailAddressOk() (*string, bool) {
	if o == nil || o.EmailAddress == nil {
		return nil, false
	}
	return o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *LocationV2) HasEmailAddress() bool {
	if o != nil && o.EmailAddress != nil {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given string and assigns it to the EmailAddress field.
func (o *LocationV2) SetEmailAddress(v string) {
	o.EmailAddress = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *LocationV2) GetPosition() string {
	if o == nil || o.Position == nil {
		var ret string
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationV2) GetPositionOk() (*string, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *LocationV2) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given string and assigns it to the Position field.
func (o *LocationV2) SetPosition(v string) {
	o.Position = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *LocationV2) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationV2) GetPhoneNumberOk() (*string, bool) {
	if o == nil || o.PhoneNumber == nil {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *LocationV2) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber != nil {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *LocationV2) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetDepartmentId returns the DepartmentId field value if set, zero value otherwise.
func (o *LocationV2) GetDepartmentId() string {
	if o == nil || o.DepartmentId == nil {
		var ret string
		return ret
	}
	return *o.DepartmentId
}

// GetDepartmentIdOk returns a tuple with the DepartmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationV2) GetDepartmentIdOk() (*string, bool) {
	if o == nil || o.DepartmentId == nil {
		return nil, false
	}
	return o.DepartmentId, true
}

// HasDepartmentId returns a boolean if a field has been set.
func (o *LocationV2) HasDepartmentId() bool {
	if o != nil && o.DepartmentId != nil {
		return true
	}

	return false
}

// SetDepartmentId gets a reference to the given string and assigns it to the DepartmentId field.
func (o *LocationV2) SetDepartmentId(v string) {
	o.DepartmentId = &v
}

// GetBuildingId returns the BuildingId field value if set, zero value otherwise.
func (o *LocationV2) GetBuildingId() string {
	if o == nil || o.BuildingId == nil {
		var ret string
		return ret
	}
	return *o.BuildingId
}

// GetBuildingIdOk returns a tuple with the BuildingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationV2) GetBuildingIdOk() (*string, bool) {
	if o == nil || o.BuildingId == nil {
		return nil, false
	}
	return o.BuildingId, true
}

// HasBuildingId returns a boolean if a field has been set.
func (o *LocationV2) HasBuildingId() bool {
	if o != nil && o.BuildingId != nil {
		return true
	}

	return false
}

// SetBuildingId gets a reference to the given string and assigns it to the BuildingId field.
func (o *LocationV2) SetBuildingId(v string) {
	o.BuildingId = &v
}

// GetRoom returns the Room field value if set, zero value otherwise.
func (o *LocationV2) GetRoom() string {
	if o == nil || o.Room == nil {
		var ret string
		return ret
	}
	return *o.Room
}

// GetRoomOk returns a tuple with the Room field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationV2) GetRoomOk() (*string, bool) {
	if o == nil || o.Room == nil {
		return nil, false
	}
	return o.Room, true
}

// HasRoom returns a boolean if a field has been set.
func (o *LocationV2) HasRoom() bool {
	if o != nil && o.Room != nil {
		return true
	}

	return false
}

// SetRoom gets a reference to the given string and assigns it to the Room field.
func (o *LocationV2) SetRoom(v string) {
	o.Room = &v
}

func (o LocationV2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.RealName != nil {
		toSerialize["realName"] = o.RealName
	}
	if o.EmailAddress != nil {
		toSerialize["emailAddress"] = o.EmailAddress
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.PhoneNumber != nil {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if o.DepartmentId != nil {
		toSerialize["departmentId"] = o.DepartmentId
	}
	if o.BuildingId != nil {
		toSerialize["buildingId"] = o.BuildingId
	}
	if o.Room != nil {
		toSerialize["room"] = o.Room
	}
	return json.Marshal(toSerialize)
}

type NullableLocationV2 struct {
	value *LocationV2
	isSet bool
}

func (v NullableLocationV2) Get() *LocationV2 {
	return v.value
}

func (v *NullableLocationV2) Set(val *LocationV2) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationV2) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationV2(val *LocationV2) *NullableLocationV2 {
	return &NullableLocationV2{value: val, isSet: true}
}

func (v NullableLocationV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


