/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// MobileDeviceDetailsV2 struct for MobileDeviceDetailsV2
type MobileDeviceDetailsV2 struct {
	Id *string `json:"id,omitempty"`
	// Mobile device name.
	Name *string `json:"name,omitempty"`
	// Enforce the mobile device name. Device must be supervised. If set to true, Jamf Pro will revert the Mobile Device Name to the ‘name’ value each time the device checks in.
	EnforceName *bool `json:"enforceName,omitempty"`
	AssetTag *string `json:"assetTag,omitempty"`
	LastInventoryUpdateTimestamp *time.Time `json:"lastInventoryUpdateTimestamp,omitempty"`
	OsVersion *string `json:"osVersion,omitempty"`
	OsBuild *string `json:"osBuild,omitempty"`
	SoftwareUpdateDeviceId *string `json:"softwareUpdateDeviceId,omitempty"`
	SerialNumber *string `json:"serialNumber,omitempty"`
	Udid *string `json:"udid,omitempty"`
	IpAddress *string `json:"ipAddress,omitempty"`
	WifiMacAddress *string `json:"wifiMacAddress,omitempty"`
	BluetoothMacAddress *string `json:"bluetoothMacAddress,omitempty"`
	Managed *bool `json:"managed,omitempty"`
	TimeZone *string `json:"timeZone,omitempty"`
	InitialEntryTimestamp *time.Time `json:"initialEntryTimestamp,omitempty"`
	LastEnrollmentTimestamp *time.Time `json:"lastEnrollmentTimestamp,omitempty"`
	MdmProfileExpirationTimestamp *time.Time `json:"mdmProfileExpirationTimestamp,omitempty"`
	DeviceOwnershipLevel *string `json:"deviceOwnershipLevel,omitempty"`
	EnrollmentMethod *string `json:"enrollmentMethod,omitempty"`
	Site *V1Site `json:"site,omitempty"`
	ExtensionAttributes []ExtensionAttributeV2 `json:"extensionAttributes,omitempty"`
	Location *LocationV2 `json:"location,omitempty"`
	// Based on the value of this either ios, appleTv, android objects will be populated.
	Type *string `json:"type,omitempty"`
	Ios *IosDetailsV2 `json:"ios,omitempty"`
	Tvos *TvOsDetails `json:"tvos,omitempty"`
}

// NewMobileDeviceDetailsV2 instantiates a new MobileDeviceDetailsV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileDeviceDetailsV2() *MobileDeviceDetailsV2 {
	this := MobileDeviceDetailsV2{}
	return &this
}

// NewMobileDeviceDetailsV2WithDefaults instantiates a new MobileDeviceDetailsV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileDeviceDetailsV2WithDefaults() *MobileDeviceDetailsV2 {
	this := MobileDeviceDetailsV2{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MobileDeviceDetailsV2) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MobileDeviceDetailsV2) SetName(v string) {
	o.Name = &v
}

// GetEnforceName returns the EnforceName field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetEnforceName() bool {
	if o == nil || o.EnforceName == nil {
		var ret bool
		return ret
	}
	return *o.EnforceName
}

// GetEnforceNameOk returns a tuple with the EnforceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetEnforceNameOk() (*bool, bool) {
	if o == nil || o.EnforceName == nil {
		return nil, false
	}
	return o.EnforceName, true
}

// HasEnforceName returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasEnforceName() bool {
	if o != nil && o.EnforceName != nil {
		return true
	}

	return false
}

// SetEnforceName gets a reference to the given bool and assigns it to the EnforceName field.
func (o *MobileDeviceDetailsV2) SetEnforceName(v bool) {
	o.EnforceName = &v
}

// GetAssetTag returns the AssetTag field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetAssetTag() string {
	if o == nil || o.AssetTag == nil {
		var ret string
		return ret
	}
	return *o.AssetTag
}

// GetAssetTagOk returns a tuple with the AssetTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetAssetTagOk() (*string, bool) {
	if o == nil || o.AssetTag == nil {
		return nil, false
	}
	return o.AssetTag, true
}

// HasAssetTag returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasAssetTag() bool {
	if o != nil && o.AssetTag != nil {
		return true
	}

	return false
}

// SetAssetTag gets a reference to the given string and assigns it to the AssetTag field.
func (o *MobileDeviceDetailsV2) SetAssetTag(v string) {
	o.AssetTag = &v
}

// GetLastInventoryUpdateTimestamp returns the LastInventoryUpdateTimestamp field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetLastInventoryUpdateTimestamp() time.Time {
	if o == nil || o.LastInventoryUpdateTimestamp == nil {
		var ret time.Time
		return ret
	}
	return *o.LastInventoryUpdateTimestamp
}

// GetLastInventoryUpdateTimestampOk returns a tuple with the LastInventoryUpdateTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetLastInventoryUpdateTimestampOk() (*time.Time, bool) {
	if o == nil || o.LastInventoryUpdateTimestamp == nil {
		return nil, false
	}
	return o.LastInventoryUpdateTimestamp, true
}

// HasLastInventoryUpdateTimestamp returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasLastInventoryUpdateTimestamp() bool {
	if o != nil && o.LastInventoryUpdateTimestamp != nil {
		return true
	}

	return false
}

// SetLastInventoryUpdateTimestamp gets a reference to the given time.Time and assigns it to the LastInventoryUpdateTimestamp field.
func (o *MobileDeviceDetailsV2) SetLastInventoryUpdateTimestamp(v time.Time) {
	o.LastInventoryUpdateTimestamp = &v
}

// GetOsVersion returns the OsVersion field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetOsVersion() string {
	if o == nil || o.OsVersion == nil {
		var ret string
		return ret
	}
	return *o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetOsVersionOk() (*string, bool) {
	if o == nil || o.OsVersion == nil {
		return nil, false
	}
	return o.OsVersion, true
}

// HasOsVersion returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasOsVersion() bool {
	if o != nil && o.OsVersion != nil {
		return true
	}

	return false
}

// SetOsVersion gets a reference to the given string and assigns it to the OsVersion field.
func (o *MobileDeviceDetailsV2) SetOsVersion(v string) {
	o.OsVersion = &v
}

// GetOsBuild returns the OsBuild field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetOsBuild() string {
	if o == nil || o.OsBuild == nil {
		var ret string
		return ret
	}
	return *o.OsBuild
}

// GetOsBuildOk returns a tuple with the OsBuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetOsBuildOk() (*string, bool) {
	if o == nil || o.OsBuild == nil {
		return nil, false
	}
	return o.OsBuild, true
}

// HasOsBuild returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasOsBuild() bool {
	if o != nil && o.OsBuild != nil {
		return true
	}

	return false
}

// SetOsBuild gets a reference to the given string and assigns it to the OsBuild field.
func (o *MobileDeviceDetailsV2) SetOsBuild(v string) {
	o.OsBuild = &v
}

// GetSoftwareUpdateDeviceId returns the SoftwareUpdateDeviceId field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetSoftwareUpdateDeviceId() string {
	if o == nil || o.SoftwareUpdateDeviceId == nil {
		var ret string
		return ret
	}
	return *o.SoftwareUpdateDeviceId
}

// GetSoftwareUpdateDeviceIdOk returns a tuple with the SoftwareUpdateDeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetSoftwareUpdateDeviceIdOk() (*string, bool) {
	if o == nil || o.SoftwareUpdateDeviceId == nil {
		return nil, false
	}
	return o.SoftwareUpdateDeviceId, true
}

// HasSoftwareUpdateDeviceId returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasSoftwareUpdateDeviceId() bool {
	if o != nil && o.SoftwareUpdateDeviceId != nil {
		return true
	}

	return false
}

// SetSoftwareUpdateDeviceId gets a reference to the given string and assigns it to the SoftwareUpdateDeviceId field.
func (o *MobileDeviceDetailsV2) SetSoftwareUpdateDeviceId(v string) {
	o.SoftwareUpdateDeviceId = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *MobileDeviceDetailsV2) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetUdid returns the Udid field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetUdid() string {
	if o == nil || o.Udid == nil {
		var ret string
		return ret
	}
	return *o.Udid
}

// GetUdidOk returns a tuple with the Udid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetUdidOk() (*string, bool) {
	if o == nil || o.Udid == nil {
		return nil, false
	}
	return o.Udid, true
}

// HasUdid returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasUdid() bool {
	if o != nil && o.Udid != nil {
		return true
	}

	return false
}

// SetUdid gets a reference to the given string and assigns it to the Udid field.
func (o *MobileDeviceDetailsV2) SetUdid(v string) {
	o.Udid = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *MobileDeviceDetailsV2) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetWifiMacAddress returns the WifiMacAddress field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetWifiMacAddress() string {
	if o == nil || o.WifiMacAddress == nil {
		var ret string
		return ret
	}
	return *o.WifiMacAddress
}

// GetWifiMacAddressOk returns a tuple with the WifiMacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetWifiMacAddressOk() (*string, bool) {
	if o == nil || o.WifiMacAddress == nil {
		return nil, false
	}
	return o.WifiMacAddress, true
}

// HasWifiMacAddress returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasWifiMacAddress() bool {
	if o != nil && o.WifiMacAddress != nil {
		return true
	}

	return false
}

// SetWifiMacAddress gets a reference to the given string and assigns it to the WifiMacAddress field.
func (o *MobileDeviceDetailsV2) SetWifiMacAddress(v string) {
	o.WifiMacAddress = &v
}

// GetBluetoothMacAddress returns the BluetoothMacAddress field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetBluetoothMacAddress() string {
	if o == nil || o.BluetoothMacAddress == nil {
		var ret string
		return ret
	}
	return *o.BluetoothMacAddress
}

// GetBluetoothMacAddressOk returns a tuple with the BluetoothMacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetBluetoothMacAddressOk() (*string, bool) {
	if o == nil || o.BluetoothMacAddress == nil {
		return nil, false
	}
	return o.BluetoothMacAddress, true
}

// HasBluetoothMacAddress returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasBluetoothMacAddress() bool {
	if o != nil && o.BluetoothMacAddress != nil {
		return true
	}

	return false
}

// SetBluetoothMacAddress gets a reference to the given string and assigns it to the BluetoothMacAddress field.
func (o *MobileDeviceDetailsV2) SetBluetoothMacAddress(v string) {
	o.BluetoothMacAddress = &v
}

// GetManaged returns the Managed field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetManaged() bool {
	if o == nil || o.Managed == nil {
		var ret bool
		return ret
	}
	return *o.Managed
}

// GetManagedOk returns a tuple with the Managed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetManagedOk() (*bool, bool) {
	if o == nil || o.Managed == nil {
		return nil, false
	}
	return o.Managed, true
}

// HasManaged returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasManaged() bool {
	if o != nil && o.Managed != nil {
		return true
	}

	return false
}

// SetManaged gets a reference to the given bool and assigns it to the Managed field.
func (o *MobileDeviceDetailsV2) SetManaged(v bool) {
	o.Managed = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetTimeZone() string {
	if o == nil || o.TimeZone == nil {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetTimeZoneOk() (*string, bool) {
	if o == nil || o.TimeZone == nil {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasTimeZone() bool {
	if o != nil && o.TimeZone != nil {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *MobileDeviceDetailsV2) SetTimeZone(v string) {
	o.TimeZone = &v
}

// GetInitialEntryTimestamp returns the InitialEntryTimestamp field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetInitialEntryTimestamp() time.Time {
	if o == nil || o.InitialEntryTimestamp == nil {
		var ret time.Time
		return ret
	}
	return *o.InitialEntryTimestamp
}

// GetInitialEntryTimestampOk returns a tuple with the InitialEntryTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetInitialEntryTimestampOk() (*time.Time, bool) {
	if o == nil || o.InitialEntryTimestamp == nil {
		return nil, false
	}
	return o.InitialEntryTimestamp, true
}

// HasInitialEntryTimestamp returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasInitialEntryTimestamp() bool {
	if o != nil && o.InitialEntryTimestamp != nil {
		return true
	}

	return false
}

// SetInitialEntryTimestamp gets a reference to the given time.Time and assigns it to the InitialEntryTimestamp field.
func (o *MobileDeviceDetailsV2) SetInitialEntryTimestamp(v time.Time) {
	o.InitialEntryTimestamp = &v
}

// GetLastEnrollmentTimestamp returns the LastEnrollmentTimestamp field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetLastEnrollmentTimestamp() time.Time {
	if o == nil || o.LastEnrollmentTimestamp == nil {
		var ret time.Time
		return ret
	}
	return *o.LastEnrollmentTimestamp
}

// GetLastEnrollmentTimestampOk returns a tuple with the LastEnrollmentTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetLastEnrollmentTimestampOk() (*time.Time, bool) {
	if o == nil || o.LastEnrollmentTimestamp == nil {
		return nil, false
	}
	return o.LastEnrollmentTimestamp, true
}

// HasLastEnrollmentTimestamp returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasLastEnrollmentTimestamp() bool {
	if o != nil && o.LastEnrollmentTimestamp != nil {
		return true
	}

	return false
}

// SetLastEnrollmentTimestamp gets a reference to the given time.Time and assigns it to the LastEnrollmentTimestamp field.
func (o *MobileDeviceDetailsV2) SetLastEnrollmentTimestamp(v time.Time) {
	o.LastEnrollmentTimestamp = &v
}

// GetMdmProfileExpirationTimestamp returns the MdmProfileExpirationTimestamp field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetMdmProfileExpirationTimestamp() time.Time {
	if o == nil || o.MdmProfileExpirationTimestamp == nil {
		var ret time.Time
		return ret
	}
	return *o.MdmProfileExpirationTimestamp
}

// GetMdmProfileExpirationTimestampOk returns a tuple with the MdmProfileExpirationTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetMdmProfileExpirationTimestampOk() (*time.Time, bool) {
	if o == nil || o.MdmProfileExpirationTimestamp == nil {
		return nil, false
	}
	return o.MdmProfileExpirationTimestamp, true
}

// HasMdmProfileExpirationTimestamp returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasMdmProfileExpirationTimestamp() bool {
	if o != nil && o.MdmProfileExpirationTimestamp != nil {
		return true
	}

	return false
}

// SetMdmProfileExpirationTimestamp gets a reference to the given time.Time and assigns it to the MdmProfileExpirationTimestamp field.
func (o *MobileDeviceDetailsV2) SetMdmProfileExpirationTimestamp(v time.Time) {
	o.MdmProfileExpirationTimestamp = &v
}

// GetDeviceOwnershipLevel returns the DeviceOwnershipLevel field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetDeviceOwnershipLevel() string {
	if o == nil || o.DeviceOwnershipLevel == nil {
		var ret string
		return ret
	}
	return *o.DeviceOwnershipLevel
}

// GetDeviceOwnershipLevelOk returns a tuple with the DeviceOwnershipLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetDeviceOwnershipLevelOk() (*string, bool) {
	if o == nil || o.DeviceOwnershipLevel == nil {
		return nil, false
	}
	return o.DeviceOwnershipLevel, true
}

// HasDeviceOwnershipLevel returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasDeviceOwnershipLevel() bool {
	if o != nil && o.DeviceOwnershipLevel != nil {
		return true
	}

	return false
}

// SetDeviceOwnershipLevel gets a reference to the given string and assigns it to the DeviceOwnershipLevel field.
func (o *MobileDeviceDetailsV2) SetDeviceOwnershipLevel(v string) {
	o.DeviceOwnershipLevel = &v
}

// GetEnrollmentMethod returns the EnrollmentMethod field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetEnrollmentMethod() string {
	if o == nil || o.EnrollmentMethod == nil {
		var ret string
		return ret
	}
	return *o.EnrollmentMethod
}

// GetEnrollmentMethodOk returns a tuple with the EnrollmentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetEnrollmentMethodOk() (*string, bool) {
	if o == nil || o.EnrollmentMethod == nil {
		return nil, false
	}
	return o.EnrollmentMethod, true
}

// HasEnrollmentMethod returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasEnrollmentMethod() bool {
	if o != nil && o.EnrollmentMethod != nil {
		return true
	}

	return false
}

// SetEnrollmentMethod gets a reference to the given string and assigns it to the EnrollmentMethod field.
func (o *MobileDeviceDetailsV2) SetEnrollmentMethod(v string) {
	o.EnrollmentMethod = &v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetSite() V1Site {
	if o == nil || o.Site == nil {
		var ret V1Site
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetSiteOk() (*V1Site, bool) {
	if o == nil || o.Site == nil {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasSite() bool {
	if o != nil && o.Site != nil {
		return true
	}

	return false
}

// SetSite gets a reference to the given V1Site and assigns it to the Site field.
func (o *MobileDeviceDetailsV2) SetSite(v V1Site) {
	o.Site = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetExtensionAttributes() []ExtensionAttributeV2 {
	if o == nil || o.ExtensionAttributes == nil {
		var ret []ExtensionAttributeV2
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetExtensionAttributesOk() ([]ExtensionAttributeV2, bool) {
	if o == nil || o.ExtensionAttributes == nil {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasExtensionAttributes() bool {
	if o != nil && o.ExtensionAttributes != nil {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given []ExtensionAttributeV2 and assigns it to the ExtensionAttributes field.
func (o *MobileDeviceDetailsV2) SetExtensionAttributes(v []ExtensionAttributeV2) {
	o.ExtensionAttributes = v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetLocation() LocationV2 {
	if o == nil || o.Location == nil {
		var ret LocationV2
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetLocationOk() (*LocationV2, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given LocationV2 and assigns it to the Location field.
func (o *MobileDeviceDetailsV2) SetLocation(v LocationV2) {
	o.Location = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MobileDeviceDetailsV2) SetType(v string) {
	o.Type = &v
}

// GetIos returns the Ios field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetIos() IosDetailsV2 {
	if o == nil || o.Ios == nil {
		var ret IosDetailsV2
		return ret
	}
	return *o.Ios
}

// GetIosOk returns a tuple with the Ios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetIosOk() (*IosDetailsV2, bool) {
	if o == nil || o.Ios == nil {
		return nil, false
	}
	return o.Ios, true
}

// HasIos returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasIos() bool {
	if o != nil && o.Ios != nil {
		return true
	}

	return false
}

// SetIos gets a reference to the given IosDetailsV2 and assigns it to the Ios field.
func (o *MobileDeviceDetailsV2) SetIos(v IosDetailsV2) {
	o.Ios = &v
}

// GetTvos returns the Tvos field value if set, zero value otherwise.
func (o *MobileDeviceDetailsV2) GetTvos() TvOsDetails {
	if o == nil || o.Tvos == nil {
		var ret TvOsDetails
		return ret
	}
	return *o.Tvos
}

// GetTvosOk returns a tuple with the Tvos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetailsV2) GetTvosOk() (*TvOsDetails, bool) {
	if o == nil || o.Tvos == nil {
		return nil, false
	}
	return o.Tvos, true
}

// HasTvos returns a boolean if a field has been set.
func (o *MobileDeviceDetailsV2) HasTvos() bool {
	if o != nil && o.Tvos != nil {
		return true
	}

	return false
}

// SetTvos gets a reference to the given TvOsDetails and assigns it to the Tvos field.
func (o *MobileDeviceDetailsV2) SetTvos(v TvOsDetails) {
	o.Tvos = &v
}

func (o MobileDeviceDetailsV2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.EnforceName != nil {
		toSerialize["enforceName"] = o.EnforceName
	}
	if o.AssetTag != nil {
		toSerialize["assetTag"] = o.AssetTag
	}
	if o.LastInventoryUpdateTimestamp != nil {
		toSerialize["lastInventoryUpdateTimestamp"] = o.LastInventoryUpdateTimestamp
	}
	if o.OsVersion != nil {
		toSerialize["osVersion"] = o.OsVersion
	}
	if o.OsBuild != nil {
		toSerialize["osBuild"] = o.OsBuild
	}
	if o.SoftwareUpdateDeviceId != nil {
		toSerialize["softwareUpdateDeviceId"] = o.SoftwareUpdateDeviceId
	}
	if o.SerialNumber != nil {
		toSerialize["serialNumber"] = o.SerialNumber
	}
	if o.Udid != nil {
		toSerialize["udid"] = o.Udid
	}
	if o.IpAddress != nil {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if o.WifiMacAddress != nil {
		toSerialize["wifiMacAddress"] = o.WifiMacAddress
	}
	if o.BluetoothMacAddress != nil {
		toSerialize["bluetoothMacAddress"] = o.BluetoothMacAddress
	}
	if o.Managed != nil {
		toSerialize["managed"] = o.Managed
	}
	if o.TimeZone != nil {
		toSerialize["timeZone"] = o.TimeZone
	}
	if o.InitialEntryTimestamp != nil {
		toSerialize["initialEntryTimestamp"] = o.InitialEntryTimestamp
	}
	if o.LastEnrollmentTimestamp != nil {
		toSerialize["lastEnrollmentTimestamp"] = o.LastEnrollmentTimestamp
	}
	if o.MdmProfileExpirationTimestamp != nil {
		toSerialize["mdmProfileExpirationTimestamp"] = o.MdmProfileExpirationTimestamp
	}
	if o.DeviceOwnershipLevel != nil {
		toSerialize["deviceOwnershipLevel"] = o.DeviceOwnershipLevel
	}
	if o.EnrollmentMethod != nil {
		toSerialize["enrollmentMethod"] = o.EnrollmentMethod
	}
	if o.Site != nil {
		toSerialize["site"] = o.Site
	}
	if o.ExtensionAttributes != nil {
		toSerialize["extensionAttributes"] = o.ExtensionAttributes
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Ios != nil {
		toSerialize["ios"] = o.Ios
	}
	if o.Tvos != nil {
		toSerialize["tvos"] = o.Tvos
	}
	return json.Marshal(toSerialize)
}

type NullableMobileDeviceDetailsV2 struct {
	value *MobileDeviceDetailsV2
	isSet bool
}

func (v NullableMobileDeviceDetailsV2) Get() *MobileDeviceDetailsV2 {
	return v.value
}

func (v *NullableMobileDeviceDetailsV2) Set(val *MobileDeviceDetailsV2) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileDeviceDetailsV2) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileDeviceDetailsV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileDeviceDetailsV2(val *MobileDeviceDetailsV2) *NullableMobileDeviceDetailsV2 {
	return &NullableMobileDeviceDetailsV2{value: val, isSet: true}
}

func (v NullableMobileDeviceDetailsV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileDeviceDetailsV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


