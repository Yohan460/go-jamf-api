/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// MobileDeviceDetails struct for MobileDeviceDetails
type MobileDeviceDetails struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	AssetTag *string `json:"assetTag,omitempty"`
	LastInventoryUpdateTimestamp *time.Time `json:"lastInventoryUpdateTimestamp,omitempty"`
	OsVersion *string `json:"osVersion,omitempty"`
	OsBuild *string `json:"osBuild,omitempty"`
	SoftwareUpdateDeviceId *string `json:"softwareUpdateDeviceId,omitempty"`
	SerialNumber *string `json:"serialNumber,omitempty"`
	Udid *string `json:"udid,omitempty"`
	IpAddress *string `json:"ipAddress,omitempty"`
	WifiMacAddress *string `json:"wifiMacAddress,omitempty"`
	BluetoothMacAddress *string `json:"bluetoothMacAddress,omitempty"`
	IsManaged *bool `json:"isManaged,omitempty"`
	InitialEntryTimestamp *time.Time `json:"initialEntryTimestamp,omitempty"`
	LastEnrollmentTimestamp *time.Time `json:"lastEnrollmentTimestamp,omitempty"`
	DeviceOwnershipLevel *string `json:"deviceOwnershipLevel,omitempty"`
	Site *IdAndName `json:"site,omitempty"`
	ExtensionAttributes []ExtensionAttribute `json:"extensionAttributes,omitempty"`
	Location *Location `json:"location,omitempty"`
	// Based on the value of this either ios, appleTv, android objects will be populated.
	Type *string `json:"type,omitempty"`
	Ios *IosDetails `json:"ios,omitempty"`
	AppleTv *AppleTvDetails `json:"appleTv,omitempty"`
	Android *AndroidDetails `json:"android,omitempty"`
}

// NewMobileDeviceDetails instantiates a new MobileDeviceDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileDeviceDetails() *MobileDeviceDetails {
	this := MobileDeviceDetails{}
	return &this
}

// NewMobileDeviceDetailsWithDefaults instantiates a new MobileDeviceDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileDeviceDetailsWithDefaults() *MobileDeviceDetails {
	this := MobileDeviceDetails{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MobileDeviceDetails) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MobileDeviceDetails) SetName(v string) {
	o.Name = &v
}

// GetAssetTag returns the AssetTag field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetAssetTag() string {
	if o == nil || o.AssetTag == nil {
		var ret string
		return ret
	}
	return *o.AssetTag
}

// GetAssetTagOk returns a tuple with the AssetTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetAssetTagOk() (*string, bool) {
	if o == nil || o.AssetTag == nil {
		return nil, false
	}
	return o.AssetTag, true
}

// HasAssetTag returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasAssetTag() bool {
	if o != nil && o.AssetTag != nil {
		return true
	}

	return false
}

// SetAssetTag gets a reference to the given string and assigns it to the AssetTag field.
func (o *MobileDeviceDetails) SetAssetTag(v string) {
	o.AssetTag = &v
}

// GetLastInventoryUpdateTimestamp returns the LastInventoryUpdateTimestamp field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetLastInventoryUpdateTimestamp() time.Time {
	if o == nil || o.LastInventoryUpdateTimestamp == nil {
		var ret time.Time
		return ret
	}
	return *o.LastInventoryUpdateTimestamp
}

// GetLastInventoryUpdateTimestampOk returns a tuple with the LastInventoryUpdateTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetLastInventoryUpdateTimestampOk() (*time.Time, bool) {
	if o == nil || o.LastInventoryUpdateTimestamp == nil {
		return nil, false
	}
	return o.LastInventoryUpdateTimestamp, true
}

// HasLastInventoryUpdateTimestamp returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasLastInventoryUpdateTimestamp() bool {
	if o != nil && o.LastInventoryUpdateTimestamp != nil {
		return true
	}

	return false
}

// SetLastInventoryUpdateTimestamp gets a reference to the given time.Time and assigns it to the LastInventoryUpdateTimestamp field.
func (o *MobileDeviceDetails) SetLastInventoryUpdateTimestamp(v time.Time) {
	o.LastInventoryUpdateTimestamp = &v
}

// GetOsVersion returns the OsVersion field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetOsVersion() string {
	if o == nil || o.OsVersion == nil {
		var ret string
		return ret
	}
	return *o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetOsVersionOk() (*string, bool) {
	if o == nil || o.OsVersion == nil {
		return nil, false
	}
	return o.OsVersion, true
}

// HasOsVersion returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasOsVersion() bool {
	if o != nil && o.OsVersion != nil {
		return true
	}

	return false
}

// SetOsVersion gets a reference to the given string and assigns it to the OsVersion field.
func (o *MobileDeviceDetails) SetOsVersion(v string) {
	o.OsVersion = &v
}

// GetOsBuild returns the OsBuild field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetOsBuild() string {
	if o == nil || o.OsBuild == nil {
		var ret string
		return ret
	}
	return *o.OsBuild
}

// GetOsBuildOk returns a tuple with the OsBuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetOsBuildOk() (*string, bool) {
	if o == nil || o.OsBuild == nil {
		return nil, false
	}
	return o.OsBuild, true
}

// HasOsBuild returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasOsBuild() bool {
	if o != nil && o.OsBuild != nil {
		return true
	}

	return false
}

// SetOsBuild gets a reference to the given string and assigns it to the OsBuild field.
func (o *MobileDeviceDetails) SetOsBuild(v string) {
	o.OsBuild = &v
}

// GetSoftwareUpdateDeviceId returns the SoftwareUpdateDeviceId field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetSoftwareUpdateDeviceId() string {
	if o == nil || o.SoftwareUpdateDeviceId == nil {
		var ret string
		return ret
	}
	return *o.SoftwareUpdateDeviceId
}

// GetSoftwareUpdateDeviceIdOk returns a tuple with the SoftwareUpdateDeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetSoftwareUpdateDeviceIdOk() (*string, bool) {
	if o == nil || o.SoftwareUpdateDeviceId == nil {
		return nil, false
	}
	return o.SoftwareUpdateDeviceId, true
}

// HasSoftwareUpdateDeviceId returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasSoftwareUpdateDeviceId() bool {
	if o != nil && o.SoftwareUpdateDeviceId != nil {
		return true
	}

	return false
}

// SetSoftwareUpdateDeviceId gets a reference to the given string and assigns it to the SoftwareUpdateDeviceId field.
func (o *MobileDeviceDetails) SetSoftwareUpdateDeviceId(v string) {
	o.SoftwareUpdateDeviceId = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *MobileDeviceDetails) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetUdid returns the Udid field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetUdid() string {
	if o == nil || o.Udid == nil {
		var ret string
		return ret
	}
	return *o.Udid
}

// GetUdidOk returns a tuple with the Udid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetUdidOk() (*string, bool) {
	if o == nil || o.Udid == nil {
		return nil, false
	}
	return o.Udid, true
}

// HasUdid returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasUdid() bool {
	if o != nil && o.Udid != nil {
		return true
	}

	return false
}

// SetUdid gets a reference to the given string and assigns it to the Udid field.
func (o *MobileDeviceDetails) SetUdid(v string) {
	o.Udid = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *MobileDeviceDetails) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetWifiMacAddress returns the WifiMacAddress field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetWifiMacAddress() string {
	if o == nil || o.WifiMacAddress == nil {
		var ret string
		return ret
	}
	return *o.WifiMacAddress
}

// GetWifiMacAddressOk returns a tuple with the WifiMacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetWifiMacAddressOk() (*string, bool) {
	if o == nil || o.WifiMacAddress == nil {
		return nil, false
	}
	return o.WifiMacAddress, true
}

// HasWifiMacAddress returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasWifiMacAddress() bool {
	if o != nil && o.WifiMacAddress != nil {
		return true
	}

	return false
}

// SetWifiMacAddress gets a reference to the given string and assigns it to the WifiMacAddress field.
func (o *MobileDeviceDetails) SetWifiMacAddress(v string) {
	o.WifiMacAddress = &v
}

// GetBluetoothMacAddress returns the BluetoothMacAddress field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetBluetoothMacAddress() string {
	if o == nil || o.BluetoothMacAddress == nil {
		var ret string
		return ret
	}
	return *o.BluetoothMacAddress
}

// GetBluetoothMacAddressOk returns a tuple with the BluetoothMacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetBluetoothMacAddressOk() (*string, bool) {
	if o == nil || o.BluetoothMacAddress == nil {
		return nil, false
	}
	return o.BluetoothMacAddress, true
}

// HasBluetoothMacAddress returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasBluetoothMacAddress() bool {
	if o != nil && o.BluetoothMacAddress != nil {
		return true
	}

	return false
}

// SetBluetoothMacAddress gets a reference to the given string and assigns it to the BluetoothMacAddress field.
func (o *MobileDeviceDetails) SetBluetoothMacAddress(v string) {
	o.BluetoothMacAddress = &v
}

// GetIsManaged returns the IsManaged field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetIsManaged() bool {
	if o == nil || o.IsManaged == nil {
		var ret bool
		return ret
	}
	return *o.IsManaged
}

// GetIsManagedOk returns a tuple with the IsManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetIsManagedOk() (*bool, bool) {
	if o == nil || o.IsManaged == nil {
		return nil, false
	}
	return o.IsManaged, true
}

// HasIsManaged returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasIsManaged() bool {
	if o != nil && o.IsManaged != nil {
		return true
	}

	return false
}

// SetIsManaged gets a reference to the given bool and assigns it to the IsManaged field.
func (o *MobileDeviceDetails) SetIsManaged(v bool) {
	o.IsManaged = &v
}

// GetInitialEntryTimestamp returns the InitialEntryTimestamp field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetInitialEntryTimestamp() time.Time {
	if o == nil || o.InitialEntryTimestamp == nil {
		var ret time.Time
		return ret
	}
	return *o.InitialEntryTimestamp
}

// GetInitialEntryTimestampOk returns a tuple with the InitialEntryTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetInitialEntryTimestampOk() (*time.Time, bool) {
	if o == nil || o.InitialEntryTimestamp == nil {
		return nil, false
	}
	return o.InitialEntryTimestamp, true
}

// HasInitialEntryTimestamp returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasInitialEntryTimestamp() bool {
	if o != nil && o.InitialEntryTimestamp != nil {
		return true
	}

	return false
}

// SetInitialEntryTimestamp gets a reference to the given time.Time and assigns it to the InitialEntryTimestamp field.
func (o *MobileDeviceDetails) SetInitialEntryTimestamp(v time.Time) {
	o.InitialEntryTimestamp = &v
}

// GetLastEnrollmentTimestamp returns the LastEnrollmentTimestamp field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetLastEnrollmentTimestamp() time.Time {
	if o == nil || o.LastEnrollmentTimestamp == nil {
		var ret time.Time
		return ret
	}
	return *o.LastEnrollmentTimestamp
}

// GetLastEnrollmentTimestampOk returns a tuple with the LastEnrollmentTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetLastEnrollmentTimestampOk() (*time.Time, bool) {
	if o == nil || o.LastEnrollmentTimestamp == nil {
		return nil, false
	}
	return o.LastEnrollmentTimestamp, true
}

// HasLastEnrollmentTimestamp returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasLastEnrollmentTimestamp() bool {
	if o != nil && o.LastEnrollmentTimestamp != nil {
		return true
	}

	return false
}

// SetLastEnrollmentTimestamp gets a reference to the given time.Time and assigns it to the LastEnrollmentTimestamp field.
func (o *MobileDeviceDetails) SetLastEnrollmentTimestamp(v time.Time) {
	o.LastEnrollmentTimestamp = &v
}

// GetDeviceOwnershipLevel returns the DeviceOwnershipLevel field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetDeviceOwnershipLevel() string {
	if o == nil || o.DeviceOwnershipLevel == nil {
		var ret string
		return ret
	}
	return *o.DeviceOwnershipLevel
}

// GetDeviceOwnershipLevelOk returns a tuple with the DeviceOwnershipLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetDeviceOwnershipLevelOk() (*string, bool) {
	if o == nil || o.DeviceOwnershipLevel == nil {
		return nil, false
	}
	return o.DeviceOwnershipLevel, true
}

// HasDeviceOwnershipLevel returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasDeviceOwnershipLevel() bool {
	if o != nil && o.DeviceOwnershipLevel != nil {
		return true
	}

	return false
}

// SetDeviceOwnershipLevel gets a reference to the given string and assigns it to the DeviceOwnershipLevel field.
func (o *MobileDeviceDetails) SetDeviceOwnershipLevel(v string) {
	o.DeviceOwnershipLevel = &v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetSite() IdAndName {
	if o == nil || o.Site == nil {
		var ret IdAndName
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetSiteOk() (*IdAndName, bool) {
	if o == nil || o.Site == nil {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasSite() bool {
	if o != nil && o.Site != nil {
		return true
	}

	return false
}

// SetSite gets a reference to the given IdAndName and assigns it to the Site field.
func (o *MobileDeviceDetails) SetSite(v IdAndName) {
	o.Site = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetExtensionAttributes() []ExtensionAttribute {
	if o == nil || o.ExtensionAttributes == nil {
		var ret []ExtensionAttribute
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetExtensionAttributesOk() ([]ExtensionAttribute, bool) {
	if o == nil || o.ExtensionAttributes == nil {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasExtensionAttributes() bool {
	if o != nil && o.ExtensionAttributes != nil {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given []ExtensionAttribute and assigns it to the ExtensionAttributes field.
func (o *MobileDeviceDetails) SetExtensionAttributes(v []ExtensionAttribute) {
	o.ExtensionAttributes = v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetLocation() Location {
	if o == nil || o.Location == nil {
		var ret Location
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetLocationOk() (*Location, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given Location and assigns it to the Location field.
func (o *MobileDeviceDetails) SetLocation(v Location) {
	o.Location = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MobileDeviceDetails) SetType(v string) {
	o.Type = &v
}

// GetIos returns the Ios field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetIos() IosDetails {
	if o == nil || o.Ios == nil {
		var ret IosDetails
		return ret
	}
	return *o.Ios
}

// GetIosOk returns a tuple with the Ios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetIosOk() (*IosDetails, bool) {
	if o == nil || o.Ios == nil {
		return nil, false
	}
	return o.Ios, true
}

// HasIos returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasIos() bool {
	if o != nil && o.Ios != nil {
		return true
	}

	return false
}

// SetIos gets a reference to the given IosDetails and assigns it to the Ios field.
func (o *MobileDeviceDetails) SetIos(v IosDetails) {
	o.Ios = &v
}

// GetAppleTv returns the AppleTv field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetAppleTv() AppleTvDetails {
	if o == nil || o.AppleTv == nil {
		var ret AppleTvDetails
		return ret
	}
	return *o.AppleTv
}

// GetAppleTvOk returns a tuple with the AppleTv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetAppleTvOk() (*AppleTvDetails, bool) {
	if o == nil || o.AppleTv == nil {
		return nil, false
	}
	return o.AppleTv, true
}

// HasAppleTv returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasAppleTv() bool {
	if o != nil && o.AppleTv != nil {
		return true
	}

	return false
}

// SetAppleTv gets a reference to the given AppleTvDetails and assigns it to the AppleTv field.
func (o *MobileDeviceDetails) SetAppleTv(v AppleTvDetails) {
	o.AppleTv = &v
}

// GetAndroid returns the Android field value if set, zero value otherwise.
func (o *MobileDeviceDetails) GetAndroid() AndroidDetails {
	if o == nil || o.Android == nil {
		var ret AndroidDetails
		return ret
	}
	return *o.Android
}

// GetAndroidOk returns a tuple with the Android field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceDetails) GetAndroidOk() (*AndroidDetails, bool) {
	if o == nil || o.Android == nil {
		return nil, false
	}
	return o.Android, true
}

// HasAndroid returns a boolean if a field has been set.
func (o *MobileDeviceDetails) HasAndroid() bool {
	if o != nil && o.Android != nil {
		return true
	}

	return false
}

// SetAndroid gets a reference to the given AndroidDetails and assigns it to the Android field.
func (o *MobileDeviceDetails) SetAndroid(v AndroidDetails) {
	o.Android = &v
}

func (o MobileDeviceDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.AssetTag != nil {
		toSerialize["assetTag"] = o.AssetTag
	}
	if o.LastInventoryUpdateTimestamp != nil {
		toSerialize["lastInventoryUpdateTimestamp"] = o.LastInventoryUpdateTimestamp
	}
	if o.OsVersion != nil {
		toSerialize["osVersion"] = o.OsVersion
	}
	if o.OsBuild != nil {
		toSerialize["osBuild"] = o.OsBuild
	}
	if o.SoftwareUpdateDeviceId != nil {
		toSerialize["softwareUpdateDeviceId"] = o.SoftwareUpdateDeviceId
	}
	if o.SerialNumber != nil {
		toSerialize["serialNumber"] = o.SerialNumber
	}
	if o.Udid != nil {
		toSerialize["udid"] = o.Udid
	}
	if o.IpAddress != nil {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if o.WifiMacAddress != nil {
		toSerialize["wifiMacAddress"] = o.WifiMacAddress
	}
	if o.BluetoothMacAddress != nil {
		toSerialize["bluetoothMacAddress"] = o.BluetoothMacAddress
	}
	if o.IsManaged != nil {
		toSerialize["isManaged"] = o.IsManaged
	}
	if o.InitialEntryTimestamp != nil {
		toSerialize["initialEntryTimestamp"] = o.InitialEntryTimestamp
	}
	if o.LastEnrollmentTimestamp != nil {
		toSerialize["lastEnrollmentTimestamp"] = o.LastEnrollmentTimestamp
	}
	if o.DeviceOwnershipLevel != nil {
		toSerialize["deviceOwnershipLevel"] = o.DeviceOwnershipLevel
	}
	if o.Site != nil {
		toSerialize["site"] = o.Site
	}
	if o.ExtensionAttributes != nil {
		toSerialize["extensionAttributes"] = o.ExtensionAttributes
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Ios != nil {
		toSerialize["ios"] = o.Ios
	}
	if o.AppleTv != nil {
		toSerialize["appleTv"] = o.AppleTv
	}
	if o.Android != nil {
		toSerialize["android"] = o.Android
	}
	return json.Marshal(toSerialize)
}

type NullableMobileDeviceDetails struct {
	value *MobileDeviceDetails
	isSet bool
}

func (v NullableMobileDeviceDetails) Get() *MobileDeviceDetails {
	return v.value
}

func (v *NullableMobileDeviceDetails) Set(val *MobileDeviceDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileDeviceDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileDeviceDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileDeviceDetails(val *MobileDeviceDetails) *NullableMobileDeviceDetails {
	return &NullableMobileDeviceDetails{value: val, isSet: true}
}

func (v NullableMobileDeviceDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileDeviceDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


