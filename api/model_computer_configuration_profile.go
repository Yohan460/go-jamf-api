/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// ComputerConfigurationProfile struct for ComputerConfigurationProfile
type ComputerConfigurationProfile struct {
	Id *string `json:"id,omitempty"`
	Username *string `json:"username,omitempty"`
	LastInstalled *time.Time `json:"lastInstalled,omitempty"`
	Removable *bool `json:"removable,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	ProfileIdentifier *string `json:"profileIdentifier,omitempty"`
}

// NewComputerConfigurationProfile instantiates a new ComputerConfigurationProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComputerConfigurationProfile() *ComputerConfigurationProfile {
	this := ComputerConfigurationProfile{}
	return &this
}

// NewComputerConfigurationProfileWithDefaults instantiates a new ComputerConfigurationProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComputerConfigurationProfileWithDefaults() *ComputerConfigurationProfile {
	this := ComputerConfigurationProfile{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ComputerConfigurationProfile) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerConfigurationProfile) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ComputerConfigurationProfile) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ComputerConfigurationProfile) SetId(v string) {
	o.Id = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ComputerConfigurationProfile) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerConfigurationProfile) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ComputerConfigurationProfile) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ComputerConfigurationProfile) SetUsername(v string) {
	o.Username = &v
}

// GetLastInstalled returns the LastInstalled field value if set, zero value otherwise.
func (o *ComputerConfigurationProfile) GetLastInstalled() time.Time {
	if o == nil || o.LastInstalled == nil {
		var ret time.Time
		return ret
	}
	return *o.LastInstalled
}

// GetLastInstalledOk returns a tuple with the LastInstalled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerConfigurationProfile) GetLastInstalledOk() (*time.Time, bool) {
	if o == nil || o.LastInstalled == nil {
		return nil, false
	}
	return o.LastInstalled, true
}

// HasLastInstalled returns a boolean if a field has been set.
func (o *ComputerConfigurationProfile) HasLastInstalled() bool {
	if o != nil && o.LastInstalled != nil {
		return true
	}

	return false
}

// SetLastInstalled gets a reference to the given time.Time and assigns it to the LastInstalled field.
func (o *ComputerConfigurationProfile) SetLastInstalled(v time.Time) {
	o.LastInstalled = &v
}

// GetRemovable returns the Removable field value if set, zero value otherwise.
func (o *ComputerConfigurationProfile) GetRemovable() bool {
	if o == nil || o.Removable == nil {
		var ret bool
		return ret
	}
	return *o.Removable
}

// GetRemovableOk returns a tuple with the Removable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerConfigurationProfile) GetRemovableOk() (*bool, bool) {
	if o == nil || o.Removable == nil {
		return nil, false
	}
	return o.Removable, true
}

// HasRemovable returns a boolean if a field has been set.
func (o *ComputerConfigurationProfile) HasRemovable() bool {
	if o != nil && o.Removable != nil {
		return true
	}

	return false
}

// SetRemovable gets a reference to the given bool and assigns it to the Removable field.
func (o *ComputerConfigurationProfile) SetRemovable(v bool) {
	o.Removable = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ComputerConfigurationProfile) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerConfigurationProfile) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ComputerConfigurationProfile) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ComputerConfigurationProfile) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetProfileIdentifier returns the ProfileIdentifier field value if set, zero value otherwise.
func (o *ComputerConfigurationProfile) GetProfileIdentifier() string {
	if o == nil || o.ProfileIdentifier == nil {
		var ret string
		return ret
	}
	return *o.ProfileIdentifier
}

// GetProfileIdentifierOk returns a tuple with the ProfileIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerConfigurationProfile) GetProfileIdentifierOk() (*string, bool) {
	if o == nil || o.ProfileIdentifier == nil {
		return nil, false
	}
	return o.ProfileIdentifier, true
}

// HasProfileIdentifier returns a boolean if a field has been set.
func (o *ComputerConfigurationProfile) HasProfileIdentifier() bool {
	if o != nil && o.ProfileIdentifier != nil {
		return true
	}

	return false
}

// SetProfileIdentifier gets a reference to the given string and assigns it to the ProfileIdentifier field.
func (o *ComputerConfigurationProfile) SetProfileIdentifier(v string) {
	o.ProfileIdentifier = &v
}

func (o ComputerConfigurationProfile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.LastInstalled != nil {
		toSerialize["lastInstalled"] = o.LastInstalled
	}
	if o.Removable != nil {
		toSerialize["removable"] = o.Removable
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.ProfileIdentifier != nil {
		toSerialize["profileIdentifier"] = o.ProfileIdentifier
	}
	return json.Marshal(toSerialize)
}

type NullableComputerConfigurationProfile struct {
	value *ComputerConfigurationProfile
	isSet bool
}

func (v NullableComputerConfigurationProfile) Get() *ComputerConfigurationProfile {
	return v.value
}

func (v *NullableComputerConfigurationProfile) Set(val *ComputerConfigurationProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableComputerConfigurationProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableComputerConfigurationProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComputerConfigurationProfile(val *ComputerConfigurationProfile) *NullableComputerConfigurationProfile {
	return &NullableComputerConfigurationProfile{value: val, isSet: true}
}

func (v NullableComputerConfigurationProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComputerConfigurationProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


