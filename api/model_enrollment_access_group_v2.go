/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// EnrollmentAccessGroupV2 struct for EnrollmentAccessGroupV2
type EnrollmentAccessGroupV2 struct {
	// Group ID.
	Id *string `json:"id,omitempty"`
	LdapServerId *string `json:"ldapServerId,omitempty"`
	Name *string `json:"name,omitempty"`
	SiteId *string `json:"siteId,omitempty"`
	EnterpriseEnrollmentEnabled *bool `json:"enterpriseEnrollmentEnabled,omitempty"`
	PersonalEnrollmentEnabled *bool `json:"personalEnrollmentEnabled,omitempty"`
	AccountDrivenUserEnrollmentEnabled *bool `json:"accountDrivenUserEnrollmentEnabled,omitempty"`
	RequireEula *bool `json:"requireEula,omitempty"`
}

// NewEnrollmentAccessGroupV2 instantiates a new EnrollmentAccessGroupV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnrollmentAccessGroupV2() *EnrollmentAccessGroupV2 {
	this := EnrollmentAccessGroupV2{}
	return &this
}

// NewEnrollmentAccessGroupV2WithDefaults instantiates a new EnrollmentAccessGroupV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnrollmentAccessGroupV2WithDefaults() *EnrollmentAccessGroupV2 {
	this := EnrollmentAccessGroupV2{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EnrollmentAccessGroupV2) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentAccessGroupV2) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EnrollmentAccessGroupV2) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EnrollmentAccessGroupV2) SetId(v string) {
	o.Id = &v
}

// GetLdapServerId returns the LdapServerId field value if set, zero value otherwise.
func (o *EnrollmentAccessGroupV2) GetLdapServerId() string {
	if o == nil || o.LdapServerId == nil {
		var ret string
		return ret
	}
	return *o.LdapServerId
}

// GetLdapServerIdOk returns a tuple with the LdapServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentAccessGroupV2) GetLdapServerIdOk() (*string, bool) {
	if o == nil || o.LdapServerId == nil {
		return nil, false
	}
	return o.LdapServerId, true
}

// HasLdapServerId returns a boolean if a field has been set.
func (o *EnrollmentAccessGroupV2) HasLdapServerId() bool {
	if o != nil && o.LdapServerId != nil {
		return true
	}

	return false
}

// SetLdapServerId gets a reference to the given string and assigns it to the LdapServerId field.
func (o *EnrollmentAccessGroupV2) SetLdapServerId(v string) {
	o.LdapServerId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EnrollmentAccessGroupV2) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentAccessGroupV2) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EnrollmentAccessGroupV2) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EnrollmentAccessGroupV2) SetName(v string) {
	o.Name = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *EnrollmentAccessGroupV2) GetSiteId() string {
	if o == nil || o.SiteId == nil {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentAccessGroupV2) GetSiteIdOk() (*string, bool) {
	if o == nil || o.SiteId == nil {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *EnrollmentAccessGroupV2) HasSiteId() bool {
	if o != nil && o.SiteId != nil {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *EnrollmentAccessGroupV2) SetSiteId(v string) {
	o.SiteId = &v
}

// GetEnterpriseEnrollmentEnabled returns the EnterpriseEnrollmentEnabled field value if set, zero value otherwise.
func (o *EnrollmentAccessGroupV2) GetEnterpriseEnrollmentEnabled() bool {
	if o == nil || o.EnterpriseEnrollmentEnabled == nil {
		var ret bool
		return ret
	}
	return *o.EnterpriseEnrollmentEnabled
}

// GetEnterpriseEnrollmentEnabledOk returns a tuple with the EnterpriseEnrollmentEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentAccessGroupV2) GetEnterpriseEnrollmentEnabledOk() (*bool, bool) {
	if o == nil || o.EnterpriseEnrollmentEnabled == nil {
		return nil, false
	}
	return o.EnterpriseEnrollmentEnabled, true
}

// HasEnterpriseEnrollmentEnabled returns a boolean if a field has been set.
func (o *EnrollmentAccessGroupV2) HasEnterpriseEnrollmentEnabled() bool {
	if o != nil && o.EnterpriseEnrollmentEnabled != nil {
		return true
	}

	return false
}

// SetEnterpriseEnrollmentEnabled gets a reference to the given bool and assigns it to the EnterpriseEnrollmentEnabled field.
func (o *EnrollmentAccessGroupV2) SetEnterpriseEnrollmentEnabled(v bool) {
	o.EnterpriseEnrollmentEnabled = &v
}

// GetPersonalEnrollmentEnabled returns the PersonalEnrollmentEnabled field value if set, zero value otherwise.
func (o *EnrollmentAccessGroupV2) GetPersonalEnrollmentEnabled() bool {
	if o == nil || o.PersonalEnrollmentEnabled == nil {
		var ret bool
		return ret
	}
	return *o.PersonalEnrollmentEnabled
}

// GetPersonalEnrollmentEnabledOk returns a tuple with the PersonalEnrollmentEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentAccessGroupV2) GetPersonalEnrollmentEnabledOk() (*bool, bool) {
	if o == nil || o.PersonalEnrollmentEnabled == nil {
		return nil, false
	}
	return o.PersonalEnrollmentEnabled, true
}

// HasPersonalEnrollmentEnabled returns a boolean if a field has been set.
func (o *EnrollmentAccessGroupV2) HasPersonalEnrollmentEnabled() bool {
	if o != nil && o.PersonalEnrollmentEnabled != nil {
		return true
	}

	return false
}

// SetPersonalEnrollmentEnabled gets a reference to the given bool and assigns it to the PersonalEnrollmentEnabled field.
func (o *EnrollmentAccessGroupV2) SetPersonalEnrollmentEnabled(v bool) {
	o.PersonalEnrollmentEnabled = &v
}

// GetAccountDrivenUserEnrollmentEnabled returns the AccountDrivenUserEnrollmentEnabled field value if set, zero value otherwise.
func (o *EnrollmentAccessGroupV2) GetAccountDrivenUserEnrollmentEnabled() bool {
	if o == nil || o.AccountDrivenUserEnrollmentEnabled == nil {
		var ret bool
		return ret
	}
	return *o.AccountDrivenUserEnrollmentEnabled
}

// GetAccountDrivenUserEnrollmentEnabledOk returns a tuple with the AccountDrivenUserEnrollmentEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentAccessGroupV2) GetAccountDrivenUserEnrollmentEnabledOk() (*bool, bool) {
	if o == nil || o.AccountDrivenUserEnrollmentEnabled == nil {
		return nil, false
	}
	return o.AccountDrivenUserEnrollmentEnabled, true
}

// HasAccountDrivenUserEnrollmentEnabled returns a boolean if a field has been set.
func (o *EnrollmentAccessGroupV2) HasAccountDrivenUserEnrollmentEnabled() bool {
	if o != nil && o.AccountDrivenUserEnrollmentEnabled != nil {
		return true
	}

	return false
}

// SetAccountDrivenUserEnrollmentEnabled gets a reference to the given bool and assigns it to the AccountDrivenUserEnrollmentEnabled field.
func (o *EnrollmentAccessGroupV2) SetAccountDrivenUserEnrollmentEnabled(v bool) {
	o.AccountDrivenUserEnrollmentEnabled = &v
}

// GetRequireEula returns the RequireEula field value if set, zero value otherwise.
func (o *EnrollmentAccessGroupV2) GetRequireEula() bool {
	if o == nil || o.RequireEula == nil {
		var ret bool
		return ret
	}
	return *o.RequireEula
}

// GetRequireEulaOk returns a tuple with the RequireEula field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentAccessGroupV2) GetRequireEulaOk() (*bool, bool) {
	if o == nil || o.RequireEula == nil {
		return nil, false
	}
	return o.RequireEula, true
}

// HasRequireEula returns a boolean if a field has been set.
func (o *EnrollmentAccessGroupV2) HasRequireEula() bool {
	if o != nil && o.RequireEula != nil {
		return true
	}

	return false
}

// SetRequireEula gets a reference to the given bool and assigns it to the RequireEula field.
func (o *EnrollmentAccessGroupV2) SetRequireEula(v bool) {
	o.RequireEula = &v
}

func (o EnrollmentAccessGroupV2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LdapServerId != nil {
		toSerialize["ldapServerId"] = o.LdapServerId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.SiteId != nil {
		toSerialize["siteId"] = o.SiteId
	}
	if o.EnterpriseEnrollmentEnabled != nil {
		toSerialize["enterpriseEnrollmentEnabled"] = o.EnterpriseEnrollmentEnabled
	}
	if o.PersonalEnrollmentEnabled != nil {
		toSerialize["personalEnrollmentEnabled"] = o.PersonalEnrollmentEnabled
	}
	if o.AccountDrivenUserEnrollmentEnabled != nil {
		toSerialize["accountDrivenUserEnrollmentEnabled"] = o.AccountDrivenUserEnrollmentEnabled
	}
	if o.RequireEula != nil {
		toSerialize["requireEula"] = o.RequireEula
	}
	return json.Marshal(toSerialize)
}

type NullableEnrollmentAccessGroupV2 struct {
	value *EnrollmentAccessGroupV2
	isSet bool
}

func (v NullableEnrollmentAccessGroupV2) Get() *EnrollmentAccessGroupV2 {
	return v.value
}

func (v *NullableEnrollmentAccessGroupV2) Set(val *EnrollmentAccessGroupV2) {
	v.value = val
	v.isSet = true
}

func (v NullableEnrollmentAccessGroupV2) IsSet() bool {
	return v.isSet
}

func (v *NullableEnrollmentAccessGroupV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnrollmentAccessGroupV2(val *EnrollmentAccessGroupV2) *NullableEnrollmentAccessGroupV2 {
	return &NullableEnrollmentAccessGroupV2{value: val, isSet: true}
}

func (v NullableEnrollmentAccessGroupV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnrollmentAccessGroupV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


