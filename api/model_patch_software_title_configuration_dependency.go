/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PatchSoftwareTitleConfigurationDependency type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchSoftwareTitleConfigurationDependency{}

// PatchSoftwareTitleConfigurationDependency struct for PatchSoftwareTitleConfigurationDependency
type PatchSoftwareTitleConfigurationDependency struct {
	SmartGroupId *string `json:"smartGroupId,omitempty"`
	SmartGroupName *string `json:"smartGroupName,omitempty"`
}

// NewPatchSoftwareTitleConfigurationDependency instantiates a new PatchSoftwareTitleConfigurationDependency object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchSoftwareTitleConfigurationDependency() *PatchSoftwareTitleConfigurationDependency {
	this := PatchSoftwareTitleConfigurationDependency{}
	return &this
}

// NewPatchSoftwareTitleConfigurationDependencyWithDefaults instantiates a new PatchSoftwareTitleConfigurationDependency object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchSoftwareTitleConfigurationDependencyWithDefaults() *PatchSoftwareTitleConfigurationDependency {
	this := PatchSoftwareTitleConfigurationDependency{}
	return &this
}

// GetSmartGroupId returns the SmartGroupId field value if set, zero value otherwise.
func (o *PatchSoftwareTitleConfigurationDependency) GetSmartGroupId() string {
	if o == nil || IsNil(o.SmartGroupId) {
		var ret string
		return ret
	}
	return *o.SmartGroupId
}

// GetSmartGroupIdOk returns a tuple with the SmartGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchSoftwareTitleConfigurationDependency) GetSmartGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.SmartGroupId) {
		return nil, false
	}
	return o.SmartGroupId, true
}

// HasSmartGroupId returns a boolean if a field has been set.
func (o *PatchSoftwareTitleConfigurationDependency) HasSmartGroupId() bool {
	if o != nil && !IsNil(o.SmartGroupId) {
		return true
	}

	return false
}

// SetSmartGroupId gets a reference to the given string and assigns it to the SmartGroupId field.
func (o *PatchSoftwareTitleConfigurationDependency) SetSmartGroupId(v string) {
	o.SmartGroupId = &v
}

// GetSmartGroupName returns the SmartGroupName field value if set, zero value otherwise.
func (o *PatchSoftwareTitleConfigurationDependency) GetSmartGroupName() string {
	if o == nil || IsNil(o.SmartGroupName) {
		var ret string
		return ret
	}
	return *o.SmartGroupName
}

// GetSmartGroupNameOk returns a tuple with the SmartGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchSoftwareTitleConfigurationDependency) GetSmartGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.SmartGroupName) {
		return nil, false
	}
	return o.SmartGroupName, true
}

// HasSmartGroupName returns a boolean if a field has been set.
func (o *PatchSoftwareTitleConfigurationDependency) HasSmartGroupName() bool {
	if o != nil && !IsNil(o.SmartGroupName) {
		return true
	}

	return false
}

// SetSmartGroupName gets a reference to the given string and assigns it to the SmartGroupName field.
func (o *PatchSoftwareTitleConfigurationDependency) SetSmartGroupName(v string) {
	o.SmartGroupName = &v
}

func (o PatchSoftwareTitleConfigurationDependency) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchSoftwareTitleConfigurationDependency) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SmartGroupId) {
		toSerialize["smartGroupId"] = o.SmartGroupId
	}
	if !IsNil(o.SmartGroupName) {
		toSerialize["smartGroupName"] = o.SmartGroupName
	}
	return toSerialize, nil
}

type NullablePatchSoftwareTitleConfigurationDependency struct {
	value *PatchSoftwareTitleConfigurationDependency
	isSet bool
}

func (v NullablePatchSoftwareTitleConfigurationDependency) Get() *PatchSoftwareTitleConfigurationDependency {
	return v.value
}

func (v *NullablePatchSoftwareTitleConfigurationDependency) Set(val *PatchSoftwareTitleConfigurationDependency) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchSoftwareTitleConfigurationDependency) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchSoftwareTitleConfigurationDependency) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchSoftwareTitleConfigurationDependency(val *PatchSoftwareTitleConfigurationDependency) *NullablePatchSoftwareTitleConfigurationDependency {
	return &NullablePatchSoftwareTitleConfigurationDependency{value: val, isSet: true}
}

func (v NullablePatchSoftwareTitleConfigurationDependency) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchSoftwareTitleConfigurationDependency) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


