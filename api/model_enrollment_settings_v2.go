/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the EnrollmentSettingsV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnrollmentSettingsV2{}

// EnrollmentSettingsV2 struct for EnrollmentSettingsV2
type EnrollmentSettingsV2 struct {
	InstallSingleProfile *bool `json:"installSingleProfile,omitempty"`
	SigningMdmProfileEnabled *bool `json:"signingMdmProfileEnabled,omitempty"`
	MdmSigningCertificate NullableCertificateIdentityV2 `json:"mdmSigningCertificate,omitempty"`
	RestrictReenrollment *bool `json:"restrictReenrollment,omitempty"`
	FlushLocationInformation *bool `json:"flushLocationInformation,omitempty"`
	FlushLocationHistoryInformation *bool `json:"flushLocationHistoryInformation,omitempty"`
	FlushPolicyHistory *bool `json:"flushPolicyHistory,omitempty"`
	FlushExtensionAttributes *bool `json:"flushExtensionAttributes,omitempty"`
	FlushMdmCommandsOnReenroll *string `json:"flushMdmCommandsOnReenroll,omitempty"`
	MacOsEnterpriseEnrollmentEnabled *bool `json:"macOsEnterpriseEnrollmentEnabled,omitempty"`
	ManagementUsername string `json:"managementUsername"`
	// managementPassword is no longer in use. Input value for managementPassword will be ignored.
	// Deprecated
	ManagementPassword *string `json:"managementPassword,omitempty"`
	// managementPasswordSet is no longer in use. Input value for managementPasswordSet will be ignored.
	// Deprecated
	ManagementPasswordSet *bool `json:"managementPasswordSet,omitempty"`
	// passwordType is no longer in use. Input value for passwordType will be ignored.
	// Deprecated
	PasswordType *string `json:"passwordType,omitempty"`
	// randomPasswordLength is no longer in use. Input value for randomPasswordLength will be ignored.
	// Deprecated
	RandomPasswordLength *int32 `json:"randomPasswordLength,omitempty"`
	CreateManagementAccount *bool `json:"createManagementAccount,omitempty"`
	HideManagementAccount *bool `json:"hideManagementAccount,omitempty"`
	AllowSshOnlyManagementAccount *bool `json:"allowSshOnlyManagementAccount,omitempty"`
	EnsureSshRunning *bool `json:"ensureSshRunning,omitempty"`
	LaunchSelfService *bool `json:"launchSelfService,omitempty"`
	SignQuickAdd *bool `json:"signQuickAdd,omitempty"`
	DeveloperCertificateIdentity NullableCertificateIdentityV2 `json:"developerCertificateIdentity,omitempty"`
	DeveloperCertificateIdentityDetails *CertificateDetails `json:"developerCertificateIdentityDetails,omitempty"`
	MdmSigningCertificateDetails *CertificateDetails `json:"mdmSigningCertificateDetails,omitempty"`
	IosEnterpriseEnrollmentEnabled *bool `json:"iosEnterpriseEnrollmentEnabled,omitempty"`
	IosPersonalEnrollmentEnabled *bool `json:"iosPersonalEnrollmentEnabled,omitempty"`
	PersonalDeviceEnrollmentType *string `json:"personalDeviceEnrollmentType,omitempty"`
	AccountDrivenUserEnrollmentEnabled *bool `json:"accountDrivenUserEnrollmentEnabled,omitempty"`
}

// NewEnrollmentSettingsV2 instantiates a new EnrollmentSettingsV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnrollmentSettingsV2(managementUsername string) *EnrollmentSettingsV2 {
	this := EnrollmentSettingsV2{}
	var installSingleProfile bool = false
	this.InstallSingleProfile = &installSingleProfile
	var signingMdmProfileEnabled bool = false
	this.SigningMdmProfileEnabled = &signingMdmProfileEnabled
	var restrictReenrollment bool = false
	this.RestrictReenrollment = &restrictReenrollment
	var flushLocationInformation bool = false
	this.FlushLocationInformation = &flushLocationInformation
	var flushLocationHistoryInformation bool = false
	this.FlushLocationHistoryInformation = &flushLocationHistoryInformation
	var flushPolicyHistory bool = false
	this.FlushPolicyHistory = &flushPolicyHistory
	var flushExtensionAttributes bool = false
	this.FlushExtensionAttributes = &flushExtensionAttributes
	var flushMdmCommandsOnReenroll string = "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED"
	this.FlushMdmCommandsOnReenroll = &flushMdmCommandsOnReenroll
	var macOsEnterpriseEnrollmentEnabled bool = false
	this.MacOsEnterpriseEnrollmentEnabled = &macOsEnterpriseEnrollmentEnabled
	this.ManagementUsername = managementUsername
	var managementPassword string = "null"
	this.ManagementPassword = &managementPassword
	var passwordType string = "STATIC"
	this.PasswordType = &passwordType
	var randomPasswordLength int32 = 8
	this.RandomPasswordLength = &randomPasswordLength
	var createManagementAccount bool = true
	this.CreateManagementAccount = &createManagementAccount
	var hideManagementAccount bool = false
	this.HideManagementAccount = &hideManagementAccount
	var allowSshOnlyManagementAccount bool = false
	this.AllowSshOnlyManagementAccount = &allowSshOnlyManagementAccount
	var ensureSshRunning bool = true
	this.EnsureSshRunning = &ensureSshRunning
	var launchSelfService bool = false
	this.LaunchSelfService = &launchSelfService
	var signQuickAdd bool = false
	this.SignQuickAdd = &signQuickAdd
	var iosEnterpriseEnrollmentEnabled bool = true
	this.IosEnterpriseEnrollmentEnabled = &iosEnterpriseEnrollmentEnabled
	var iosPersonalEnrollmentEnabled bool = false
	this.IosPersonalEnrollmentEnabled = &iosPersonalEnrollmentEnabled
	var personalDeviceEnrollmentType string = "PERSONALDEVICEPROFILES"
	this.PersonalDeviceEnrollmentType = &personalDeviceEnrollmentType
	var accountDrivenUserEnrollmentEnabled bool = false
	this.AccountDrivenUserEnrollmentEnabled = &accountDrivenUserEnrollmentEnabled
	return &this
}

// NewEnrollmentSettingsV2WithDefaults instantiates a new EnrollmentSettingsV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnrollmentSettingsV2WithDefaults() *EnrollmentSettingsV2 {
	this := EnrollmentSettingsV2{}
	var installSingleProfile bool = false
	this.InstallSingleProfile = &installSingleProfile
	var signingMdmProfileEnabled bool = false
	this.SigningMdmProfileEnabled = &signingMdmProfileEnabled
	var restrictReenrollment bool = false
	this.RestrictReenrollment = &restrictReenrollment
	var flushLocationInformation bool = false
	this.FlushLocationInformation = &flushLocationInformation
	var flushLocationHistoryInformation bool = false
	this.FlushLocationHistoryInformation = &flushLocationHistoryInformation
	var flushPolicyHistory bool = false
	this.FlushPolicyHistory = &flushPolicyHistory
	var flushExtensionAttributes bool = false
	this.FlushExtensionAttributes = &flushExtensionAttributes
	var flushMdmCommandsOnReenroll string = "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED"
	this.FlushMdmCommandsOnReenroll = &flushMdmCommandsOnReenroll
	var macOsEnterpriseEnrollmentEnabled bool = false
	this.MacOsEnterpriseEnrollmentEnabled = &macOsEnterpriseEnrollmentEnabled
	var managementUsername string = ""
	this.ManagementUsername = managementUsername
	var managementPassword string = "null"
	this.ManagementPassword = &managementPassword
	var passwordType string = "STATIC"
	this.PasswordType = &passwordType
	var randomPasswordLength int32 = 8
	this.RandomPasswordLength = &randomPasswordLength
	var createManagementAccount bool = true
	this.CreateManagementAccount = &createManagementAccount
	var hideManagementAccount bool = false
	this.HideManagementAccount = &hideManagementAccount
	var allowSshOnlyManagementAccount bool = false
	this.AllowSshOnlyManagementAccount = &allowSshOnlyManagementAccount
	var ensureSshRunning bool = true
	this.EnsureSshRunning = &ensureSshRunning
	var launchSelfService bool = false
	this.LaunchSelfService = &launchSelfService
	var signQuickAdd bool = false
	this.SignQuickAdd = &signQuickAdd
	var iosEnterpriseEnrollmentEnabled bool = true
	this.IosEnterpriseEnrollmentEnabled = &iosEnterpriseEnrollmentEnabled
	var iosPersonalEnrollmentEnabled bool = false
	this.IosPersonalEnrollmentEnabled = &iosPersonalEnrollmentEnabled
	var personalDeviceEnrollmentType string = "PERSONALDEVICEPROFILES"
	this.PersonalDeviceEnrollmentType = &personalDeviceEnrollmentType
	var accountDrivenUserEnrollmentEnabled bool = false
	this.AccountDrivenUserEnrollmentEnabled = &accountDrivenUserEnrollmentEnabled
	return &this
}

// GetInstallSingleProfile returns the InstallSingleProfile field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetInstallSingleProfile() bool {
	if o == nil || IsNil(o.InstallSingleProfile) {
		var ret bool
		return ret
	}
	return *o.InstallSingleProfile
}

// GetInstallSingleProfileOk returns a tuple with the InstallSingleProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetInstallSingleProfileOk() (*bool, bool) {
	if o == nil || IsNil(o.InstallSingleProfile) {
		return nil, false
	}
	return o.InstallSingleProfile, true
}

// HasInstallSingleProfile returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasInstallSingleProfile() bool {
	if o != nil && !IsNil(o.InstallSingleProfile) {
		return true
	}

	return false
}

// SetInstallSingleProfile gets a reference to the given bool and assigns it to the InstallSingleProfile field.
func (o *EnrollmentSettingsV2) SetInstallSingleProfile(v bool) {
	o.InstallSingleProfile = &v
}

// GetSigningMdmProfileEnabled returns the SigningMdmProfileEnabled field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetSigningMdmProfileEnabled() bool {
	if o == nil || IsNil(o.SigningMdmProfileEnabled) {
		var ret bool
		return ret
	}
	return *o.SigningMdmProfileEnabled
}

// GetSigningMdmProfileEnabledOk returns a tuple with the SigningMdmProfileEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetSigningMdmProfileEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SigningMdmProfileEnabled) {
		return nil, false
	}
	return o.SigningMdmProfileEnabled, true
}

// HasSigningMdmProfileEnabled returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasSigningMdmProfileEnabled() bool {
	if o != nil && !IsNil(o.SigningMdmProfileEnabled) {
		return true
	}

	return false
}

// SetSigningMdmProfileEnabled gets a reference to the given bool and assigns it to the SigningMdmProfileEnabled field.
func (o *EnrollmentSettingsV2) SetSigningMdmProfileEnabled(v bool) {
	o.SigningMdmProfileEnabled = &v
}

// GetMdmSigningCertificate returns the MdmSigningCertificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnrollmentSettingsV2) GetMdmSigningCertificate() CertificateIdentityV2 {
	if o == nil || IsNil(o.MdmSigningCertificate.Get()) {
		var ret CertificateIdentityV2
		return ret
	}
	return *o.MdmSigningCertificate.Get()
}

// GetMdmSigningCertificateOk returns a tuple with the MdmSigningCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnrollmentSettingsV2) GetMdmSigningCertificateOk() (*CertificateIdentityV2, bool) {
	if o == nil {
		return nil, false
	}
	return o.MdmSigningCertificate.Get(), o.MdmSigningCertificate.IsSet()
}

// HasMdmSigningCertificate returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasMdmSigningCertificate() bool {
	if o != nil && o.MdmSigningCertificate.IsSet() {
		return true
	}

	return false
}

// SetMdmSigningCertificate gets a reference to the given NullableCertificateIdentityV2 and assigns it to the MdmSigningCertificate field.
func (o *EnrollmentSettingsV2) SetMdmSigningCertificate(v CertificateIdentityV2) {
	o.MdmSigningCertificate.Set(&v)
}
// SetMdmSigningCertificateNil sets the value for MdmSigningCertificate to be an explicit nil
func (o *EnrollmentSettingsV2) SetMdmSigningCertificateNil() {
	o.MdmSigningCertificate.Set(nil)
}

// UnsetMdmSigningCertificate ensures that no value is present for MdmSigningCertificate, not even an explicit nil
func (o *EnrollmentSettingsV2) UnsetMdmSigningCertificate() {
	o.MdmSigningCertificate.Unset()
}

// GetRestrictReenrollment returns the RestrictReenrollment field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetRestrictReenrollment() bool {
	if o == nil || IsNil(o.RestrictReenrollment) {
		var ret bool
		return ret
	}
	return *o.RestrictReenrollment
}

// GetRestrictReenrollmentOk returns a tuple with the RestrictReenrollment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetRestrictReenrollmentOk() (*bool, bool) {
	if o == nil || IsNil(o.RestrictReenrollment) {
		return nil, false
	}
	return o.RestrictReenrollment, true
}

// HasRestrictReenrollment returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasRestrictReenrollment() bool {
	if o != nil && !IsNil(o.RestrictReenrollment) {
		return true
	}

	return false
}

// SetRestrictReenrollment gets a reference to the given bool and assigns it to the RestrictReenrollment field.
func (o *EnrollmentSettingsV2) SetRestrictReenrollment(v bool) {
	o.RestrictReenrollment = &v
}

// GetFlushLocationInformation returns the FlushLocationInformation field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetFlushLocationInformation() bool {
	if o == nil || IsNil(o.FlushLocationInformation) {
		var ret bool
		return ret
	}
	return *o.FlushLocationInformation
}

// GetFlushLocationInformationOk returns a tuple with the FlushLocationInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetFlushLocationInformationOk() (*bool, bool) {
	if o == nil || IsNil(o.FlushLocationInformation) {
		return nil, false
	}
	return o.FlushLocationInformation, true
}

// HasFlushLocationInformation returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasFlushLocationInformation() bool {
	if o != nil && !IsNil(o.FlushLocationInformation) {
		return true
	}

	return false
}

// SetFlushLocationInformation gets a reference to the given bool and assigns it to the FlushLocationInformation field.
func (o *EnrollmentSettingsV2) SetFlushLocationInformation(v bool) {
	o.FlushLocationInformation = &v
}

// GetFlushLocationHistoryInformation returns the FlushLocationHistoryInformation field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetFlushLocationHistoryInformation() bool {
	if o == nil || IsNil(o.FlushLocationHistoryInformation) {
		var ret bool
		return ret
	}
	return *o.FlushLocationHistoryInformation
}

// GetFlushLocationHistoryInformationOk returns a tuple with the FlushLocationHistoryInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetFlushLocationHistoryInformationOk() (*bool, bool) {
	if o == nil || IsNil(o.FlushLocationHistoryInformation) {
		return nil, false
	}
	return o.FlushLocationHistoryInformation, true
}

// HasFlushLocationHistoryInformation returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasFlushLocationHistoryInformation() bool {
	if o != nil && !IsNil(o.FlushLocationHistoryInformation) {
		return true
	}

	return false
}

// SetFlushLocationHistoryInformation gets a reference to the given bool and assigns it to the FlushLocationHistoryInformation field.
func (o *EnrollmentSettingsV2) SetFlushLocationHistoryInformation(v bool) {
	o.FlushLocationHistoryInformation = &v
}

// GetFlushPolicyHistory returns the FlushPolicyHistory field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetFlushPolicyHistory() bool {
	if o == nil || IsNil(o.FlushPolicyHistory) {
		var ret bool
		return ret
	}
	return *o.FlushPolicyHistory
}

// GetFlushPolicyHistoryOk returns a tuple with the FlushPolicyHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetFlushPolicyHistoryOk() (*bool, bool) {
	if o == nil || IsNil(o.FlushPolicyHistory) {
		return nil, false
	}
	return o.FlushPolicyHistory, true
}

// HasFlushPolicyHistory returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasFlushPolicyHistory() bool {
	if o != nil && !IsNil(o.FlushPolicyHistory) {
		return true
	}

	return false
}

// SetFlushPolicyHistory gets a reference to the given bool and assigns it to the FlushPolicyHistory field.
func (o *EnrollmentSettingsV2) SetFlushPolicyHistory(v bool) {
	o.FlushPolicyHistory = &v
}

// GetFlushExtensionAttributes returns the FlushExtensionAttributes field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetFlushExtensionAttributes() bool {
	if o == nil || IsNil(o.FlushExtensionAttributes) {
		var ret bool
		return ret
	}
	return *o.FlushExtensionAttributes
}

// GetFlushExtensionAttributesOk returns a tuple with the FlushExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetFlushExtensionAttributesOk() (*bool, bool) {
	if o == nil || IsNil(o.FlushExtensionAttributes) {
		return nil, false
	}
	return o.FlushExtensionAttributes, true
}

// HasFlushExtensionAttributes returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasFlushExtensionAttributes() bool {
	if o != nil && !IsNil(o.FlushExtensionAttributes) {
		return true
	}

	return false
}

// SetFlushExtensionAttributes gets a reference to the given bool and assigns it to the FlushExtensionAttributes field.
func (o *EnrollmentSettingsV2) SetFlushExtensionAttributes(v bool) {
	o.FlushExtensionAttributes = &v
}

// GetFlushMdmCommandsOnReenroll returns the FlushMdmCommandsOnReenroll field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetFlushMdmCommandsOnReenroll() string {
	if o == nil || IsNil(o.FlushMdmCommandsOnReenroll) {
		var ret string
		return ret
	}
	return *o.FlushMdmCommandsOnReenroll
}

// GetFlushMdmCommandsOnReenrollOk returns a tuple with the FlushMdmCommandsOnReenroll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetFlushMdmCommandsOnReenrollOk() (*string, bool) {
	if o == nil || IsNil(o.FlushMdmCommandsOnReenroll) {
		return nil, false
	}
	return o.FlushMdmCommandsOnReenroll, true
}

// HasFlushMdmCommandsOnReenroll returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasFlushMdmCommandsOnReenroll() bool {
	if o != nil && !IsNil(o.FlushMdmCommandsOnReenroll) {
		return true
	}

	return false
}

// SetFlushMdmCommandsOnReenroll gets a reference to the given string and assigns it to the FlushMdmCommandsOnReenroll field.
func (o *EnrollmentSettingsV2) SetFlushMdmCommandsOnReenroll(v string) {
	o.FlushMdmCommandsOnReenroll = &v
}

// GetMacOsEnterpriseEnrollmentEnabled returns the MacOsEnterpriseEnrollmentEnabled field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetMacOsEnterpriseEnrollmentEnabled() bool {
	if o == nil || IsNil(o.MacOsEnterpriseEnrollmentEnabled) {
		var ret bool
		return ret
	}
	return *o.MacOsEnterpriseEnrollmentEnabled
}

// GetMacOsEnterpriseEnrollmentEnabledOk returns a tuple with the MacOsEnterpriseEnrollmentEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetMacOsEnterpriseEnrollmentEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.MacOsEnterpriseEnrollmentEnabled) {
		return nil, false
	}
	return o.MacOsEnterpriseEnrollmentEnabled, true
}

// HasMacOsEnterpriseEnrollmentEnabled returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasMacOsEnterpriseEnrollmentEnabled() bool {
	if o != nil && !IsNil(o.MacOsEnterpriseEnrollmentEnabled) {
		return true
	}

	return false
}

// SetMacOsEnterpriseEnrollmentEnabled gets a reference to the given bool and assigns it to the MacOsEnterpriseEnrollmentEnabled field.
func (o *EnrollmentSettingsV2) SetMacOsEnterpriseEnrollmentEnabled(v bool) {
	o.MacOsEnterpriseEnrollmentEnabled = &v
}

// GetManagementUsername returns the ManagementUsername field value
func (o *EnrollmentSettingsV2) GetManagementUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ManagementUsername
}

// GetManagementUsernameOk returns a tuple with the ManagementUsername field value
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetManagementUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ManagementUsername, true
}

// SetManagementUsername sets field value
func (o *EnrollmentSettingsV2) SetManagementUsername(v string) {
	o.ManagementUsername = v
}

// GetManagementPassword returns the ManagementPassword field value if set, zero value otherwise.
// Deprecated
func (o *EnrollmentSettingsV2) GetManagementPassword() string {
	if o == nil || IsNil(o.ManagementPassword) {
		var ret string
		return ret
	}
	return *o.ManagementPassword
}

// GetManagementPasswordOk returns a tuple with the ManagementPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *EnrollmentSettingsV2) GetManagementPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.ManagementPassword) {
		return nil, false
	}
	return o.ManagementPassword, true
}

// HasManagementPassword returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasManagementPassword() bool {
	if o != nil && !IsNil(o.ManagementPassword) {
		return true
	}

	return false
}

// SetManagementPassword gets a reference to the given string and assigns it to the ManagementPassword field.
// Deprecated
func (o *EnrollmentSettingsV2) SetManagementPassword(v string) {
	o.ManagementPassword = &v
}

// GetManagementPasswordSet returns the ManagementPasswordSet field value if set, zero value otherwise.
// Deprecated
func (o *EnrollmentSettingsV2) GetManagementPasswordSet() bool {
	if o == nil || IsNil(o.ManagementPasswordSet) {
		var ret bool
		return ret
	}
	return *o.ManagementPasswordSet
}

// GetManagementPasswordSetOk returns a tuple with the ManagementPasswordSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *EnrollmentSettingsV2) GetManagementPasswordSetOk() (*bool, bool) {
	if o == nil || IsNil(o.ManagementPasswordSet) {
		return nil, false
	}
	return o.ManagementPasswordSet, true
}

// HasManagementPasswordSet returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasManagementPasswordSet() bool {
	if o != nil && !IsNil(o.ManagementPasswordSet) {
		return true
	}

	return false
}

// SetManagementPasswordSet gets a reference to the given bool and assigns it to the ManagementPasswordSet field.
// Deprecated
func (o *EnrollmentSettingsV2) SetManagementPasswordSet(v bool) {
	o.ManagementPasswordSet = &v
}

// GetPasswordType returns the PasswordType field value if set, zero value otherwise.
// Deprecated
func (o *EnrollmentSettingsV2) GetPasswordType() string {
	if o == nil || IsNil(o.PasswordType) {
		var ret string
		return ret
	}
	return *o.PasswordType
}

// GetPasswordTypeOk returns a tuple with the PasswordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *EnrollmentSettingsV2) GetPasswordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PasswordType) {
		return nil, false
	}
	return o.PasswordType, true
}

// HasPasswordType returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasPasswordType() bool {
	if o != nil && !IsNil(o.PasswordType) {
		return true
	}

	return false
}

// SetPasswordType gets a reference to the given string and assigns it to the PasswordType field.
// Deprecated
func (o *EnrollmentSettingsV2) SetPasswordType(v string) {
	o.PasswordType = &v
}

// GetRandomPasswordLength returns the RandomPasswordLength field value if set, zero value otherwise.
// Deprecated
func (o *EnrollmentSettingsV2) GetRandomPasswordLength() int32 {
	if o == nil || IsNil(o.RandomPasswordLength) {
		var ret int32
		return ret
	}
	return *o.RandomPasswordLength
}

// GetRandomPasswordLengthOk returns a tuple with the RandomPasswordLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *EnrollmentSettingsV2) GetRandomPasswordLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.RandomPasswordLength) {
		return nil, false
	}
	return o.RandomPasswordLength, true
}

// HasRandomPasswordLength returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasRandomPasswordLength() bool {
	if o != nil && !IsNil(o.RandomPasswordLength) {
		return true
	}

	return false
}

// SetRandomPasswordLength gets a reference to the given int32 and assigns it to the RandomPasswordLength field.
// Deprecated
func (o *EnrollmentSettingsV2) SetRandomPasswordLength(v int32) {
	o.RandomPasswordLength = &v
}

// GetCreateManagementAccount returns the CreateManagementAccount field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetCreateManagementAccount() bool {
	if o == nil || IsNil(o.CreateManagementAccount) {
		var ret bool
		return ret
	}
	return *o.CreateManagementAccount
}

// GetCreateManagementAccountOk returns a tuple with the CreateManagementAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetCreateManagementAccountOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateManagementAccount) {
		return nil, false
	}
	return o.CreateManagementAccount, true
}

// HasCreateManagementAccount returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasCreateManagementAccount() bool {
	if o != nil && !IsNil(o.CreateManagementAccount) {
		return true
	}

	return false
}

// SetCreateManagementAccount gets a reference to the given bool and assigns it to the CreateManagementAccount field.
func (o *EnrollmentSettingsV2) SetCreateManagementAccount(v bool) {
	o.CreateManagementAccount = &v
}

// GetHideManagementAccount returns the HideManagementAccount field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetHideManagementAccount() bool {
	if o == nil || IsNil(o.HideManagementAccount) {
		var ret bool
		return ret
	}
	return *o.HideManagementAccount
}

// GetHideManagementAccountOk returns a tuple with the HideManagementAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetHideManagementAccountOk() (*bool, bool) {
	if o == nil || IsNil(o.HideManagementAccount) {
		return nil, false
	}
	return o.HideManagementAccount, true
}

// HasHideManagementAccount returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasHideManagementAccount() bool {
	if o != nil && !IsNil(o.HideManagementAccount) {
		return true
	}

	return false
}

// SetHideManagementAccount gets a reference to the given bool and assigns it to the HideManagementAccount field.
func (o *EnrollmentSettingsV2) SetHideManagementAccount(v bool) {
	o.HideManagementAccount = &v
}

// GetAllowSshOnlyManagementAccount returns the AllowSshOnlyManagementAccount field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetAllowSshOnlyManagementAccount() bool {
	if o == nil || IsNil(o.AllowSshOnlyManagementAccount) {
		var ret bool
		return ret
	}
	return *o.AllowSshOnlyManagementAccount
}

// GetAllowSshOnlyManagementAccountOk returns a tuple with the AllowSshOnlyManagementAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetAllowSshOnlyManagementAccountOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSshOnlyManagementAccount) {
		return nil, false
	}
	return o.AllowSshOnlyManagementAccount, true
}

// HasAllowSshOnlyManagementAccount returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasAllowSshOnlyManagementAccount() bool {
	if o != nil && !IsNil(o.AllowSshOnlyManagementAccount) {
		return true
	}

	return false
}

// SetAllowSshOnlyManagementAccount gets a reference to the given bool and assigns it to the AllowSshOnlyManagementAccount field.
func (o *EnrollmentSettingsV2) SetAllowSshOnlyManagementAccount(v bool) {
	o.AllowSshOnlyManagementAccount = &v
}

// GetEnsureSshRunning returns the EnsureSshRunning field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetEnsureSshRunning() bool {
	if o == nil || IsNil(o.EnsureSshRunning) {
		var ret bool
		return ret
	}
	return *o.EnsureSshRunning
}

// GetEnsureSshRunningOk returns a tuple with the EnsureSshRunning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetEnsureSshRunningOk() (*bool, bool) {
	if o == nil || IsNil(o.EnsureSshRunning) {
		return nil, false
	}
	return o.EnsureSshRunning, true
}

// HasEnsureSshRunning returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasEnsureSshRunning() bool {
	if o != nil && !IsNil(o.EnsureSshRunning) {
		return true
	}

	return false
}

// SetEnsureSshRunning gets a reference to the given bool and assigns it to the EnsureSshRunning field.
func (o *EnrollmentSettingsV2) SetEnsureSshRunning(v bool) {
	o.EnsureSshRunning = &v
}

// GetLaunchSelfService returns the LaunchSelfService field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetLaunchSelfService() bool {
	if o == nil || IsNil(o.LaunchSelfService) {
		var ret bool
		return ret
	}
	return *o.LaunchSelfService
}

// GetLaunchSelfServiceOk returns a tuple with the LaunchSelfService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetLaunchSelfServiceOk() (*bool, bool) {
	if o == nil || IsNil(o.LaunchSelfService) {
		return nil, false
	}
	return o.LaunchSelfService, true
}

// HasLaunchSelfService returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasLaunchSelfService() bool {
	if o != nil && !IsNil(o.LaunchSelfService) {
		return true
	}

	return false
}

// SetLaunchSelfService gets a reference to the given bool and assigns it to the LaunchSelfService field.
func (o *EnrollmentSettingsV2) SetLaunchSelfService(v bool) {
	o.LaunchSelfService = &v
}

// GetSignQuickAdd returns the SignQuickAdd field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetSignQuickAdd() bool {
	if o == nil || IsNil(o.SignQuickAdd) {
		var ret bool
		return ret
	}
	return *o.SignQuickAdd
}

// GetSignQuickAddOk returns a tuple with the SignQuickAdd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetSignQuickAddOk() (*bool, bool) {
	if o == nil || IsNil(o.SignQuickAdd) {
		return nil, false
	}
	return o.SignQuickAdd, true
}

// HasSignQuickAdd returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasSignQuickAdd() bool {
	if o != nil && !IsNil(o.SignQuickAdd) {
		return true
	}

	return false
}

// SetSignQuickAdd gets a reference to the given bool and assigns it to the SignQuickAdd field.
func (o *EnrollmentSettingsV2) SetSignQuickAdd(v bool) {
	o.SignQuickAdd = &v
}

// GetDeveloperCertificateIdentity returns the DeveloperCertificateIdentity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnrollmentSettingsV2) GetDeveloperCertificateIdentity() CertificateIdentityV2 {
	if o == nil || IsNil(o.DeveloperCertificateIdentity.Get()) {
		var ret CertificateIdentityV2
		return ret
	}
	return *o.DeveloperCertificateIdentity.Get()
}

// GetDeveloperCertificateIdentityOk returns a tuple with the DeveloperCertificateIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnrollmentSettingsV2) GetDeveloperCertificateIdentityOk() (*CertificateIdentityV2, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeveloperCertificateIdentity.Get(), o.DeveloperCertificateIdentity.IsSet()
}

// HasDeveloperCertificateIdentity returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasDeveloperCertificateIdentity() bool {
	if o != nil && o.DeveloperCertificateIdentity.IsSet() {
		return true
	}

	return false
}

// SetDeveloperCertificateIdentity gets a reference to the given NullableCertificateIdentityV2 and assigns it to the DeveloperCertificateIdentity field.
func (o *EnrollmentSettingsV2) SetDeveloperCertificateIdentity(v CertificateIdentityV2) {
	o.DeveloperCertificateIdentity.Set(&v)
}
// SetDeveloperCertificateIdentityNil sets the value for DeveloperCertificateIdentity to be an explicit nil
func (o *EnrollmentSettingsV2) SetDeveloperCertificateIdentityNil() {
	o.DeveloperCertificateIdentity.Set(nil)
}

// UnsetDeveloperCertificateIdentity ensures that no value is present for DeveloperCertificateIdentity, not even an explicit nil
func (o *EnrollmentSettingsV2) UnsetDeveloperCertificateIdentity() {
	o.DeveloperCertificateIdentity.Unset()
}

// GetDeveloperCertificateIdentityDetails returns the DeveloperCertificateIdentityDetails field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetDeveloperCertificateIdentityDetails() CertificateDetails {
	if o == nil || IsNil(o.DeveloperCertificateIdentityDetails) {
		var ret CertificateDetails
		return ret
	}
	return *o.DeveloperCertificateIdentityDetails
}

// GetDeveloperCertificateIdentityDetailsOk returns a tuple with the DeveloperCertificateIdentityDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetDeveloperCertificateIdentityDetailsOk() (*CertificateDetails, bool) {
	if o == nil || IsNil(o.DeveloperCertificateIdentityDetails) {
		return nil, false
	}
	return o.DeveloperCertificateIdentityDetails, true
}

// HasDeveloperCertificateIdentityDetails returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasDeveloperCertificateIdentityDetails() bool {
	if o != nil && !IsNil(o.DeveloperCertificateIdentityDetails) {
		return true
	}

	return false
}

// SetDeveloperCertificateIdentityDetails gets a reference to the given CertificateDetails and assigns it to the DeveloperCertificateIdentityDetails field.
func (o *EnrollmentSettingsV2) SetDeveloperCertificateIdentityDetails(v CertificateDetails) {
	o.DeveloperCertificateIdentityDetails = &v
}

// GetMdmSigningCertificateDetails returns the MdmSigningCertificateDetails field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetMdmSigningCertificateDetails() CertificateDetails {
	if o == nil || IsNil(o.MdmSigningCertificateDetails) {
		var ret CertificateDetails
		return ret
	}
	return *o.MdmSigningCertificateDetails
}

// GetMdmSigningCertificateDetailsOk returns a tuple with the MdmSigningCertificateDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetMdmSigningCertificateDetailsOk() (*CertificateDetails, bool) {
	if o == nil || IsNil(o.MdmSigningCertificateDetails) {
		return nil, false
	}
	return o.MdmSigningCertificateDetails, true
}

// HasMdmSigningCertificateDetails returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasMdmSigningCertificateDetails() bool {
	if o != nil && !IsNil(o.MdmSigningCertificateDetails) {
		return true
	}

	return false
}

// SetMdmSigningCertificateDetails gets a reference to the given CertificateDetails and assigns it to the MdmSigningCertificateDetails field.
func (o *EnrollmentSettingsV2) SetMdmSigningCertificateDetails(v CertificateDetails) {
	o.MdmSigningCertificateDetails = &v
}

// GetIosEnterpriseEnrollmentEnabled returns the IosEnterpriseEnrollmentEnabled field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetIosEnterpriseEnrollmentEnabled() bool {
	if o == nil || IsNil(o.IosEnterpriseEnrollmentEnabled) {
		var ret bool
		return ret
	}
	return *o.IosEnterpriseEnrollmentEnabled
}

// GetIosEnterpriseEnrollmentEnabledOk returns a tuple with the IosEnterpriseEnrollmentEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetIosEnterpriseEnrollmentEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IosEnterpriseEnrollmentEnabled) {
		return nil, false
	}
	return o.IosEnterpriseEnrollmentEnabled, true
}

// HasIosEnterpriseEnrollmentEnabled returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasIosEnterpriseEnrollmentEnabled() bool {
	if o != nil && !IsNil(o.IosEnterpriseEnrollmentEnabled) {
		return true
	}

	return false
}

// SetIosEnterpriseEnrollmentEnabled gets a reference to the given bool and assigns it to the IosEnterpriseEnrollmentEnabled field.
func (o *EnrollmentSettingsV2) SetIosEnterpriseEnrollmentEnabled(v bool) {
	o.IosEnterpriseEnrollmentEnabled = &v
}

// GetIosPersonalEnrollmentEnabled returns the IosPersonalEnrollmentEnabled field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetIosPersonalEnrollmentEnabled() bool {
	if o == nil || IsNil(o.IosPersonalEnrollmentEnabled) {
		var ret bool
		return ret
	}
	return *o.IosPersonalEnrollmentEnabled
}

// GetIosPersonalEnrollmentEnabledOk returns a tuple with the IosPersonalEnrollmentEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetIosPersonalEnrollmentEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IosPersonalEnrollmentEnabled) {
		return nil, false
	}
	return o.IosPersonalEnrollmentEnabled, true
}

// HasIosPersonalEnrollmentEnabled returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasIosPersonalEnrollmentEnabled() bool {
	if o != nil && !IsNil(o.IosPersonalEnrollmentEnabled) {
		return true
	}

	return false
}

// SetIosPersonalEnrollmentEnabled gets a reference to the given bool and assigns it to the IosPersonalEnrollmentEnabled field.
func (o *EnrollmentSettingsV2) SetIosPersonalEnrollmentEnabled(v bool) {
	o.IosPersonalEnrollmentEnabled = &v
}

// GetPersonalDeviceEnrollmentType returns the PersonalDeviceEnrollmentType field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetPersonalDeviceEnrollmentType() string {
	if o == nil || IsNil(o.PersonalDeviceEnrollmentType) {
		var ret string
		return ret
	}
	return *o.PersonalDeviceEnrollmentType
}

// GetPersonalDeviceEnrollmentTypeOk returns a tuple with the PersonalDeviceEnrollmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetPersonalDeviceEnrollmentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PersonalDeviceEnrollmentType) {
		return nil, false
	}
	return o.PersonalDeviceEnrollmentType, true
}

// HasPersonalDeviceEnrollmentType returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasPersonalDeviceEnrollmentType() bool {
	if o != nil && !IsNil(o.PersonalDeviceEnrollmentType) {
		return true
	}

	return false
}

// SetPersonalDeviceEnrollmentType gets a reference to the given string and assigns it to the PersonalDeviceEnrollmentType field.
func (o *EnrollmentSettingsV2) SetPersonalDeviceEnrollmentType(v string) {
	o.PersonalDeviceEnrollmentType = &v
}

// GetAccountDrivenUserEnrollmentEnabled returns the AccountDrivenUserEnrollmentEnabled field value if set, zero value otherwise.
func (o *EnrollmentSettingsV2) GetAccountDrivenUserEnrollmentEnabled() bool {
	if o == nil || IsNil(o.AccountDrivenUserEnrollmentEnabled) {
		var ret bool
		return ret
	}
	return *o.AccountDrivenUserEnrollmentEnabled
}

// GetAccountDrivenUserEnrollmentEnabledOk returns a tuple with the AccountDrivenUserEnrollmentEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentSettingsV2) GetAccountDrivenUserEnrollmentEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AccountDrivenUserEnrollmentEnabled) {
		return nil, false
	}
	return o.AccountDrivenUserEnrollmentEnabled, true
}

// HasAccountDrivenUserEnrollmentEnabled returns a boolean if a field has been set.
func (o *EnrollmentSettingsV2) HasAccountDrivenUserEnrollmentEnabled() bool {
	if o != nil && !IsNil(o.AccountDrivenUserEnrollmentEnabled) {
		return true
	}

	return false
}

// SetAccountDrivenUserEnrollmentEnabled gets a reference to the given bool and assigns it to the AccountDrivenUserEnrollmentEnabled field.
func (o *EnrollmentSettingsV2) SetAccountDrivenUserEnrollmentEnabled(v bool) {
	o.AccountDrivenUserEnrollmentEnabled = &v
}

func (o EnrollmentSettingsV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnrollmentSettingsV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstallSingleProfile) {
		toSerialize["installSingleProfile"] = o.InstallSingleProfile
	}
	if !IsNil(o.SigningMdmProfileEnabled) {
		toSerialize["signingMdmProfileEnabled"] = o.SigningMdmProfileEnabled
	}
	if o.MdmSigningCertificate.IsSet() {
		toSerialize["mdmSigningCertificate"] = o.MdmSigningCertificate.Get()
	}
	if !IsNil(o.RestrictReenrollment) {
		toSerialize["restrictReenrollment"] = o.RestrictReenrollment
	}
	if !IsNil(o.FlushLocationInformation) {
		toSerialize["flushLocationInformation"] = o.FlushLocationInformation
	}
	if !IsNil(o.FlushLocationHistoryInformation) {
		toSerialize["flushLocationHistoryInformation"] = o.FlushLocationHistoryInformation
	}
	if !IsNil(o.FlushPolicyHistory) {
		toSerialize["flushPolicyHistory"] = o.FlushPolicyHistory
	}
	if !IsNil(o.FlushExtensionAttributes) {
		toSerialize["flushExtensionAttributes"] = o.FlushExtensionAttributes
	}
	if !IsNil(o.FlushMdmCommandsOnReenroll) {
		toSerialize["flushMdmCommandsOnReenroll"] = o.FlushMdmCommandsOnReenroll
	}
	if !IsNil(o.MacOsEnterpriseEnrollmentEnabled) {
		toSerialize["macOsEnterpriseEnrollmentEnabled"] = o.MacOsEnterpriseEnrollmentEnabled
	}
	toSerialize["managementUsername"] = o.ManagementUsername
	if !IsNil(o.ManagementPassword) {
		toSerialize["managementPassword"] = o.ManagementPassword
	}
	if !IsNil(o.ManagementPasswordSet) {
		toSerialize["managementPasswordSet"] = o.ManagementPasswordSet
	}
	if !IsNil(o.PasswordType) {
		toSerialize["passwordType"] = o.PasswordType
	}
	if !IsNil(o.RandomPasswordLength) {
		toSerialize["randomPasswordLength"] = o.RandomPasswordLength
	}
	if !IsNil(o.CreateManagementAccount) {
		toSerialize["createManagementAccount"] = o.CreateManagementAccount
	}
	if !IsNil(o.HideManagementAccount) {
		toSerialize["hideManagementAccount"] = o.HideManagementAccount
	}
	if !IsNil(o.AllowSshOnlyManagementAccount) {
		toSerialize["allowSshOnlyManagementAccount"] = o.AllowSshOnlyManagementAccount
	}
	if !IsNil(o.EnsureSshRunning) {
		toSerialize["ensureSshRunning"] = o.EnsureSshRunning
	}
	if !IsNil(o.LaunchSelfService) {
		toSerialize["launchSelfService"] = o.LaunchSelfService
	}
	if !IsNil(o.SignQuickAdd) {
		toSerialize["signQuickAdd"] = o.SignQuickAdd
	}
	if o.DeveloperCertificateIdentity.IsSet() {
		toSerialize["developerCertificateIdentity"] = o.DeveloperCertificateIdentity.Get()
	}
	if !IsNil(o.DeveloperCertificateIdentityDetails) {
		toSerialize["developerCertificateIdentityDetails"] = o.DeveloperCertificateIdentityDetails
	}
	if !IsNil(o.MdmSigningCertificateDetails) {
		toSerialize["mdmSigningCertificateDetails"] = o.MdmSigningCertificateDetails
	}
	if !IsNil(o.IosEnterpriseEnrollmentEnabled) {
		toSerialize["iosEnterpriseEnrollmentEnabled"] = o.IosEnterpriseEnrollmentEnabled
	}
	if !IsNil(o.IosPersonalEnrollmentEnabled) {
		toSerialize["iosPersonalEnrollmentEnabled"] = o.IosPersonalEnrollmentEnabled
	}
	if !IsNil(o.PersonalDeviceEnrollmentType) {
		toSerialize["personalDeviceEnrollmentType"] = o.PersonalDeviceEnrollmentType
	}
	if !IsNil(o.AccountDrivenUserEnrollmentEnabled) {
		toSerialize["accountDrivenUserEnrollmentEnabled"] = o.AccountDrivenUserEnrollmentEnabled
	}
	return toSerialize, nil
}

type NullableEnrollmentSettingsV2 struct {
	value *EnrollmentSettingsV2
	isSet bool
}

func (v NullableEnrollmentSettingsV2) Get() *EnrollmentSettingsV2 {
	return v.value
}

func (v *NullableEnrollmentSettingsV2) Set(val *EnrollmentSettingsV2) {
	v.value = val
	v.isSet = true
}

func (v NullableEnrollmentSettingsV2) IsSet() bool {
	return v.isSet
}

func (v *NullableEnrollmentSettingsV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnrollmentSettingsV2(val *EnrollmentSettingsV2) *NullableEnrollmentSettingsV2 {
	return &NullableEnrollmentSettingsV2{value: val, isSet: true}
}

func (v NullableEnrollmentSettingsV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnrollmentSettingsV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


