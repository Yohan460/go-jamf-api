/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SsoSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SsoSettings{}

// SsoSettings struct for SsoSettings
type SsoSettings struct {
	SsoForEnrollmentEnabled bool `json:"ssoForEnrollmentEnabled"`
	SsoBypassAllowed bool `json:"ssoBypassAllowed"`
	SsoEnabled bool `json:"ssoEnabled"`
	SsoForMacOsSelfServiceEnabled bool `json:"ssoForMacOsSelfServiceEnabled"`
	TokenExpirationDisabled bool `json:"tokenExpirationDisabled"`
	UserAttributeEnabled bool `json:"userAttributeEnabled"`
	UserAttributeName *string `json:"userAttributeName,omitempty"`
	UserMapping string `json:"userMapping"`
	EnrollmentSsoForAdueEnabled bool `json:"enrollmentSsoForAdueEnabled"`
	EnrollmentSsoConfig *EnrollmentSsoConfig `json:"enrollmentSsoConfig,omitempty"`
	GroupEnrollmentAccessEnabled bool `json:"groupEnrollmentAccessEnabled"`
	GroupAttributeName string `json:"groupAttributeName"`
	GroupRdnKey string `json:"groupRdnKey"`
	GroupEnrollmentAccessName *string `json:"groupEnrollmentAccessName,omitempty"`
	IdpProviderType string `json:"idpProviderType"`
	IdpUrl *string `json:"idpUrl,omitempty"`
	EntityId string `json:"entityId"`
	MetadataFileName *string `json:"metadataFileName,omitempty"`
	OtherProviderTypeName *string `json:"otherProviderTypeName,omitempty"`
	FederationMetadataFile *string `json:"federationMetadataFile,omitempty"`
	MetadataSource string `json:"metadataSource"`
	SessionTimeout *int64 `json:"sessionTimeout,omitempty"`
}

type _SsoSettings SsoSettings

// NewSsoSettings instantiates a new SsoSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSsoSettings(ssoForEnrollmentEnabled bool, ssoBypassAllowed bool, ssoEnabled bool, ssoForMacOsSelfServiceEnabled bool, tokenExpirationDisabled bool, userAttributeEnabled bool, userMapping string, enrollmentSsoForAdueEnabled bool, groupEnrollmentAccessEnabled bool, groupAttributeName string, groupRdnKey string, idpProviderType string, entityId string, metadataSource string) *SsoSettings {
	this := SsoSettings{}
	this.SsoForEnrollmentEnabled = ssoForEnrollmentEnabled
	this.SsoBypassAllowed = ssoBypassAllowed
	this.SsoEnabled = ssoEnabled
	this.SsoForMacOsSelfServiceEnabled = ssoForMacOsSelfServiceEnabled
	this.TokenExpirationDisabled = tokenExpirationDisabled
	this.UserAttributeEnabled = userAttributeEnabled
	var userAttributeName string = " "
	this.UserAttributeName = &userAttributeName
	this.UserMapping = userMapping
	this.EnrollmentSsoForAdueEnabled = enrollmentSsoForAdueEnabled
	this.GroupEnrollmentAccessEnabled = groupEnrollmentAccessEnabled
	this.GroupAttributeName = groupAttributeName
	this.GroupRdnKey = groupRdnKey
	var groupEnrollmentAccessName string = " "
	this.GroupEnrollmentAccessName = &groupEnrollmentAccessName
	this.IdpProviderType = idpProviderType
	this.EntityId = entityId
	var otherProviderTypeName string = " "
	this.OtherProviderTypeName = &otherProviderTypeName
	this.MetadataSource = metadataSource
	var sessionTimeout int64 = 480
	this.SessionTimeout = &sessionTimeout
	return &this
}

// NewSsoSettingsWithDefaults instantiates a new SsoSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSsoSettingsWithDefaults() *SsoSettings {
	this := SsoSettings{}
	var ssoForEnrollmentEnabled bool = false
	this.SsoForEnrollmentEnabled = ssoForEnrollmentEnabled
	var ssoBypassAllowed bool = false
	this.SsoBypassAllowed = ssoBypassAllowed
	var ssoEnabled bool = false
	this.SsoEnabled = ssoEnabled
	var ssoForMacOsSelfServiceEnabled bool = false
	this.SsoForMacOsSelfServiceEnabled = ssoForMacOsSelfServiceEnabled
	var tokenExpirationDisabled bool = false
	this.TokenExpirationDisabled = tokenExpirationDisabled
	var userAttributeEnabled bool = false
	this.UserAttributeEnabled = userAttributeEnabled
	var userAttributeName string = " "
	this.UserAttributeName = &userAttributeName
	var enrollmentSsoForAdueEnabled bool = false
	this.EnrollmentSsoForAdueEnabled = enrollmentSsoForAdueEnabled
	var groupEnrollmentAccessEnabled bool = false
	this.GroupEnrollmentAccessEnabled = groupEnrollmentAccessEnabled
	var groupAttributeName string = "http://schemas.xmlsoap.org/claims/Group"
	this.GroupAttributeName = groupAttributeName
	var groupRdnKey string = " "
	this.GroupRdnKey = groupRdnKey
	var groupEnrollmentAccessName string = " "
	this.GroupEnrollmentAccessName = &groupEnrollmentAccessName
	var otherProviderTypeName string = " "
	this.OtherProviderTypeName = &otherProviderTypeName
	var sessionTimeout int64 = 480
	this.SessionTimeout = &sessionTimeout
	return &this
}

// GetSsoForEnrollmentEnabled returns the SsoForEnrollmentEnabled field value
func (o *SsoSettings) GetSsoForEnrollmentEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SsoForEnrollmentEnabled
}

// GetSsoForEnrollmentEnabledOk returns a tuple with the SsoForEnrollmentEnabled field value
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetSsoForEnrollmentEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SsoForEnrollmentEnabled, true
}

// SetSsoForEnrollmentEnabled sets field value
func (o *SsoSettings) SetSsoForEnrollmentEnabled(v bool) {
	o.SsoForEnrollmentEnabled = v
}

// GetSsoBypassAllowed returns the SsoBypassAllowed field value
func (o *SsoSettings) GetSsoBypassAllowed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SsoBypassAllowed
}

// GetSsoBypassAllowedOk returns a tuple with the SsoBypassAllowed field value
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetSsoBypassAllowedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SsoBypassAllowed, true
}

// SetSsoBypassAllowed sets field value
func (o *SsoSettings) SetSsoBypassAllowed(v bool) {
	o.SsoBypassAllowed = v
}

// GetSsoEnabled returns the SsoEnabled field value
func (o *SsoSettings) GetSsoEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SsoEnabled
}

// GetSsoEnabledOk returns a tuple with the SsoEnabled field value
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetSsoEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SsoEnabled, true
}

// SetSsoEnabled sets field value
func (o *SsoSettings) SetSsoEnabled(v bool) {
	o.SsoEnabled = v
}

// GetSsoForMacOsSelfServiceEnabled returns the SsoForMacOsSelfServiceEnabled field value
func (o *SsoSettings) GetSsoForMacOsSelfServiceEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SsoForMacOsSelfServiceEnabled
}

// GetSsoForMacOsSelfServiceEnabledOk returns a tuple with the SsoForMacOsSelfServiceEnabled field value
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetSsoForMacOsSelfServiceEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SsoForMacOsSelfServiceEnabled, true
}

// SetSsoForMacOsSelfServiceEnabled sets field value
func (o *SsoSettings) SetSsoForMacOsSelfServiceEnabled(v bool) {
	o.SsoForMacOsSelfServiceEnabled = v
}

// GetTokenExpirationDisabled returns the TokenExpirationDisabled field value
func (o *SsoSettings) GetTokenExpirationDisabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.TokenExpirationDisabled
}

// GetTokenExpirationDisabledOk returns a tuple with the TokenExpirationDisabled field value
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetTokenExpirationDisabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenExpirationDisabled, true
}

// SetTokenExpirationDisabled sets field value
func (o *SsoSettings) SetTokenExpirationDisabled(v bool) {
	o.TokenExpirationDisabled = v
}

// GetUserAttributeEnabled returns the UserAttributeEnabled field value
func (o *SsoSettings) GetUserAttributeEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UserAttributeEnabled
}

// GetUserAttributeEnabledOk returns a tuple with the UserAttributeEnabled field value
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetUserAttributeEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserAttributeEnabled, true
}

// SetUserAttributeEnabled sets field value
func (o *SsoSettings) SetUserAttributeEnabled(v bool) {
	o.UserAttributeEnabled = v
}

// GetUserAttributeName returns the UserAttributeName field value if set, zero value otherwise.
func (o *SsoSettings) GetUserAttributeName() string {
	if o == nil || IsNil(o.UserAttributeName) {
		var ret string
		return ret
	}
	return *o.UserAttributeName
}

// GetUserAttributeNameOk returns a tuple with the UserAttributeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetUserAttributeNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserAttributeName) {
		return nil, false
	}
	return o.UserAttributeName, true
}

// HasUserAttributeName returns a boolean if a field has been set.
func (o *SsoSettings) HasUserAttributeName() bool {
	if o != nil && !IsNil(o.UserAttributeName) {
		return true
	}

	return false
}

// SetUserAttributeName gets a reference to the given string and assigns it to the UserAttributeName field.
func (o *SsoSettings) SetUserAttributeName(v string) {
	o.UserAttributeName = &v
}

// GetUserMapping returns the UserMapping field value
func (o *SsoSettings) GetUserMapping() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserMapping
}

// GetUserMappingOk returns a tuple with the UserMapping field value
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetUserMappingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserMapping, true
}

// SetUserMapping sets field value
func (o *SsoSettings) SetUserMapping(v string) {
	o.UserMapping = v
}

// GetEnrollmentSsoForAdueEnabled returns the EnrollmentSsoForAdueEnabled field value
func (o *SsoSettings) GetEnrollmentSsoForAdueEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnrollmentSsoForAdueEnabled
}

// GetEnrollmentSsoForAdueEnabledOk returns a tuple with the EnrollmentSsoForAdueEnabled field value
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetEnrollmentSsoForAdueEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnrollmentSsoForAdueEnabled, true
}

// SetEnrollmentSsoForAdueEnabled sets field value
func (o *SsoSettings) SetEnrollmentSsoForAdueEnabled(v bool) {
	o.EnrollmentSsoForAdueEnabled = v
}

// GetEnrollmentSsoConfig returns the EnrollmentSsoConfig field value if set, zero value otherwise.
func (o *SsoSettings) GetEnrollmentSsoConfig() EnrollmentSsoConfig {
	if o == nil || IsNil(o.EnrollmentSsoConfig) {
		var ret EnrollmentSsoConfig
		return ret
	}
	return *o.EnrollmentSsoConfig
}

// GetEnrollmentSsoConfigOk returns a tuple with the EnrollmentSsoConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetEnrollmentSsoConfigOk() (*EnrollmentSsoConfig, bool) {
	if o == nil || IsNil(o.EnrollmentSsoConfig) {
		return nil, false
	}
	return o.EnrollmentSsoConfig, true
}

// HasEnrollmentSsoConfig returns a boolean if a field has been set.
func (o *SsoSettings) HasEnrollmentSsoConfig() bool {
	if o != nil && !IsNil(o.EnrollmentSsoConfig) {
		return true
	}

	return false
}

// SetEnrollmentSsoConfig gets a reference to the given EnrollmentSsoConfig and assigns it to the EnrollmentSsoConfig field.
func (o *SsoSettings) SetEnrollmentSsoConfig(v EnrollmentSsoConfig) {
	o.EnrollmentSsoConfig = &v
}

// GetGroupEnrollmentAccessEnabled returns the GroupEnrollmentAccessEnabled field value
func (o *SsoSettings) GetGroupEnrollmentAccessEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.GroupEnrollmentAccessEnabled
}

// GetGroupEnrollmentAccessEnabledOk returns a tuple with the GroupEnrollmentAccessEnabled field value
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetGroupEnrollmentAccessEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupEnrollmentAccessEnabled, true
}

// SetGroupEnrollmentAccessEnabled sets field value
func (o *SsoSettings) SetGroupEnrollmentAccessEnabled(v bool) {
	o.GroupEnrollmentAccessEnabled = v
}

// GetGroupAttributeName returns the GroupAttributeName field value
func (o *SsoSettings) GetGroupAttributeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupAttributeName
}

// GetGroupAttributeNameOk returns a tuple with the GroupAttributeName field value
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetGroupAttributeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupAttributeName, true
}

// SetGroupAttributeName sets field value
func (o *SsoSettings) SetGroupAttributeName(v string) {
	o.GroupAttributeName = v
}

// GetGroupRdnKey returns the GroupRdnKey field value
func (o *SsoSettings) GetGroupRdnKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupRdnKey
}

// GetGroupRdnKeyOk returns a tuple with the GroupRdnKey field value
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetGroupRdnKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupRdnKey, true
}

// SetGroupRdnKey sets field value
func (o *SsoSettings) SetGroupRdnKey(v string) {
	o.GroupRdnKey = v
}

// GetGroupEnrollmentAccessName returns the GroupEnrollmentAccessName field value if set, zero value otherwise.
func (o *SsoSettings) GetGroupEnrollmentAccessName() string {
	if o == nil || IsNil(o.GroupEnrollmentAccessName) {
		var ret string
		return ret
	}
	return *o.GroupEnrollmentAccessName
}

// GetGroupEnrollmentAccessNameOk returns a tuple with the GroupEnrollmentAccessName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetGroupEnrollmentAccessNameOk() (*string, bool) {
	if o == nil || IsNil(o.GroupEnrollmentAccessName) {
		return nil, false
	}
	return o.GroupEnrollmentAccessName, true
}

// HasGroupEnrollmentAccessName returns a boolean if a field has been set.
func (o *SsoSettings) HasGroupEnrollmentAccessName() bool {
	if o != nil && !IsNil(o.GroupEnrollmentAccessName) {
		return true
	}

	return false
}

// SetGroupEnrollmentAccessName gets a reference to the given string and assigns it to the GroupEnrollmentAccessName field.
func (o *SsoSettings) SetGroupEnrollmentAccessName(v string) {
	o.GroupEnrollmentAccessName = &v
}

// GetIdpProviderType returns the IdpProviderType field value
func (o *SsoSettings) GetIdpProviderType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdpProviderType
}

// GetIdpProviderTypeOk returns a tuple with the IdpProviderType field value
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetIdpProviderTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdpProviderType, true
}

// SetIdpProviderType sets field value
func (o *SsoSettings) SetIdpProviderType(v string) {
	o.IdpProviderType = v
}

// GetIdpUrl returns the IdpUrl field value if set, zero value otherwise.
func (o *SsoSettings) GetIdpUrl() string {
	if o == nil || IsNil(o.IdpUrl) {
		var ret string
		return ret
	}
	return *o.IdpUrl
}

// GetIdpUrlOk returns a tuple with the IdpUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetIdpUrlOk() (*string, bool) {
	if o == nil || IsNil(o.IdpUrl) {
		return nil, false
	}
	return o.IdpUrl, true
}

// HasIdpUrl returns a boolean if a field has been set.
func (o *SsoSettings) HasIdpUrl() bool {
	if o != nil && !IsNil(o.IdpUrl) {
		return true
	}

	return false
}

// SetIdpUrl gets a reference to the given string and assigns it to the IdpUrl field.
func (o *SsoSettings) SetIdpUrl(v string) {
	o.IdpUrl = &v
}

// GetEntityId returns the EntityId field value
func (o *SsoSettings) GetEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetEntityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityId, true
}

// SetEntityId sets field value
func (o *SsoSettings) SetEntityId(v string) {
	o.EntityId = v
}

// GetMetadataFileName returns the MetadataFileName field value if set, zero value otherwise.
func (o *SsoSettings) GetMetadataFileName() string {
	if o == nil || IsNil(o.MetadataFileName) {
		var ret string
		return ret
	}
	return *o.MetadataFileName
}

// GetMetadataFileNameOk returns a tuple with the MetadataFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetMetadataFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.MetadataFileName) {
		return nil, false
	}
	return o.MetadataFileName, true
}

// HasMetadataFileName returns a boolean if a field has been set.
func (o *SsoSettings) HasMetadataFileName() bool {
	if o != nil && !IsNil(o.MetadataFileName) {
		return true
	}

	return false
}

// SetMetadataFileName gets a reference to the given string and assigns it to the MetadataFileName field.
func (o *SsoSettings) SetMetadataFileName(v string) {
	o.MetadataFileName = &v
}

// GetOtherProviderTypeName returns the OtherProviderTypeName field value if set, zero value otherwise.
func (o *SsoSettings) GetOtherProviderTypeName() string {
	if o == nil || IsNil(o.OtherProviderTypeName) {
		var ret string
		return ret
	}
	return *o.OtherProviderTypeName
}

// GetOtherProviderTypeNameOk returns a tuple with the OtherProviderTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetOtherProviderTypeNameOk() (*string, bool) {
	if o == nil || IsNil(o.OtherProviderTypeName) {
		return nil, false
	}
	return o.OtherProviderTypeName, true
}

// HasOtherProviderTypeName returns a boolean if a field has been set.
func (o *SsoSettings) HasOtherProviderTypeName() bool {
	if o != nil && !IsNil(o.OtherProviderTypeName) {
		return true
	}

	return false
}

// SetOtherProviderTypeName gets a reference to the given string and assigns it to the OtherProviderTypeName field.
func (o *SsoSettings) SetOtherProviderTypeName(v string) {
	o.OtherProviderTypeName = &v
}

// GetFederationMetadataFile returns the FederationMetadataFile field value if set, zero value otherwise.
func (o *SsoSettings) GetFederationMetadataFile() string {
	if o == nil || IsNil(o.FederationMetadataFile) {
		var ret string
		return ret
	}
	return *o.FederationMetadataFile
}

// GetFederationMetadataFileOk returns a tuple with the FederationMetadataFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetFederationMetadataFileOk() (*string, bool) {
	if o == nil || IsNil(o.FederationMetadataFile) {
		return nil, false
	}
	return o.FederationMetadataFile, true
}

// HasFederationMetadataFile returns a boolean if a field has been set.
func (o *SsoSettings) HasFederationMetadataFile() bool {
	if o != nil && !IsNil(o.FederationMetadataFile) {
		return true
	}

	return false
}

// SetFederationMetadataFile gets a reference to the given string and assigns it to the FederationMetadataFile field.
func (o *SsoSettings) SetFederationMetadataFile(v string) {
	o.FederationMetadataFile = &v
}

// GetMetadataSource returns the MetadataSource field value
func (o *SsoSettings) GetMetadataSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetadataSource
}

// GetMetadataSourceOk returns a tuple with the MetadataSource field value
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetMetadataSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetadataSource, true
}

// SetMetadataSource sets field value
func (o *SsoSettings) SetMetadataSource(v string) {
	o.MetadataSource = v
}

// GetSessionTimeout returns the SessionTimeout field value if set, zero value otherwise.
func (o *SsoSettings) GetSessionTimeout() int64 {
	if o == nil || IsNil(o.SessionTimeout) {
		var ret int64
		return ret
	}
	return *o.SessionTimeout
}

// GetSessionTimeoutOk returns a tuple with the SessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoSettings) GetSessionTimeoutOk() (*int64, bool) {
	if o == nil || IsNil(o.SessionTimeout) {
		return nil, false
	}
	return o.SessionTimeout, true
}

// HasSessionTimeout returns a boolean if a field has been set.
func (o *SsoSettings) HasSessionTimeout() bool {
	if o != nil && !IsNil(o.SessionTimeout) {
		return true
	}

	return false
}

// SetSessionTimeout gets a reference to the given int64 and assigns it to the SessionTimeout field.
func (o *SsoSettings) SetSessionTimeout(v int64) {
	o.SessionTimeout = &v
}

func (o SsoSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SsoSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ssoForEnrollmentEnabled"] = o.SsoForEnrollmentEnabled
	toSerialize["ssoBypassAllowed"] = o.SsoBypassAllowed
	toSerialize["ssoEnabled"] = o.SsoEnabled
	toSerialize["ssoForMacOsSelfServiceEnabled"] = o.SsoForMacOsSelfServiceEnabled
	toSerialize["tokenExpirationDisabled"] = o.TokenExpirationDisabled
	toSerialize["userAttributeEnabled"] = o.UserAttributeEnabled
	if !IsNil(o.UserAttributeName) {
		toSerialize["userAttributeName"] = o.UserAttributeName
	}
	toSerialize["userMapping"] = o.UserMapping
	toSerialize["enrollmentSsoForAdueEnabled"] = o.EnrollmentSsoForAdueEnabled
	if !IsNil(o.EnrollmentSsoConfig) {
		toSerialize["enrollmentSsoConfig"] = o.EnrollmentSsoConfig
	}
	toSerialize["groupEnrollmentAccessEnabled"] = o.GroupEnrollmentAccessEnabled
	toSerialize["groupAttributeName"] = o.GroupAttributeName
	toSerialize["groupRdnKey"] = o.GroupRdnKey
	if !IsNil(o.GroupEnrollmentAccessName) {
		toSerialize["groupEnrollmentAccessName"] = o.GroupEnrollmentAccessName
	}
	toSerialize["idpProviderType"] = o.IdpProviderType
	if !IsNil(o.IdpUrl) {
		toSerialize["idpUrl"] = o.IdpUrl
	}
	toSerialize["entityId"] = o.EntityId
	if !IsNil(o.MetadataFileName) {
		toSerialize["metadataFileName"] = o.MetadataFileName
	}
	if !IsNil(o.OtherProviderTypeName) {
		toSerialize["otherProviderTypeName"] = o.OtherProviderTypeName
	}
	if !IsNil(o.FederationMetadataFile) {
		toSerialize["federationMetadataFile"] = o.FederationMetadataFile
	}
	toSerialize["metadataSource"] = o.MetadataSource
	if !IsNil(o.SessionTimeout) {
		toSerialize["sessionTimeout"] = o.SessionTimeout
	}
	return toSerialize, nil
}

func (o *SsoSettings) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ssoForEnrollmentEnabled",
		"ssoBypassAllowed",
		"ssoEnabled",
		"ssoForMacOsSelfServiceEnabled",
		"tokenExpirationDisabled",
		"userAttributeEnabled",
		"userMapping",
		"enrollmentSsoForAdueEnabled",
		"groupEnrollmentAccessEnabled",
		"groupAttributeName",
		"groupRdnKey",
		"idpProviderType",
		"entityId",
		"metadataSource",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSsoSettings := _SsoSettings{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSsoSettings)

	if err != nil {
		return err
	}

	*o = SsoSettings(varSsoSettings)

	return err
}

type NullableSsoSettings struct {
	value *SsoSettings
	isSet bool
}

func (v NullableSsoSettings) Get() *SsoSettings {
	return v.value
}

func (v *NullableSsoSettings) Set(val *SsoSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableSsoSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableSsoSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSsoSettings(val *SsoSettings) *NullableSsoSettings {
	return &NullableSsoSettings{value: val, isSet: true}
}

func (v NullableSsoSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSsoSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


