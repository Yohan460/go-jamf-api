/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the DashboardSetup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DashboardSetup{}

// DashboardSetup Response object that has lists of information for widgets, and what setup tasks to display.
type DashboardSetup struct {
	SetupTaskOptions *DashboardSetupSetupTaskOptions `json:"setupTaskOptions,omitempty"`
	FeatureOptions *DashboardSetupFeatureOptions `json:"featureOptions,omitempty"`
}

// NewDashboardSetup instantiates a new DashboardSetup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardSetup() *DashboardSetup {
	this := DashboardSetup{}
	return &this
}

// NewDashboardSetupWithDefaults instantiates a new DashboardSetup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardSetupWithDefaults() *DashboardSetup {
	this := DashboardSetup{}
	return &this
}

// GetSetupTaskOptions returns the SetupTaskOptions field value if set, zero value otherwise.
func (o *DashboardSetup) GetSetupTaskOptions() DashboardSetupSetupTaskOptions {
	if o == nil || IsNil(o.SetupTaskOptions) {
		var ret DashboardSetupSetupTaskOptions
		return ret
	}
	return *o.SetupTaskOptions
}

// GetSetupTaskOptionsOk returns a tuple with the SetupTaskOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardSetup) GetSetupTaskOptionsOk() (*DashboardSetupSetupTaskOptions, bool) {
	if o == nil || IsNil(o.SetupTaskOptions) {
		return nil, false
	}
	return o.SetupTaskOptions, true
}

// HasSetupTaskOptions returns a boolean if a field has been set.
func (o *DashboardSetup) HasSetupTaskOptions() bool {
	if o != nil && !IsNil(o.SetupTaskOptions) {
		return true
	}

	return false
}

// SetSetupTaskOptions gets a reference to the given DashboardSetupSetupTaskOptions and assigns it to the SetupTaskOptions field.
func (o *DashboardSetup) SetSetupTaskOptions(v DashboardSetupSetupTaskOptions) {
	o.SetupTaskOptions = &v
}

// GetFeatureOptions returns the FeatureOptions field value if set, zero value otherwise.
func (o *DashboardSetup) GetFeatureOptions() DashboardSetupFeatureOptions {
	if o == nil || IsNil(o.FeatureOptions) {
		var ret DashboardSetupFeatureOptions
		return ret
	}
	return *o.FeatureOptions
}

// GetFeatureOptionsOk returns a tuple with the FeatureOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardSetup) GetFeatureOptionsOk() (*DashboardSetupFeatureOptions, bool) {
	if o == nil || IsNil(o.FeatureOptions) {
		return nil, false
	}
	return o.FeatureOptions, true
}

// HasFeatureOptions returns a boolean if a field has been set.
func (o *DashboardSetup) HasFeatureOptions() bool {
	if o != nil && !IsNil(o.FeatureOptions) {
		return true
	}

	return false
}

// SetFeatureOptions gets a reference to the given DashboardSetupFeatureOptions and assigns it to the FeatureOptions field.
func (o *DashboardSetup) SetFeatureOptions(v DashboardSetupFeatureOptions) {
	o.FeatureOptions = &v
}

func (o DashboardSetup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DashboardSetup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SetupTaskOptions) {
		toSerialize["setupTaskOptions"] = o.SetupTaskOptions
	}
	if !IsNil(o.FeatureOptions) {
		toSerialize["featureOptions"] = o.FeatureOptions
	}
	return toSerialize, nil
}

type NullableDashboardSetup struct {
	value *DashboardSetup
	isSet bool
}

func (v NullableDashboardSetup) Get() *DashboardSetup {
	return v.value
}

func (v *NullableDashboardSetup) Set(val *DashboardSetup) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardSetup) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardSetup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardSetup(val *DashboardSetup) *NullableDashboardSetup {
	return &NullableDashboardSetup{value: val, isSet: true}
}

func (v NullableDashboardSetup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardSetup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


