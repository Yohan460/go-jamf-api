/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// EnrollmentCustomizationPanelList struct for EnrollmentCustomizationPanelList
type EnrollmentCustomizationPanelList struct {
	Panels []GetEnrollmentCustomizationPanel `json:"panels,omitempty"`
}

// NewEnrollmentCustomizationPanelList instantiates a new EnrollmentCustomizationPanelList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnrollmentCustomizationPanelList() *EnrollmentCustomizationPanelList {
	this := EnrollmentCustomizationPanelList{}
	return &this
}

// NewEnrollmentCustomizationPanelListWithDefaults instantiates a new EnrollmentCustomizationPanelList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnrollmentCustomizationPanelListWithDefaults() *EnrollmentCustomizationPanelList {
	this := EnrollmentCustomizationPanelList{}
	return &this
}

// GetPanels returns the Panels field value if set, zero value otherwise.
func (o *EnrollmentCustomizationPanelList) GetPanels() []GetEnrollmentCustomizationPanel {
	if o == nil || o.Panels == nil {
		var ret []GetEnrollmentCustomizationPanel
		return ret
	}
	return o.Panels
}

// GetPanelsOk returns a tuple with the Panels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentCustomizationPanelList) GetPanelsOk() ([]GetEnrollmentCustomizationPanel, bool) {
	if o == nil || o.Panels == nil {
		return nil, false
	}
	return o.Panels, true
}

// HasPanels returns a boolean if a field has been set.
func (o *EnrollmentCustomizationPanelList) HasPanels() bool {
	if o != nil && o.Panels != nil {
		return true
	}

	return false
}

// SetPanels gets a reference to the given []GetEnrollmentCustomizationPanel and assigns it to the Panels field.
func (o *EnrollmentCustomizationPanelList) SetPanels(v []GetEnrollmentCustomizationPanel) {
	o.Panels = v
}

func (o EnrollmentCustomizationPanelList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Panels != nil {
		toSerialize["panels"] = o.Panels
	}
	return json.Marshal(toSerialize)
}

type NullableEnrollmentCustomizationPanelList struct {
	value *EnrollmentCustomizationPanelList
	isSet bool
}

func (v NullableEnrollmentCustomizationPanelList) Get() *EnrollmentCustomizationPanelList {
	return v.value
}

func (v *NullableEnrollmentCustomizationPanelList) Set(val *EnrollmentCustomizationPanelList) {
	v.value = val
	v.isSet = true
}

func (v NullableEnrollmentCustomizationPanelList) IsSet() bool {
	return v.isSet
}

func (v *NullableEnrollmentCustomizationPanelList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnrollmentCustomizationPanelList(val *EnrollmentCustomizationPanelList) *NullableEnrollmentCustomizationPanelList {
	return &NullableEnrollmentCustomizationPanelList{value: val, isSet: true}
}

func (v NullableEnrollmentCustomizationPanelList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnrollmentCustomizationPanelList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


