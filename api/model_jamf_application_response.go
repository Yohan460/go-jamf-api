/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the JamfApplicationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JamfApplicationResponse{}

// JamfApplicationResponse struct for JamfApplicationResponse
type JamfApplicationResponse struct {
	DisplayName *string `json:"displayName,omitempty"`
	ReleaseHistoryUrl *string `json:"releaseHistoryUrl,omitempty"`
	Artifacts []JamfPackageResponse `json:"artifacts,omitempty"`
}

// NewJamfApplicationResponse instantiates a new JamfApplicationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJamfApplicationResponse() *JamfApplicationResponse {
	this := JamfApplicationResponse{}
	return &this
}

// NewJamfApplicationResponseWithDefaults instantiates a new JamfApplicationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJamfApplicationResponseWithDefaults() *JamfApplicationResponse {
	this := JamfApplicationResponse{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *JamfApplicationResponse) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JamfApplicationResponse) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *JamfApplicationResponse) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *JamfApplicationResponse) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetReleaseHistoryUrl returns the ReleaseHistoryUrl field value if set, zero value otherwise.
func (o *JamfApplicationResponse) GetReleaseHistoryUrl() string {
	if o == nil || IsNil(o.ReleaseHistoryUrl) {
		var ret string
		return ret
	}
	return *o.ReleaseHistoryUrl
}

// GetReleaseHistoryUrlOk returns a tuple with the ReleaseHistoryUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JamfApplicationResponse) GetReleaseHistoryUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseHistoryUrl) {
		return nil, false
	}
	return o.ReleaseHistoryUrl, true
}

// HasReleaseHistoryUrl returns a boolean if a field has been set.
func (o *JamfApplicationResponse) HasReleaseHistoryUrl() bool {
	if o != nil && !IsNil(o.ReleaseHistoryUrl) {
		return true
	}

	return false
}

// SetReleaseHistoryUrl gets a reference to the given string and assigns it to the ReleaseHistoryUrl field.
func (o *JamfApplicationResponse) SetReleaseHistoryUrl(v string) {
	o.ReleaseHistoryUrl = &v
}

// GetArtifacts returns the Artifacts field value if set, zero value otherwise.
func (o *JamfApplicationResponse) GetArtifacts() []JamfPackageResponse {
	if o == nil || IsNil(o.Artifacts) {
		var ret []JamfPackageResponse
		return ret
	}
	return o.Artifacts
}

// GetArtifactsOk returns a tuple with the Artifacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JamfApplicationResponse) GetArtifactsOk() ([]JamfPackageResponse, bool) {
	if o == nil || IsNil(o.Artifacts) {
		return nil, false
	}
	return o.Artifacts, true
}

// HasArtifacts returns a boolean if a field has been set.
func (o *JamfApplicationResponse) HasArtifacts() bool {
	if o != nil && !IsNil(o.Artifacts) {
		return true
	}

	return false
}

// SetArtifacts gets a reference to the given []JamfPackageResponse and assigns it to the Artifacts field.
func (o *JamfApplicationResponse) SetArtifacts(v []JamfPackageResponse) {
	o.Artifacts = v
}

func (o JamfApplicationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JamfApplicationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.ReleaseHistoryUrl) {
		toSerialize["releaseHistoryUrl"] = o.ReleaseHistoryUrl
	}
	if !IsNil(o.Artifacts) {
		toSerialize["artifacts"] = o.Artifacts
	}
	return toSerialize, nil
}

type NullableJamfApplicationResponse struct {
	value *JamfApplicationResponse
	isSet bool
}

func (v NullableJamfApplicationResponse) Get() *JamfApplicationResponse {
	return v.value
}

func (v *NullableJamfApplicationResponse) Set(val *JamfApplicationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableJamfApplicationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableJamfApplicationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJamfApplicationResponse(val *JamfApplicationResponse) *NullableJamfApplicationResponse {
	return &NullableJamfApplicationResponse{value: val, isSet: true}
}

func (v NullableJamfApplicationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJamfApplicationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


