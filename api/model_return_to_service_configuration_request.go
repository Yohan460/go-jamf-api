/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ReturnToServiceConfigurationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReturnToServiceConfigurationRequest{}

// ReturnToServiceConfigurationRequest struct for ReturnToServiceConfigurationRequest
type ReturnToServiceConfigurationRequest struct {
	// Display name of the Return to Service Configuration.
	DisplayName *string `json:"displayName,omitempty"`
	// Id of the wifi profile that is associated with the return to service configuration.
	WifiProfileId *string `json:"wifiProfileId,omitempty"`
}

// NewReturnToServiceConfigurationRequest instantiates a new ReturnToServiceConfigurationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReturnToServiceConfigurationRequest() *ReturnToServiceConfigurationRequest {
	this := ReturnToServiceConfigurationRequest{}
	var displayName string = "false"
	this.DisplayName = &displayName
	return &this
}

// NewReturnToServiceConfigurationRequestWithDefaults instantiates a new ReturnToServiceConfigurationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReturnToServiceConfigurationRequestWithDefaults() *ReturnToServiceConfigurationRequest {
	this := ReturnToServiceConfigurationRequest{}
	var displayName string = "false"
	this.DisplayName = &displayName
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ReturnToServiceConfigurationRequest) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnToServiceConfigurationRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ReturnToServiceConfigurationRequest) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ReturnToServiceConfigurationRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetWifiProfileId returns the WifiProfileId field value if set, zero value otherwise.
func (o *ReturnToServiceConfigurationRequest) GetWifiProfileId() string {
	if o == nil || IsNil(o.WifiProfileId) {
		var ret string
		return ret
	}
	return *o.WifiProfileId
}

// GetWifiProfileIdOk returns a tuple with the WifiProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnToServiceConfigurationRequest) GetWifiProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.WifiProfileId) {
		return nil, false
	}
	return o.WifiProfileId, true
}

// HasWifiProfileId returns a boolean if a field has been set.
func (o *ReturnToServiceConfigurationRequest) HasWifiProfileId() bool {
	if o != nil && !IsNil(o.WifiProfileId) {
		return true
	}

	return false
}

// SetWifiProfileId gets a reference to the given string and assigns it to the WifiProfileId field.
func (o *ReturnToServiceConfigurationRequest) SetWifiProfileId(v string) {
	o.WifiProfileId = &v
}

func (o ReturnToServiceConfigurationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReturnToServiceConfigurationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.WifiProfileId) {
		toSerialize["wifiProfileId"] = o.WifiProfileId
	}
	return toSerialize, nil
}

type NullableReturnToServiceConfigurationRequest struct {
	value *ReturnToServiceConfigurationRequest
	isSet bool
}

func (v NullableReturnToServiceConfigurationRequest) Get() *ReturnToServiceConfigurationRequest {
	return v.value
}

func (v *NullableReturnToServiceConfigurationRequest) Set(val *ReturnToServiceConfigurationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnToServiceConfigurationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnToServiceConfigurationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnToServiceConfigurationRequest(val *ReturnToServiceConfigurationRequest) *NullableReturnToServiceConfigurationRequest {
	return &NullableReturnToServiceConfigurationRequest{value: val, isSet: true}
}

func (v NullableReturnToServiceConfigurationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnToServiceConfigurationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


