/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CloudLdapServerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudLdapServerRequest{}

// CloudLdapServerRequest A Cloud Identity Provider LDAP server configuration for requests
type CloudLdapServerRequest struct {
	ServerUrl string `json:"serverUrl"`
	Enabled bool `json:"enabled"`
	DomainName string `json:"domainName"`
	Port int64 `json:"port"`
	Keystore CloudLdapKeystoreFile `json:"keystore"`
	ConnectionTimeout int64 `json:"connectionTimeout"`
	SearchTimeout int64 `json:"searchTimeout"`
	UseWildcards bool `json:"useWildcards"`
	ConnectionType string `json:"connectionType"`
	MembershipCalculationOptimizationEnabled *bool `json:"membershipCalculationOptimizationEnabled,omitempty"`
}

type _CloudLdapServerRequest CloudLdapServerRequest

// NewCloudLdapServerRequest instantiates a new CloudLdapServerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudLdapServerRequest(serverUrl string, enabled bool, domainName string, port int64, keystore CloudLdapKeystoreFile, connectionTimeout int64, searchTimeout int64, useWildcards bool, connectionType string) *CloudLdapServerRequest {
	this := CloudLdapServerRequest{}
	this.ServerUrl = serverUrl
	this.Enabled = enabled
	this.DomainName = domainName
	this.Port = port
	this.Keystore = keystore
	this.ConnectionTimeout = connectionTimeout
	this.SearchTimeout = searchTimeout
	this.UseWildcards = useWildcards
	this.ConnectionType = connectionType
	return &this
}

// NewCloudLdapServerRequestWithDefaults instantiates a new CloudLdapServerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudLdapServerRequestWithDefaults() *CloudLdapServerRequest {
	this := CloudLdapServerRequest{}
	return &this
}

// GetServerUrl returns the ServerUrl field value
func (o *CloudLdapServerRequest) GetServerUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerUrl
}

// GetServerUrlOk returns a tuple with the ServerUrl field value
// and a boolean to check if the value has been set.
func (o *CloudLdapServerRequest) GetServerUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerUrl, true
}

// SetServerUrl sets field value
func (o *CloudLdapServerRequest) SetServerUrl(v string) {
	o.ServerUrl = v
}

// GetEnabled returns the Enabled field value
func (o *CloudLdapServerRequest) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *CloudLdapServerRequest) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *CloudLdapServerRequest) SetEnabled(v bool) {
	o.Enabled = v
}

// GetDomainName returns the DomainName field value
func (o *CloudLdapServerRequest) GetDomainName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value
// and a boolean to check if the value has been set.
func (o *CloudLdapServerRequest) GetDomainNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DomainName, true
}

// SetDomainName sets field value
func (o *CloudLdapServerRequest) SetDomainName(v string) {
	o.DomainName = v
}

// GetPort returns the Port field value
func (o *CloudLdapServerRequest) GetPort() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *CloudLdapServerRequest) GetPortOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *CloudLdapServerRequest) SetPort(v int64) {
	o.Port = v
}

// GetKeystore returns the Keystore field value
func (o *CloudLdapServerRequest) GetKeystore() CloudLdapKeystoreFile {
	if o == nil {
		var ret CloudLdapKeystoreFile
		return ret
	}

	return o.Keystore
}

// GetKeystoreOk returns a tuple with the Keystore field value
// and a boolean to check if the value has been set.
func (o *CloudLdapServerRequest) GetKeystoreOk() (*CloudLdapKeystoreFile, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Keystore, true
}

// SetKeystore sets field value
func (o *CloudLdapServerRequest) SetKeystore(v CloudLdapKeystoreFile) {
	o.Keystore = v
}

// GetConnectionTimeout returns the ConnectionTimeout field value
func (o *CloudLdapServerRequest) GetConnectionTimeout() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ConnectionTimeout
}

// GetConnectionTimeoutOk returns a tuple with the ConnectionTimeout field value
// and a boolean to check if the value has been set.
func (o *CloudLdapServerRequest) GetConnectionTimeoutOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionTimeout, true
}

// SetConnectionTimeout sets field value
func (o *CloudLdapServerRequest) SetConnectionTimeout(v int64) {
	o.ConnectionTimeout = v
}

// GetSearchTimeout returns the SearchTimeout field value
func (o *CloudLdapServerRequest) GetSearchTimeout() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SearchTimeout
}

// GetSearchTimeoutOk returns a tuple with the SearchTimeout field value
// and a boolean to check if the value has been set.
func (o *CloudLdapServerRequest) GetSearchTimeoutOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SearchTimeout, true
}

// SetSearchTimeout sets field value
func (o *CloudLdapServerRequest) SetSearchTimeout(v int64) {
	o.SearchTimeout = v
}

// GetUseWildcards returns the UseWildcards field value
func (o *CloudLdapServerRequest) GetUseWildcards() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UseWildcards
}

// GetUseWildcardsOk returns a tuple with the UseWildcards field value
// and a boolean to check if the value has been set.
func (o *CloudLdapServerRequest) GetUseWildcardsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UseWildcards, true
}

// SetUseWildcards sets field value
func (o *CloudLdapServerRequest) SetUseWildcards(v bool) {
	o.UseWildcards = v
}

// GetConnectionType returns the ConnectionType field value
func (o *CloudLdapServerRequest) GetConnectionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value
// and a boolean to check if the value has been set.
func (o *CloudLdapServerRequest) GetConnectionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionType, true
}

// SetConnectionType sets field value
func (o *CloudLdapServerRequest) SetConnectionType(v string) {
	o.ConnectionType = v
}

// GetMembershipCalculationOptimizationEnabled returns the MembershipCalculationOptimizationEnabled field value if set, zero value otherwise.
func (o *CloudLdapServerRequest) GetMembershipCalculationOptimizationEnabled() bool {
	if o == nil || IsNil(o.MembershipCalculationOptimizationEnabled) {
		var ret bool
		return ret
	}
	return *o.MembershipCalculationOptimizationEnabled
}

// GetMembershipCalculationOptimizationEnabledOk returns a tuple with the MembershipCalculationOptimizationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudLdapServerRequest) GetMembershipCalculationOptimizationEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.MembershipCalculationOptimizationEnabled) {
		return nil, false
	}
	return o.MembershipCalculationOptimizationEnabled, true
}

// HasMembershipCalculationOptimizationEnabled returns a boolean if a field has been set.
func (o *CloudLdapServerRequest) HasMembershipCalculationOptimizationEnabled() bool {
	if o != nil && !IsNil(o.MembershipCalculationOptimizationEnabled) {
		return true
	}

	return false
}

// SetMembershipCalculationOptimizationEnabled gets a reference to the given bool and assigns it to the MembershipCalculationOptimizationEnabled field.
func (o *CloudLdapServerRequest) SetMembershipCalculationOptimizationEnabled(v bool) {
	o.MembershipCalculationOptimizationEnabled = &v
}

func (o CloudLdapServerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudLdapServerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["serverUrl"] = o.ServerUrl
	toSerialize["enabled"] = o.Enabled
	toSerialize["domainName"] = o.DomainName
	toSerialize["port"] = o.Port
	toSerialize["keystore"] = o.Keystore
	toSerialize["connectionTimeout"] = o.ConnectionTimeout
	toSerialize["searchTimeout"] = o.SearchTimeout
	toSerialize["useWildcards"] = o.UseWildcards
	toSerialize["connectionType"] = o.ConnectionType
	if !IsNil(o.MembershipCalculationOptimizationEnabled) {
		toSerialize["membershipCalculationOptimizationEnabled"] = o.MembershipCalculationOptimizationEnabled
	}
	return toSerialize, nil
}

func (o *CloudLdapServerRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"serverUrl",
		"enabled",
		"domainName",
		"port",
		"keystore",
		"connectionTimeout",
		"searchTimeout",
		"useWildcards",
		"connectionType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCloudLdapServerRequest := _CloudLdapServerRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCloudLdapServerRequest)

	if err != nil {
		return err
	}

	*o = CloudLdapServerRequest(varCloudLdapServerRequest)

	return err
}

type NullableCloudLdapServerRequest struct {
	value *CloudLdapServerRequest
	isSet bool
}

func (v NullableCloudLdapServerRequest) Get() *CloudLdapServerRequest {
	return v.value
}

func (v *NullableCloudLdapServerRequest) Set(val *CloudLdapServerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudLdapServerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudLdapServerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudLdapServerRequest(val *CloudLdapServerRequest) *NullableCloudLdapServerRequest {
	return &NullableCloudLdapServerRequest{value: val, isSet: true}
}

func (v NullableCloudLdapServerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudLdapServerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


