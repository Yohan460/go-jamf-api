/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the MobileDeviceWatchOsGeneral type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MobileDeviceWatchOsGeneral{}

// MobileDeviceWatchOsGeneral struct for MobileDeviceWatchOsGeneral
type MobileDeviceWatchOsGeneral struct {
	Udid *string `json:"udid,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	AssetTag *string `json:"assetTag,omitempty"`
	SiteId *string `json:"siteId,omitempty"`
	LastInventoryUpdateDate *time.Time `json:"lastInventoryUpdateDate,omitempty"`
	OsVersion *string `json:"osVersion,omitempty"`
	OsRapidSecurityResponse *string `json:"osRapidSecurityResponse,omitempty"`
	OsBuild *string `json:"osBuild,omitempty"`
	OsSupplementalBuildVersion *string `json:"osSupplementalBuildVersion,omitempty"`
	SoftwareUpdateDeviceId *string `json:"softwareUpdateDeviceId,omitempty"`
	IpAddress *string `json:"ipAddress,omitempty"`
	Managed *bool `json:"managed,omitempty"`
	Supervised *bool `json:"supervised,omitempty"`
	DeviceOwnershipType *string `json:"deviceOwnershipType,omitempty"`
	EnrollmentMethodPrestage *EnrollmentMethodPrestage `json:"enrollmentMethodPrestage,omitempty"`
	EnrollmentSessionTokenValid *bool `json:"enrollmentSessionTokenValid,omitempty"`
	LastEnrolledDate *time.Time `json:"lastEnrolledDate,omitempty"`
	MdmProfileExpirationDate *time.Time `json:"mdmProfileExpirationDate,omitempty"`
	// IANA time zone database name
	TimeZone *string `json:"timeZone,omitempty"`
	DeclarativeDeviceManagementEnabled *bool `json:"declarativeDeviceManagementEnabled,omitempty"`
	ExtensionAttributes []MobileDeviceExtensionAttribute `json:"extensionAttributes,omitempty"`
	DiagnosticAndUsageReportingEnabled *bool `json:"diagnosticAndUsageReportingEnabled,omitempty"`
	AppAnalyticsEnabled *bool `json:"appAnalyticsEnabled,omitempty"`
	DeviceLocatorServiceEnabled *bool `json:"deviceLocatorServiceEnabled,omitempty"`
	DoNotDisturbEnabled *bool `json:"doNotDisturbEnabled,omitempty"`
	LastCloudBackupDate *time.Time `json:"lastCloudBackupDate,omitempty"`
	ItunesStoreAccountActive *bool `json:"itunesStoreAccountActive,omitempty"`
}

// NewMobileDeviceWatchOsGeneral instantiates a new MobileDeviceWatchOsGeneral object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileDeviceWatchOsGeneral() *MobileDeviceWatchOsGeneral {
	this := MobileDeviceWatchOsGeneral{}
	return &this
}

// NewMobileDeviceWatchOsGeneralWithDefaults instantiates a new MobileDeviceWatchOsGeneral object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileDeviceWatchOsGeneralWithDefaults() *MobileDeviceWatchOsGeneral {
	this := MobileDeviceWatchOsGeneral{}
	return &this
}

// GetUdid returns the Udid field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetUdid() string {
	if o == nil || IsNil(o.Udid) {
		var ret string
		return ret
	}
	return *o.Udid
}

// GetUdidOk returns a tuple with the Udid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetUdidOk() (*string, bool) {
	if o == nil || IsNil(o.Udid) {
		return nil, false
	}
	return o.Udid, true
}

// HasUdid returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasUdid() bool {
	if o != nil && !IsNil(o.Udid) {
		return true
	}

	return false
}

// SetUdid gets a reference to the given string and assigns it to the Udid field.
func (o *MobileDeviceWatchOsGeneral) SetUdid(v string) {
	o.Udid = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MobileDeviceWatchOsGeneral) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetAssetTag returns the AssetTag field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetAssetTag() string {
	if o == nil || IsNil(o.AssetTag) {
		var ret string
		return ret
	}
	return *o.AssetTag
}

// GetAssetTagOk returns a tuple with the AssetTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetAssetTagOk() (*string, bool) {
	if o == nil || IsNil(o.AssetTag) {
		return nil, false
	}
	return o.AssetTag, true
}

// HasAssetTag returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasAssetTag() bool {
	if o != nil && !IsNil(o.AssetTag) {
		return true
	}

	return false
}

// SetAssetTag gets a reference to the given string and assigns it to the AssetTag field.
func (o *MobileDeviceWatchOsGeneral) SetAssetTag(v string) {
	o.AssetTag = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *MobileDeviceWatchOsGeneral) SetSiteId(v string) {
	o.SiteId = &v
}

// GetLastInventoryUpdateDate returns the LastInventoryUpdateDate field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetLastInventoryUpdateDate() time.Time {
	if o == nil || IsNil(o.LastInventoryUpdateDate) {
		var ret time.Time
		return ret
	}
	return *o.LastInventoryUpdateDate
}

// GetLastInventoryUpdateDateOk returns a tuple with the LastInventoryUpdateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetLastInventoryUpdateDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastInventoryUpdateDate) {
		return nil, false
	}
	return o.LastInventoryUpdateDate, true
}

// HasLastInventoryUpdateDate returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasLastInventoryUpdateDate() bool {
	if o != nil && !IsNil(o.LastInventoryUpdateDate) {
		return true
	}

	return false
}

// SetLastInventoryUpdateDate gets a reference to the given time.Time and assigns it to the LastInventoryUpdateDate field.
func (o *MobileDeviceWatchOsGeneral) SetLastInventoryUpdateDate(v time.Time) {
	o.LastInventoryUpdateDate = &v
}

// GetOsVersion returns the OsVersion field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetOsVersion() string {
	if o == nil || IsNil(o.OsVersion) {
		var ret string
		return ret
	}
	return *o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetOsVersionOk() (*string, bool) {
	if o == nil || IsNil(o.OsVersion) {
		return nil, false
	}
	return o.OsVersion, true
}

// HasOsVersion returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasOsVersion() bool {
	if o != nil && !IsNil(o.OsVersion) {
		return true
	}

	return false
}

// SetOsVersion gets a reference to the given string and assigns it to the OsVersion field.
func (o *MobileDeviceWatchOsGeneral) SetOsVersion(v string) {
	o.OsVersion = &v
}

// GetOsRapidSecurityResponse returns the OsRapidSecurityResponse field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetOsRapidSecurityResponse() string {
	if o == nil || IsNil(o.OsRapidSecurityResponse) {
		var ret string
		return ret
	}
	return *o.OsRapidSecurityResponse
}

// GetOsRapidSecurityResponseOk returns a tuple with the OsRapidSecurityResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetOsRapidSecurityResponseOk() (*string, bool) {
	if o == nil || IsNil(o.OsRapidSecurityResponse) {
		return nil, false
	}
	return o.OsRapidSecurityResponse, true
}

// HasOsRapidSecurityResponse returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasOsRapidSecurityResponse() bool {
	if o != nil && !IsNil(o.OsRapidSecurityResponse) {
		return true
	}

	return false
}

// SetOsRapidSecurityResponse gets a reference to the given string and assigns it to the OsRapidSecurityResponse field.
func (o *MobileDeviceWatchOsGeneral) SetOsRapidSecurityResponse(v string) {
	o.OsRapidSecurityResponse = &v
}

// GetOsBuild returns the OsBuild field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetOsBuild() string {
	if o == nil || IsNil(o.OsBuild) {
		var ret string
		return ret
	}
	return *o.OsBuild
}

// GetOsBuildOk returns a tuple with the OsBuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetOsBuildOk() (*string, bool) {
	if o == nil || IsNil(o.OsBuild) {
		return nil, false
	}
	return o.OsBuild, true
}

// HasOsBuild returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasOsBuild() bool {
	if o != nil && !IsNil(o.OsBuild) {
		return true
	}

	return false
}

// SetOsBuild gets a reference to the given string and assigns it to the OsBuild field.
func (o *MobileDeviceWatchOsGeneral) SetOsBuild(v string) {
	o.OsBuild = &v
}

// GetOsSupplementalBuildVersion returns the OsSupplementalBuildVersion field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetOsSupplementalBuildVersion() string {
	if o == nil || IsNil(o.OsSupplementalBuildVersion) {
		var ret string
		return ret
	}
	return *o.OsSupplementalBuildVersion
}

// GetOsSupplementalBuildVersionOk returns a tuple with the OsSupplementalBuildVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetOsSupplementalBuildVersionOk() (*string, bool) {
	if o == nil || IsNil(o.OsSupplementalBuildVersion) {
		return nil, false
	}
	return o.OsSupplementalBuildVersion, true
}

// HasOsSupplementalBuildVersion returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasOsSupplementalBuildVersion() bool {
	if o != nil && !IsNil(o.OsSupplementalBuildVersion) {
		return true
	}

	return false
}

// SetOsSupplementalBuildVersion gets a reference to the given string and assigns it to the OsSupplementalBuildVersion field.
func (o *MobileDeviceWatchOsGeneral) SetOsSupplementalBuildVersion(v string) {
	o.OsSupplementalBuildVersion = &v
}

// GetSoftwareUpdateDeviceId returns the SoftwareUpdateDeviceId field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetSoftwareUpdateDeviceId() string {
	if o == nil || IsNil(o.SoftwareUpdateDeviceId) {
		var ret string
		return ret
	}
	return *o.SoftwareUpdateDeviceId
}

// GetSoftwareUpdateDeviceIdOk returns a tuple with the SoftwareUpdateDeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetSoftwareUpdateDeviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SoftwareUpdateDeviceId) {
		return nil, false
	}
	return o.SoftwareUpdateDeviceId, true
}

// HasSoftwareUpdateDeviceId returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasSoftwareUpdateDeviceId() bool {
	if o != nil && !IsNil(o.SoftwareUpdateDeviceId) {
		return true
	}

	return false
}

// SetSoftwareUpdateDeviceId gets a reference to the given string and assigns it to the SoftwareUpdateDeviceId field.
func (o *MobileDeviceWatchOsGeneral) SetSoftwareUpdateDeviceId(v string) {
	o.SoftwareUpdateDeviceId = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *MobileDeviceWatchOsGeneral) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetManaged returns the Managed field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetManaged() bool {
	if o == nil || IsNil(o.Managed) {
		var ret bool
		return ret
	}
	return *o.Managed
}

// GetManagedOk returns a tuple with the Managed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.Managed) {
		return nil, false
	}
	return o.Managed, true
}

// HasManaged returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasManaged() bool {
	if o != nil && !IsNil(o.Managed) {
		return true
	}

	return false
}

// SetManaged gets a reference to the given bool and assigns it to the Managed field.
func (o *MobileDeviceWatchOsGeneral) SetManaged(v bool) {
	o.Managed = &v
}

// GetSupervised returns the Supervised field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetSupervised() bool {
	if o == nil || IsNil(o.Supervised) {
		var ret bool
		return ret
	}
	return *o.Supervised
}

// GetSupervisedOk returns a tuple with the Supervised field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetSupervisedOk() (*bool, bool) {
	if o == nil || IsNil(o.Supervised) {
		return nil, false
	}
	return o.Supervised, true
}

// HasSupervised returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasSupervised() bool {
	if o != nil && !IsNil(o.Supervised) {
		return true
	}

	return false
}

// SetSupervised gets a reference to the given bool and assigns it to the Supervised field.
func (o *MobileDeviceWatchOsGeneral) SetSupervised(v bool) {
	o.Supervised = &v
}

// GetDeviceOwnershipType returns the DeviceOwnershipType field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetDeviceOwnershipType() string {
	if o == nil || IsNil(o.DeviceOwnershipType) {
		var ret string
		return ret
	}
	return *o.DeviceOwnershipType
}

// GetDeviceOwnershipTypeOk returns a tuple with the DeviceOwnershipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetDeviceOwnershipTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceOwnershipType) {
		return nil, false
	}
	return o.DeviceOwnershipType, true
}

// HasDeviceOwnershipType returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasDeviceOwnershipType() bool {
	if o != nil && !IsNil(o.DeviceOwnershipType) {
		return true
	}

	return false
}

// SetDeviceOwnershipType gets a reference to the given string and assigns it to the DeviceOwnershipType field.
func (o *MobileDeviceWatchOsGeneral) SetDeviceOwnershipType(v string) {
	o.DeviceOwnershipType = &v
}

// GetEnrollmentMethodPrestage returns the EnrollmentMethodPrestage field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetEnrollmentMethodPrestage() EnrollmentMethodPrestage {
	if o == nil || IsNil(o.EnrollmentMethodPrestage) {
		var ret EnrollmentMethodPrestage
		return ret
	}
	return *o.EnrollmentMethodPrestage
}

// GetEnrollmentMethodPrestageOk returns a tuple with the EnrollmentMethodPrestage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetEnrollmentMethodPrestageOk() (*EnrollmentMethodPrestage, bool) {
	if o == nil || IsNil(o.EnrollmentMethodPrestage) {
		return nil, false
	}
	return o.EnrollmentMethodPrestage, true
}

// HasEnrollmentMethodPrestage returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasEnrollmentMethodPrestage() bool {
	if o != nil && !IsNil(o.EnrollmentMethodPrestage) {
		return true
	}

	return false
}

// SetEnrollmentMethodPrestage gets a reference to the given EnrollmentMethodPrestage and assigns it to the EnrollmentMethodPrestage field.
func (o *MobileDeviceWatchOsGeneral) SetEnrollmentMethodPrestage(v EnrollmentMethodPrestage) {
	o.EnrollmentMethodPrestage = &v
}

// GetEnrollmentSessionTokenValid returns the EnrollmentSessionTokenValid field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetEnrollmentSessionTokenValid() bool {
	if o == nil || IsNil(o.EnrollmentSessionTokenValid) {
		var ret bool
		return ret
	}
	return *o.EnrollmentSessionTokenValid
}

// GetEnrollmentSessionTokenValidOk returns a tuple with the EnrollmentSessionTokenValid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetEnrollmentSessionTokenValidOk() (*bool, bool) {
	if o == nil || IsNil(o.EnrollmentSessionTokenValid) {
		return nil, false
	}
	return o.EnrollmentSessionTokenValid, true
}

// HasEnrollmentSessionTokenValid returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasEnrollmentSessionTokenValid() bool {
	if o != nil && !IsNil(o.EnrollmentSessionTokenValid) {
		return true
	}

	return false
}

// SetEnrollmentSessionTokenValid gets a reference to the given bool and assigns it to the EnrollmentSessionTokenValid field.
func (o *MobileDeviceWatchOsGeneral) SetEnrollmentSessionTokenValid(v bool) {
	o.EnrollmentSessionTokenValid = &v
}

// GetLastEnrolledDate returns the LastEnrolledDate field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetLastEnrolledDate() time.Time {
	if o == nil || IsNil(o.LastEnrolledDate) {
		var ret time.Time
		return ret
	}
	return *o.LastEnrolledDate
}

// GetLastEnrolledDateOk returns a tuple with the LastEnrolledDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetLastEnrolledDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastEnrolledDate) {
		return nil, false
	}
	return o.LastEnrolledDate, true
}

// HasLastEnrolledDate returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasLastEnrolledDate() bool {
	if o != nil && !IsNil(o.LastEnrolledDate) {
		return true
	}

	return false
}

// SetLastEnrolledDate gets a reference to the given time.Time and assigns it to the LastEnrolledDate field.
func (o *MobileDeviceWatchOsGeneral) SetLastEnrolledDate(v time.Time) {
	o.LastEnrolledDate = &v
}

// GetMdmProfileExpirationDate returns the MdmProfileExpirationDate field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetMdmProfileExpirationDate() time.Time {
	if o == nil || IsNil(o.MdmProfileExpirationDate) {
		var ret time.Time
		return ret
	}
	return *o.MdmProfileExpirationDate
}

// GetMdmProfileExpirationDateOk returns a tuple with the MdmProfileExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetMdmProfileExpirationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.MdmProfileExpirationDate) {
		return nil, false
	}
	return o.MdmProfileExpirationDate, true
}

// HasMdmProfileExpirationDate returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasMdmProfileExpirationDate() bool {
	if o != nil && !IsNil(o.MdmProfileExpirationDate) {
		return true
	}

	return false
}

// SetMdmProfileExpirationDate gets a reference to the given time.Time and assigns it to the MdmProfileExpirationDate field.
func (o *MobileDeviceWatchOsGeneral) SetMdmProfileExpirationDate(v time.Time) {
	o.MdmProfileExpirationDate = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetTimeZone() string {
	if o == nil || IsNil(o.TimeZone) {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *MobileDeviceWatchOsGeneral) SetTimeZone(v string) {
	o.TimeZone = &v
}

// GetDeclarativeDeviceManagementEnabled returns the DeclarativeDeviceManagementEnabled field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetDeclarativeDeviceManagementEnabled() bool {
	if o == nil || IsNil(o.DeclarativeDeviceManagementEnabled) {
		var ret bool
		return ret
	}
	return *o.DeclarativeDeviceManagementEnabled
}

// GetDeclarativeDeviceManagementEnabledOk returns a tuple with the DeclarativeDeviceManagementEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetDeclarativeDeviceManagementEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DeclarativeDeviceManagementEnabled) {
		return nil, false
	}
	return o.DeclarativeDeviceManagementEnabled, true
}

// HasDeclarativeDeviceManagementEnabled returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasDeclarativeDeviceManagementEnabled() bool {
	if o != nil && !IsNil(o.DeclarativeDeviceManagementEnabled) {
		return true
	}

	return false
}

// SetDeclarativeDeviceManagementEnabled gets a reference to the given bool and assigns it to the DeclarativeDeviceManagementEnabled field.
func (o *MobileDeviceWatchOsGeneral) SetDeclarativeDeviceManagementEnabled(v bool) {
	o.DeclarativeDeviceManagementEnabled = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetExtensionAttributes() []MobileDeviceExtensionAttribute {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret []MobileDeviceExtensionAttribute
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetExtensionAttributesOk() ([]MobileDeviceExtensionAttribute, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given []MobileDeviceExtensionAttribute and assigns it to the ExtensionAttributes field.
func (o *MobileDeviceWatchOsGeneral) SetExtensionAttributes(v []MobileDeviceExtensionAttribute) {
	o.ExtensionAttributes = v
}

// GetDiagnosticAndUsageReportingEnabled returns the DiagnosticAndUsageReportingEnabled field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetDiagnosticAndUsageReportingEnabled() bool {
	if o == nil || IsNil(o.DiagnosticAndUsageReportingEnabled) {
		var ret bool
		return ret
	}
	return *o.DiagnosticAndUsageReportingEnabled
}

// GetDiagnosticAndUsageReportingEnabledOk returns a tuple with the DiagnosticAndUsageReportingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetDiagnosticAndUsageReportingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DiagnosticAndUsageReportingEnabled) {
		return nil, false
	}
	return o.DiagnosticAndUsageReportingEnabled, true
}

// HasDiagnosticAndUsageReportingEnabled returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasDiagnosticAndUsageReportingEnabled() bool {
	if o != nil && !IsNil(o.DiagnosticAndUsageReportingEnabled) {
		return true
	}

	return false
}

// SetDiagnosticAndUsageReportingEnabled gets a reference to the given bool and assigns it to the DiagnosticAndUsageReportingEnabled field.
func (o *MobileDeviceWatchOsGeneral) SetDiagnosticAndUsageReportingEnabled(v bool) {
	o.DiagnosticAndUsageReportingEnabled = &v
}

// GetAppAnalyticsEnabled returns the AppAnalyticsEnabled field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetAppAnalyticsEnabled() bool {
	if o == nil || IsNil(o.AppAnalyticsEnabled) {
		var ret bool
		return ret
	}
	return *o.AppAnalyticsEnabled
}

// GetAppAnalyticsEnabledOk returns a tuple with the AppAnalyticsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetAppAnalyticsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AppAnalyticsEnabled) {
		return nil, false
	}
	return o.AppAnalyticsEnabled, true
}

// HasAppAnalyticsEnabled returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasAppAnalyticsEnabled() bool {
	if o != nil && !IsNil(o.AppAnalyticsEnabled) {
		return true
	}

	return false
}

// SetAppAnalyticsEnabled gets a reference to the given bool and assigns it to the AppAnalyticsEnabled field.
func (o *MobileDeviceWatchOsGeneral) SetAppAnalyticsEnabled(v bool) {
	o.AppAnalyticsEnabled = &v
}

// GetDeviceLocatorServiceEnabled returns the DeviceLocatorServiceEnabled field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetDeviceLocatorServiceEnabled() bool {
	if o == nil || IsNil(o.DeviceLocatorServiceEnabled) {
		var ret bool
		return ret
	}
	return *o.DeviceLocatorServiceEnabled
}

// GetDeviceLocatorServiceEnabledOk returns a tuple with the DeviceLocatorServiceEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetDeviceLocatorServiceEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DeviceLocatorServiceEnabled) {
		return nil, false
	}
	return o.DeviceLocatorServiceEnabled, true
}

// HasDeviceLocatorServiceEnabled returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasDeviceLocatorServiceEnabled() bool {
	if o != nil && !IsNil(o.DeviceLocatorServiceEnabled) {
		return true
	}

	return false
}

// SetDeviceLocatorServiceEnabled gets a reference to the given bool and assigns it to the DeviceLocatorServiceEnabled field.
func (o *MobileDeviceWatchOsGeneral) SetDeviceLocatorServiceEnabled(v bool) {
	o.DeviceLocatorServiceEnabled = &v
}

// GetDoNotDisturbEnabled returns the DoNotDisturbEnabled field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetDoNotDisturbEnabled() bool {
	if o == nil || IsNil(o.DoNotDisturbEnabled) {
		var ret bool
		return ret
	}
	return *o.DoNotDisturbEnabled
}

// GetDoNotDisturbEnabledOk returns a tuple with the DoNotDisturbEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetDoNotDisturbEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DoNotDisturbEnabled) {
		return nil, false
	}
	return o.DoNotDisturbEnabled, true
}

// HasDoNotDisturbEnabled returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasDoNotDisturbEnabled() bool {
	if o != nil && !IsNil(o.DoNotDisturbEnabled) {
		return true
	}

	return false
}

// SetDoNotDisturbEnabled gets a reference to the given bool and assigns it to the DoNotDisturbEnabled field.
func (o *MobileDeviceWatchOsGeneral) SetDoNotDisturbEnabled(v bool) {
	o.DoNotDisturbEnabled = &v
}

// GetLastCloudBackupDate returns the LastCloudBackupDate field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetLastCloudBackupDate() time.Time {
	if o == nil || IsNil(o.LastCloudBackupDate) {
		var ret time.Time
		return ret
	}
	return *o.LastCloudBackupDate
}

// GetLastCloudBackupDateOk returns a tuple with the LastCloudBackupDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetLastCloudBackupDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastCloudBackupDate) {
		return nil, false
	}
	return o.LastCloudBackupDate, true
}

// HasLastCloudBackupDate returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasLastCloudBackupDate() bool {
	if o != nil && !IsNil(o.LastCloudBackupDate) {
		return true
	}

	return false
}

// SetLastCloudBackupDate gets a reference to the given time.Time and assigns it to the LastCloudBackupDate field.
func (o *MobileDeviceWatchOsGeneral) SetLastCloudBackupDate(v time.Time) {
	o.LastCloudBackupDate = &v
}

// GetItunesStoreAccountActive returns the ItunesStoreAccountActive field value if set, zero value otherwise.
func (o *MobileDeviceWatchOsGeneral) GetItunesStoreAccountActive() bool {
	if o == nil || IsNil(o.ItunesStoreAccountActive) {
		var ret bool
		return ret
	}
	return *o.ItunesStoreAccountActive
}

// GetItunesStoreAccountActiveOk returns a tuple with the ItunesStoreAccountActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceWatchOsGeneral) GetItunesStoreAccountActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.ItunesStoreAccountActive) {
		return nil, false
	}
	return o.ItunesStoreAccountActive, true
}

// HasItunesStoreAccountActive returns a boolean if a field has been set.
func (o *MobileDeviceWatchOsGeneral) HasItunesStoreAccountActive() bool {
	if o != nil && !IsNil(o.ItunesStoreAccountActive) {
		return true
	}

	return false
}

// SetItunesStoreAccountActive gets a reference to the given bool and assigns it to the ItunesStoreAccountActive field.
func (o *MobileDeviceWatchOsGeneral) SetItunesStoreAccountActive(v bool) {
	o.ItunesStoreAccountActive = &v
}

func (o MobileDeviceWatchOsGeneral) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MobileDeviceWatchOsGeneral) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Udid) {
		toSerialize["udid"] = o.Udid
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.AssetTag) {
		toSerialize["assetTag"] = o.AssetTag
	}
	if !IsNil(o.SiteId) {
		toSerialize["siteId"] = o.SiteId
	}
	if !IsNil(o.LastInventoryUpdateDate) {
		toSerialize["lastInventoryUpdateDate"] = o.LastInventoryUpdateDate
	}
	if !IsNil(o.OsVersion) {
		toSerialize["osVersion"] = o.OsVersion
	}
	if !IsNil(o.OsRapidSecurityResponse) {
		toSerialize["osRapidSecurityResponse"] = o.OsRapidSecurityResponse
	}
	if !IsNil(o.OsBuild) {
		toSerialize["osBuild"] = o.OsBuild
	}
	if !IsNil(o.OsSupplementalBuildVersion) {
		toSerialize["osSupplementalBuildVersion"] = o.OsSupplementalBuildVersion
	}
	if !IsNil(o.SoftwareUpdateDeviceId) {
		toSerialize["softwareUpdateDeviceId"] = o.SoftwareUpdateDeviceId
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if !IsNil(o.Managed) {
		toSerialize["managed"] = o.Managed
	}
	if !IsNil(o.Supervised) {
		toSerialize["supervised"] = o.Supervised
	}
	if !IsNil(o.DeviceOwnershipType) {
		toSerialize["deviceOwnershipType"] = o.DeviceOwnershipType
	}
	if !IsNil(o.EnrollmentMethodPrestage) {
		toSerialize["enrollmentMethodPrestage"] = o.EnrollmentMethodPrestage
	}
	if !IsNil(o.EnrollmentSessionTokenValid) {
		toSerialize["enrollmentSessionTokenValid"] = o.EnrollmentSessionTokenValid
	}
	if !IsNil(o.LastEnrolledDate) {
		toSerialize["lastEnrolledDate"] = o.LastEnrolledDate
	}
	if !IsNil(o.MdmProfileExpirationDate) {
		toSerialize["mdmProfileExpirationDate"] = o.MdmProfileExpirationDate
	}
	if !IsNil(o.TimeZone) {
		toSerialize["timeZone"] = o.TimeZone
	}
	if !IsNil(o.DeclarativeDeviceManagementEnabled) {
		toSerialize["declarativeDeviceManagementEnabled"] = o.DeclarativeDeviceManagementEnabled
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extensionAttributes"] = o.ExtensionAttributes
	}
	if !IsNil(o.DiagnosticAndUsageReportingEnabled) {
		toSerialize["diagnosticAndUsageReportingEnabled"] = o.DiagnosticAndUsageReportingEnabled
	}
	if !IsNil(o.AppAnalyticsEnabled) {
		toSerialize["appAnalyticsEnabled"] = o.AppAnalyticsEnabled
	}
	if !IsNil(o.DeviceLocatorServiceEnabled) {
		toSerialize["deviceLocatorServiceEnabled"] = o.DeviceLocatorServiceEnabled
	}
	if !IsNil(o.DoNotDisturbEnabled) {
		toSerialize["doNotDisturbEnabled"] = o.DoNotDisturbEnabled
	}
	if !IsNil(o.LastCloudBackupDate) {
		toSerialize["lastCloudBackupDate"] = o.LastCloudBackupDate
	}
	if !IsNil(o.ItunesStoreAccountActive) {
		toSerialize["itunesStoreAccountActive"] = o.ItunesStoreAccountActive
	}
	return toSerialize, nil
}

type NullableMobileDeviceWatchOsGeneral struct {
	value *MobileDeviceWatchOsGeneral
	isSet bool
}

func (v NullableMobileDeviceWatchOsGeneral) Get() *MobileDeviceWatchOsGeneral {
	return v.value
}

func (v *NullableMobileDeviceWatchOsGeneral) Set(val *MobileDeviceWatchOsGeneral) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileDeviceWatchOsGeneral) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileDeviceWatchOsGeneral) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileDeviceWatchOsGeneral(val *MobileDeviceWatchOsGeneral) *NullableMobileDeviceWatchOsGeneral {
	return &NullableMobileDeviceWatchOsGeneral{value: val, isSet: true}
}

func (v NullableMobileDeviceWatchOsGeneral) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileDeviceWatchOsGeneral) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


