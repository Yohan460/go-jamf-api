/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ComputerHardwareUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComputerHardwareUpdate{}

// ComputerHardwareUpdate struct for ComputerHardwareUpdate
type ComputerHardwareUpdate struct {
	NetworkAdapterType *string `json:"networkAdapterType,omitempty"`
	MacAddress *string `json:"macAddress,omitempty"`
	AltNetworkAdapterType *string `json:"altNetworkAdapterType,omitempty"`
	AltMacAddress *string `json:"altMacAddress,omitempty"`
	ExtensionAttributes []ComputerExtensionAttribute `json:"extensionAttributes,omitempty"`
}

// NewComputerHardwareUpdate instantiates a new ComputerHardwareUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComputerHardwareUpdate() *ComputerHardwareUpdate {
	this := ComputerHardwareUpdate{}
	return &this
}

// NewComputerHardwareUpdateWithDefaults instantiates a new ComputerHardwareUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComputerHardwareUpdateWithDefaults() *ComputerHardwareUpdate {
	this := ComputerHardwareUpdate{}
	return &this
}

// GetNetworkAdapterType returns the NetworkAdapterType field value if set, zero value otherwise.
func (o *ComputerHardwareUpdate) GetNetworkAdapterType() string {
	if o == nil || IsNil(o.NetworkAdapterType) {
		var ret string
		return ret
	}
	return *o.NetworkAdapterType
}

// GetNetworkAdapterTypeOk returns a tuple with the NetworkAdapterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerHardwareUpdate) GetNetworkAdapterTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkAdapterType) {
		return nil, false
	}
	return o.NetworkAdapterType, true
}

// HasNetworkAdapterType returns a boolean if a field has been set.
func (o *ComputerHardwareUpdate) HasNetworkAdapterType() bool {
	if o != nil && !IsNil(o.NetworkAdapterType) {
		return true
	}

	return false
}

// SetNetworkAdapterType gets a reference to the given string and assigns it to the NetworkAdapterType field.
func (o *ComputerHardwareUpdate) SetNetworkAdapterType(v string) {
	o.NetworkAdapterType = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *ComputerHardwareUpdate) GetMacAddress() string {
	if o == nil || IsNil(o.MacAddress) {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerHardwareUpdate) GetMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.MacAddress) {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *ComputerHardwareUpdate) HasMacAddress() bool {
	if o != nil && !IsNil(o.MacAddress) {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *ComputerHardwareUpdate) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetAltNetworkAdapterType returns the AltNetworkAdapterType field value if set, zero value otherwise.
func (o *ComputerHardwareUpdate) GetAltNetworkAdapterType() string {
	if o == nil || IsNil(o.AltNetworkAdapterType) {
		var ret string
		return ret
	}
	return *o.AltNetworkAdapterType
}

// GetAltNetworkAdapterTypeOk returns a tuple with the AltNetworkAdapterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerHardwareUpdate) GetAltNetworkAdapterTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AltNetworkAdapterType) {
		return nil, false
	}
	return o.AltNetworkAdapterType, true
}

// HasAltNetworkAdapterType returns a boolean if a field has been set.
func (o *ComputerHardwareUpdate) HasAltNetworkAdapterType() bool {
	if o != nil && !IsNil(o.AltNetworkAdapterType) {
		return true
	}

	return false
}

// SetAltNetworkAdapterType gets a reference to the given string and assigns it to the AltNetworkAdapterType field.
func (o *ComputerHardwareUpdate) SetAltNetworkAdapterType(v string) {
	o.AltNetworkAdapterType = &v
}

// GetAltMacAddress returns the AltMacAddress field value if set, zero value otherwise.
func (o *ComputerHardwareUpdate) GetAltMacAddress() string {
	if o == nil || IsNil(o.AltMacAddress) {
		var ret string
		return ret
	}
	return *o.AltMacAddress
}

// GetAltMacAddressOk returns a tuple with the AltMacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerHardwareUpdate) GetAltMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.AltMacAddress) {
		return nil, false
	}
	return o.AltMacAddress, true
}

// HasAltMacAddress returns a boolean if a field has been set.
func (o *ComputerHardwareUpdate) HasAltMacAddress() bool {
	if o != nil && !IsNil(o.AltMacAddress) {
		return true
	}

	return false
}

// SetAltMacAddress gets a reference to the given string and assigns it to the AltMacAddress field.
func (o *ComputerHardwareUpdate) SetAltMacAddress(v string) {
	o.AltMacAddress = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *ComputerHardwareUpdate) GetExtensionAttributes() []ComputerExtensionAttribute {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret []ComputerExtensionAttribute
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerHardwareUpdate) GetExtensionAttributesOk() ([]ComputerExtensionAttribute, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *ComputerHardwareUpdate) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given []ComputerExtensionAttribute and assigns it to the ExtensionAttributes field.
func (o *ComputerHardwareUpdate) SetExtensionAttributes(v []ComputerExtensionAttribute) {
	o.ExtensionAttributes = v
}

func (o ComputerHardwareUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComputerHardwareUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkAdapterType) {
		toSerialize["networkAdapterType"] = o.NetworkAdapterType
	}
	if !IsNil(o.MacAddress) {
		toSerialize["macAddress"] = o.MacAddress
	}
	if !IsNil(o.AltNetworkAdapterType) {
		toSerialize["altNetworkAdapterType"] = o.AltNetworkAdapterType
	}
	if !IsNil(o.AltMacAddress) {
		toSerialize["altMacAddress"] = o.AltMacAddress
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extensionAttributes"] = o.ExtensionAttributes
	}
	return toSerialize, nil
}

type NullableComputerHardwareUpdate struct {
	value *ComputerHardwareUpdate
	isSet bool
}

func (v NullableComputerHardwareUpdate) Get() *ComputerHardwareUpdate {
	return v.value
}

func (v *NullableComputerHardwareUpdate) Set(val *ComputerHardwareUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableComputerHardwareUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableComputerHardwareUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComputerHardwareUpdate(val *ComputerHardwareUpdate) *NullableComputerHardwareUpdate {
	return &NullableComputerHardwareUpdate{value: val, isSet: true}
}

func (v NullableComputerHardwareUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComputerHardwareUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


