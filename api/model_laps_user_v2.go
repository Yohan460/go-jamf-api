/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the LapsUserV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LapsUserV2{}

// LapsUserV2 struct for LapsUserV2
type LapsUserV2 struct {
	ClientManagementId *string `json:"clientManagementId,omitempty"`
	Guid *string `json:"guid,omitempty"`
	Username *string `json:"username,omitempty"`
	UserSource *string `json:"userSource,omitempty"`
}

// NewLapsUserV2 instantiates a new LapsUserV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLapsUserV2() *LapsUserV2 {
	this := LapsUserV2{}
	return &this
}

// NewLapsUserV2WithDefaults instantiates a new LapsUserV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLapsUserV2WithDefaults() *LapsUserV2 {
	this := LapsUserV2{}
	return &this
}

// GetClientManagementId returns the ClientManagementId field value if set, zero value otherwise.
func (o *LapsUserV2) GetClientManagementId() string {
	if o == nil || IsNil(o.ClientManagementId) {
		var ret string
		return ret
	}
	return *o.ClientManagementId
}

// GetClientManagementIdOk returns a tuple with the ClientManagementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LapsUserV2) GetClientManagementIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientManagementId) {
		return nil, false
	}
	return o.ClientManagementId, true
}

// HasClientManagementId returns a boolean if a field has been set.
func (o *LapsUserV2) HasClientManagementId() bool {
	if o != nil && !IsNil(o.ClientManagementId) {
		return true
	}

	return false
}

// SetClientManagementId gets a reference to the given string and assigns it to the ClientManagementId field.
func (o *LapsUserV2) SetClientManagementId(v string) {
	o.ClientManagementId = &v
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *LapsUserV2) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LapsUserV2) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *LapsUserV2) HasGuid() bool {
	if o != nil && !IsNil(o.Guid) {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *LapsUserV2) SetGuid(v string) {
	o.Guid = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *LapsUserV2) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LapsUserV2) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *LapsUserV2) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *LapsUserV2) SetUsername(v string) {
	o.Username = &v
}

// GetUserSource returns the UserSource field value if set, zero value otherwise.
func (o *LapsUserV2) GetUserSource() string {
	if o == nil || IsNil(o.UserSource) {
		var ret string
		return ret
	}
	return *o.UserSource
}

// GetUserSourceOk returns a tuple with the UserSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LapsUserV2) GetUserSourceOk() (*string, bool) {
	if o == nil || IsNil(o.UserSource) {
		return nil, false
	}
	return o.UserSource, true
}

// HasUserSource returns a boolean if a field has been set.
func (o *LapsUserV2) HasUserSource() bool {
	if o != nil && !IsNil(o.UserSource) {
		return true
	}

	return false
}

// SetUserSource gets a reference to the given string and assigns it to the UserSource field.
func (o *LapsUserV2) SetUserSource(v string) {
	o.UserSource = &v
}

func (o LapsUserV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LapsUserV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientManagementId) {
		toSerialize["clientManagementId"] = o.ClientManagementId
	}
	if !IsNil(o.Guid) {
		toSerialize["guid"] = o.Guid
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.UserSource) {
		toSerialize["userSource"] = o.UserSource
	}
	return toSerialize, nil
}

type NullableLapsUserV2 struct {
	value *LapsUserV2
	isSet bool
}

func (v NullableLapsUserV2) Get() *LapsUserV2 {
	return v.value
}

func (v *NullableLapsUserV2) Set(val *LapsUserV2) {
	v.value = val
	v.isSet = true
}

func (v NullableLapsUserV2) IsSet() bool {
	return v.isSet
}

func (v *NullableLapsUserV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLapsUserV2(val *LapsUserV2) *NullableLapsUserV2 {
	return &NullableLapsUserV2{value: val, isSet: true}
}

func (v NullableLapsUserV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLapsUserV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


