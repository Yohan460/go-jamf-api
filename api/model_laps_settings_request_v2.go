/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the LapsSettingsRequestV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LapsSettingsRequestV2{}

// LapsSettingsRequestV2 struct for LapsSettingsRequestV2
type LapsSettingsRequestV2 struct {
	// When enabled, all appropriate computers will have the SetAutoAdminPassword command sent to them automatically.
	AutoDeployEnabled bool `json:"autoDeployEnabled"`
	// The amount of time in seconds that the local admin password will be rotated after viewing.
	PasswordRotationTime int32 `json:"passwordRotationTime"`
	// When enabled, all appropriate computers will automatically have their password expired and rotated after the configured autoRotateExpirationTime
	AutoRotateEnabled bool `json:"autoRotateEnabled"`
	// The amount of time in seconds that the local admin password will be rotated automatically if it is never viewed.
	AutoRotateExpirationTime int32 `json:"autoRotateExpirationTime"`
}

// NewLapsSettingsRequestV2 instantiates a new LapsSettingsRequestV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLapsSettingsRequestV2(autoDeployEnabled bool, passwordRotationTime int32, autoRotateEnabled bool, autoRotateExpirationTime int32) *LapsSettingsRequestV2 {
	this := LapsSettingsRequestV2{}
	this.AutoDeployEnabled = autoDeployEnabled
	this.PasswordRotationTime = passwordRotationTime
	this.AutoRotateEnabled = autoRotateEnabled
	this.AutoRotateExpirationTime = autoRotateExpirationTime
	return &this
}

// NewLapsSettingsRequestV2WithDefaults instantiates a new LapsSettingsRequestV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLapsSettingsRequestV2WithDefaults() *LapsSettingsRequestV2 {
	this := LapsSettingsRequestV2{}
	return &this
}

// GetAutoDeployEnabled returns the AutoDeployEnabled field value
func (o *LapsSettingsRequestV2) GetAutoDeployEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoDeployEnabled
}

// GetAutoDeployEnabledOk returns a tuple with the AutoDeployEnabled field value
// and a boolean to check if the value has been set.
func (o *LapsSettingsRequestV2) GetAutoDeployEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoDeployEnabled, true
}

// SetAutoDeployEnabled sets field value
func (o *LapsSettingsRequestV2) SetAutoDeployEnabled(v bool) {
	o.AutoDeployEnabled = v
}

// GetPasswordRotationTime returns the PasswordRotationTime field value
func (o *LapsSettingsRequestV2) GetPasswordRotationTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PasswordRotationTime
}

// GetPasswordRotationTimeOk returns a tuple with the PasswordRotationTime field value
// and a boolean to check if the value has been set.
func (o *LapsSettingsRequestV2) GetPasswordRotationTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PasswordRotationTime, true
}

// SetPasswordRotationTime sets field value
func (o *LapsSettingsRequestV2) SetPasswordRotationTime(v int32) {
	o.PasswordRotationTime = v
}

// GetAutoRotateEnabled returns the AutoRotateEnabled field value
func (o *LapsSettingsRequestV2) GetAutoRotateEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoRotateEnabled
}

// GetAutoRotateEnabledOk returns a tuple with the AutoRotateEnabled field value
// and a boolean to check if the value has been set.
func (o *LapsSettingsRequestV2) GetAutoRotateEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoRotateEnabled, true
}

// SetAutoRotateEnabled sets field value
func (o *LapsSettingsRequestV2) SetAutoRotateEnabled(v bool) {
	o.AutoRotateEnabled = v
}

// GetAutoRotateExpirationTime returns the AutoRotateExpirationTime field value
func (o *LapsSettingsRequestV2) GetAutoRotateExpirationTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AutoRotateExpirationTime
}

// GetAutoRotateExpirationTimeOk returns a tuple with the AutoRotateExpirationTime field value
// and a boolean to check if the value has been set.
func (o *LapsSettingsRequestV2) GetAutoRotateExpirationTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoRotateExpirationTime, true
}

// SetAutoRotateExpirationTime sets field value
func (o *LapsSettingsRequestV2) SetAutoRotateExpirationTime(v int32) {
	o.AutoRotateExpirationTime = v
}

func (o LapsSettingsRequestV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LapsSettingsRequestV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["autoDeployEnabled"] = o.AutoDeployEnabled
	toSerialize["passwordRotationTime"] = o.PasswordRotationTime
	toSerialize["autoRotateEnabled"] = o.AutoRotateEnabled
	toSerialize["autoRotateExpirationTime"] = o.AutoRotateExpirationTime
	return toSerialize, nil
}

type NullableLapsSettingsRequestV2 struct {
	value *LapsSettingsRequestV2
	isSet bool
}

func (v NullableLapsSettingsRequestV2) Get() *LapsSettingsRequestV2 {
	return v.value
}

func (v *NullableLapsSettingsRequestV2) Set(val *LapsSettingsRequestV2) {
	v.value = val
	v.isSet = true
}

func (v NullableLapsSettingsRequestV2) IsSet() bool {
	return v.isSet
}

func (v *NullableLapsSettingsRequestV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLapsSettingsRequestV2(val *LapsSettingsRequestV2) *NullableLapsSettingsRequestV2 {
	return &NullableLapsSettingsRequestV2{value: val, isSet: true}
}

func (v NullableLapsSettingsRequestV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLapsSettingsRequestV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


