/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the MacOsManagedSoftwareUpdateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MacOsManagedSoftwareUpdateResponse{}

// MacOsManagedSoftwareUpdateResponse struct for MacOsManagedSoftwareUpdateResponse
type MacOsManagedSoftwareUpdateResponse struct {
	ProcessManagerUuids []string `json:"processManagerUuids,omitempty"`
	Errors []ApiErrorCause `json:"errors,omitempty"`
}

// NewMacOsManagedSoftwareUpdateResponse instantiates a new MacOsManagedSoftwareUpdateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMacOsManagedSoftwareUpdateResponse() *MacOsManagedSoftwareUpdateResponse {
	this := MacOsManagedSoftwareUpdateResponse{}
	return &this
}

// NewMacOsManagedSoftwareUpdateResponseWithDefaults instantiates a new MacOsManagedSoftwareUpdateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMacOsManagedSoftwareUpdateResponseWithDefaults() *MacOsManagedSoftwareUpdateResponse {
	this := MacOsManagedSoftwareUpdateResponse{}
	return &this
}

// GetProcessManagerUuids returns the ProcessManagerUuids field value if set, zero value otherwise.
func (o *MacOsManagedSoftwareUpdateResponse) GetProcessManagerUuids() []string {
	if o == nil || IsNil(o.ProcessManagerUuids) {
		var ret []string
		return ret
	}
	return o.ProcessManagerUuids
}

// GetProcessManagerUuidsOk returns a tuple with the ProcessManagerUuids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MacOsManagedSoftwareUpdateResponse) GetProcessManagerUuidsOk() ([]string, bool) {
	if o == nil || IsNil(o.ProcessManagerUuids) {
		return nil, false
	}
	return o.ProcessManagerUuids, true
}

// HasProcessManagerUuids returns a boolean if a field has been set.
func (o *MacOsManagedSoftwareUpdateResponse) HasProcessManagerUuids() bool {
	if o != nil && !IsNil(o.ProcessManagerUuids) {
		return true
	}

	return false
}

// SetProcessManagerUuids gets a reference to the given []string and assigns it to the ProcessManagerUuids field.
func (o *MacOsManagedSoftwareUpdateResponse) SetProcessManagerUuids(v []string) {
	o.ProcessManagerUuids = v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *MacOsManagedSoftwareUpdateResponse) GetErrors() []ApiErrorCause {
	if o == nil || IsNil(o.Errors) {
		var ret []ApiErrorCause
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MacOsManagedSoftwareUpdateResponse) GetErrorsOk() ([]ApiErrorCause, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *MacOsManagedSoftwareUpdateResponse) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []ApiErrorCause and assigns it to the Errors field.
func (o *MacOsManagedSoftwareUpdateResponse) SetErrors(v []ApiErrorCause) {
	o.Errors = v
}

func (o MacOsManagedSoftwareUpdateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MacOsManagedSoftwareUpdateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProcessManagerUuids) {
		toSerialize["processManagerUuids"] = o.ProcessManagerUuids
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	return toSerialize, nil
}

type NullableMacOsManagedSoftwareUpdateResponse struct {
	value *MacOsManagedSoftwareUpdateResponse
	isSet bool
}

func (v NullableMacOsManagedSoftwareUpdateResponse) Get() *MacOsManagedSoftwareUpdateResponse {
	return v.value
}

func (v *NullableMacOsManagedSoftwareUpdateResponse) Set(val *MacOsManagedSoftwareUpdateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMacOsManagedSoftwareUpdateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMacOsManagedSoftwareUpdateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMacOsManagedSoftwareUpdateResponse(val *MacOsManagedSoftwareUpdateResponse) *NullableMacOsManagedSoftwareUpdateResponse {
	return &NullableMacOsManagedSoftwareUpdateResponse{value: val, isSet: true}
}

func (v NullableMacOsManagedSoftwareUpdateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMacOsManagedSoftwareUpdateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


