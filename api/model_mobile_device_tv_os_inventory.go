/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the MobileDeviceTvOsInventory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MobileDeviceTvOsInventory{}

// MobileDeviceTvOsInventory struct for MobileDeviceTvOsInventory
type MobileDeviceTvOsInventory struct {
	MobileDeviceId *string `json:"mobileDeviceId,omitempty"`
	// Based on the value of this type either ios or appleTv objects will be populated.
	DeviceType string `json:"deviceType"`
	Hardware *MobileDeviceHardware `json:"hardware,omitempty"`
	UserAndLocation *MobileDeviceUserAndLocation `json:"userAndLocation,omitempty"`
	Purchasing *MobileDevicePurchasing `json:"purchasing,omitempty"`
	Applications []MobileDeviceApplicationInventoryDetail `json:"applications,omitempty"`
	Certificates []MobileDeviceCertificate `json:"certificates,omitempty"`
	Profiles []MobileDeviceProfile `json:"profiles,omitempty"`
	UserProfiles []MobileDeviceUserProfile `json:"userProfiles,omitempty"`
	ExtensionAttributes []MobileDeviceExtensionAttribute `json:"extensionAttributes,omitempty"`
	General *MobileDeviceTvOsGeneral `json:"general,omitempty"`
}

// NewMobileDeviceTvOsInventory instantiates a new MobileDeviceTvOsInventory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileDeviceTvOsInventory(deviceType string) *MobileDeviceTvOsInventory {
	this := MobileDeviceTvOsInventory{}
	this.DeviceType = deviceType
	return &this
}

// NewMobileDeviceTvOsInventoryWithDefaults instantiates a new MobileDeviceTvOsInventory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileDeviceTvOsInventoryWithDefaults() *MobileDeviceTvOsInventory {
	this := MobileDeviceTvOsInventory{}
	return &this
}

// GetMobileDeviceId returns the MobileDeviceId field value if set, zero value otherwise.
func (o *MobileDeviceTvOsInventory) GetMobileDeviceId() string {
	if o == nil || IsNil(o.MobileDeviceId) {
		var ret string
		return ret
	}
	return *o.MobileDeviceId
}

// GetMobileDeviceIdOk returns a tuple with the MobileDeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceTvOsInventory) GetMobileDeviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.MobileDeviceId) {
		return nil, false
	}
	return o.MobileDeviceId, true
}

// HasMobileDeviceId returns a boolean if a field has been set.
func (o *MobileDeviceTvOsInventory) HasMobileDeviceId() bool {
	if o != nil && !IsNil(o.MobileDeviceId) {
		return true
	}

	return false
}

// SetMobileDeviceId gets a reference to the given string and assigns it to the MobileDeviceId field.
func (o *MobileDeviceTvOsInventory) SetMobileDeviceId(v string) {
	o.MobileDeviceId = &v
}

// GetDeviceType returns the DeviceType field value
func (o *MobileDeviceTvOsInventory) GetDeviceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceType
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value
// and a boolean to check if the value has been set.
func (o *MobileDeviceTvOsInventory) GetDeviceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceType, true
}

// SetDeviceType sets field value
func (o *MobileDeviceTvOsInventory) SetDeviceType(v string) {
	o.DeviceType = v
}

// GetHardware returns the Hardware field value if set, zero value otherwise.
func (o *MobileDeviceTvOsInventory) GetHardware() MobileDeviceHardware {
	if o == nil || IsNil(o.Hardware) {
		var ret MobileDeviceHardware
		return ret
	}
	return *o.Hardware
}

// GetHardwareOk returns a tuple with the Hardware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceTvOsInventory) GetHardwareOk() (*MobileDeviceHardware, bool) {
	if o == nil || IsNil(o.Hardware) {
		return nil, false
	}
	return o.Hardware, true
}

// HasHardware returns a boolean if a field has been set.
func (o *MobileDeviceTvOsInventory) HasHardware() bool {
	if o != nil && !IsNil(o.Hardware) {
		return true
	}

	return false
}

// SetHardware gets a reference to the given MobileDeviceHardware and assigns it to the Hardware field.
func (o *MobileDeviceTvOsInventory) SetHardware(v MobileDeviceHardware) {
	o.Hardware = &v
}

// GetUserAndLocation returns the UserAndLocation field value if set, zero value otherwise.
func (o *MobileDeviceTvOsInventory) GetUserAndLocation() MobileDeviceUserAndLocation {
	if o == nil || IsNil(o.UserAndLocation) {
		var ret MobileDeviceUserAndLocation
		return ret
	}
	return *o.UserAndLocation
}

// GetUserAndLocationOk returns a tuple with the UserAndLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceTvOsInventory) GetUserAndLocationOk() (*MobileDeviceUserAndLocation, bool) {
	if o == nil || IsNil(o.UserAndLocation) {
		return nil, false
	}
	return o.UserAndLocation, true
}

// HasUserAndLocation returns a boolean if a field has been set.
func (o *MobileDeviceTvOsInventory) HasUserAndLocation() bool {
	if o != nil && !IsNil(o.UserAndLocation) {
		return true
	}

	return false
}

// SetUserAndLocation gets a reference to the given MobileDeviceUserAndLocation and assigns it to the UserAndLocation field.
func (o *MobileDeviceTvOsInventory) SetUserAndLocation(v MobileDeviceUserAndLocation) {
	o.UserAndLocation = &v
}

// GetPurchasing returns the Purchasing field value if set, zero value otherwise.
func (o *MobileDeviceTvOsInventory) GetPurchasing() MobileDevicePurchasing {
	if o == nil || IsNil(o.Purchasing) {
		var ret MobileDevicePurchasing
		return ret
	}
	return *o.Purchasing
}

// GetPurchasingOk returns a tuple with the Purchasing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceTvOsInventory) GetPurchasingOk() (*MobileDevicePurchasing, bool) {
	if o == nil || IsNil(o.Purchasing) {
		return nil, false
	}
	return o.Purchasing, true
}

// HasPurchasing returns a boolean if a field has been set.
func (o *MobileDeviceTvOsInventory) HasPurchasing() bool {
	if o != nil && !IsNil(o.Purchasing) {
		return true
	}

	return false
}

// SetPurchasing gets a reference to the given MobileDevicePurchasing and assigns it to the Purchasing field.
func (o *MobileDeviceTvOsInventory) SetPurchasing(v MobileDevicePurchasing) {
	o.Purchasing = &v
}

// GetApplications returns the Applications field value if set, zero value otherwise.
func (o *MobileDeviceTvOsInventory) GetApplications() []MobileDeviceApplicationInventoryDetail {
	if o == nil || IsNil(o.Applications) {
		var ret []MobileDeviceApplicationInventoryDetail
		return ret
	}
	return o.Applications
}

// GetApplicationsOk returns a tuple with the Applications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceTvOsInventory) GetApplicationsOk() ([]MobileDeviceApplicationInventoryDetail, bool) {
	if o == nil || IsNil(o.Applications) {
		return nil, false
	}
	return o.Applications, true
}

// HasApplications returns a boolean if a field has been set.
func (o *MobileDeviceTvOsInventory) HasApplications() bool {
	if o != nil && !IsNil(o.Applications) {
		return true
	}

	return false
}

// SetApplications gets a reference to the given []MobileDeviceApplicationInventoryDetail and assigns it to the Applications field.
func (o *MobileDeviceTvOsInventory) SetApplications(v []MobileDeviceApplicationInventoryDetail) {
	o.Applications = v
}

// GetCertificates returns the Certificates field value if set, zero value otherwise.
func (o *MobileDeviceTvOsInventory) GetCertificates() []MobileDeviceCertificate {
	if o == nil || IsNil(o.Certificates) {
		var ret []MobileDeviceCertificate
		return ret
	}
	return o.Certificates
}

// GetCertificatesOk returns a tuple with the Certificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceTvOsInventory) GetCertificatesOk() ([]MobileDeviceCertificate, bool) {
	if o == nil || IsNil(o.Certificates) {
		return nil, false
	}
	return o.Certificates, true
}

// HasCertificates returns a boolean if a field has been set.
func (o *MobileDeviceTvOsInventory) HasCertificates() bool {
	if o != nil && !IsNil(o.Certificates) {
		return true
	}

	return false
}

// SetCertificates gets a reference to the given []MobileDeviceCertificate and assigns it to the Certificates field.
func (o *MobileDeviceTvOsInventory) SetCertificates(v []MobileDeviceCertificate) {
	o.Certificates = v
}

// GetProfiles returns the Profiles field value if set, zero value otherwise.
func (o *MobileDeviceTvOsInventory) GetProfiles() []MobileDeviceProfile {
	if o == nil || IsNil(o.Profiles) {
		var ret []MobileDeviceProfile
		return ret
	}
	return o.Profiles
}

// GetProfilesOk returns a tuple with the Profiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceTvOsInventory) GetProfilesOk() ([]MobileDeviceProfile, bool) {
	if o == nil || IsNil(o.Profiles) {
		return nil, false
	}
	return o.Profiles, true
}

// HasProfiles returns a boolean if a field has been set.
func (o *MobileDeviceTvOsInventory) HasProfiles() bool {
	if o != nil && !IsNil(o.Profiles) {
		return true
	}

	return false
}

// SetProfiles gets a reference to the given []MobileDeviceProfile and assigns it to the Profiles field.
func (o *MobileDeviceTvOsInventory) SetProfiles(v []MobileDeviceProfile) {
	o.Profiles = v
}

// GetUserProfiles returns the UserProfiles field value if set, zero value otherwise.
func (o *MobileDeviceTvOsInventory) GetUserProfiles() []MobileDeviceUserProfile {
	if o == nil || IsNil(o.UserProfiles) {
		var ret []MobileDeviceUserProfile
		return ret
	}
	return o.UserProfiles
}

// GetUserProfilesOk returns a tuple with the UserProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceTvOsInventory) GetUserProfilesOk() ([]MobileDeviceUserProfile, bool) {
	if o == nil || IsNil(o.UserProfiles) {
		return nil, false
	}
	return o.UserProfiles, true
}

// HasUserProfiles returns a boolean if a field has been set.
func (o *MobileDeviceTvOsInventory) HasUserProfiles() bool {
	if o != nil && !IsNil(o.UserProfiles) {
		return true
	}

	return false
}

// SetUserProfiles gets a reference to the given []MobileDeviceUserProfile and assigns it to the UserProfiles field.
func (o *MobileDeviceTvOsInventory) SetUserProfiles(v []MobileDeviceUserProfile) {
	o.UserProfiles = v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *MobileDeviceTvOsInventory) GetExtensionAttributes() []MobileDeviceExtensionAttribute {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret []MobileDeviceExtensionAttribute
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceTvOsInventory) GetExtensionAttributesOk() ([]MobileDeviceExtensionAttribute, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *MobileDeviceTvOsInventory) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given []MobileDeviceExtensionAttribute and assigns it to the ExtensionAttributes field.
func (o *MobileDeviceTvOsInventory) SetExtensionAttributes(v []MobileDeviceExtensionAttribute) {
	o.ExtensionAttributes = v
}

// GetGeneral returns the General field value if set, zero value otherwise.
func (o *MobileDeviceTvOsInventory) GetGeneral() MobileDeviceTvOsGeneral {
	if o == nil || IsNil(o.General) {
		var ret MobileDeviceTvOsGeneral
		return ret
	}
	return *o.General
}

// GetGeneralOk returns a tuple with the General field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileDeviceTvOsInventory) GetGeneralOk() (*MobileDeviceTvOsGeneral, bool) {
	if o == nil || IsNil(o.General) {
		return nil, false
	}
	return o.General, true
}

// HasGeneral returns a boolean if a field has been set.
func (o *MobileDeviceTvOsInventory) HasGeneral() bool {
	if o != nil && !IsNil(o.General) {
		return true
	}

	return false
}

// SetGeneral gets a reference to the given MobileDeviceTvOsGeneral and assigns it to the General field.
func (o *MobileDeviceTvOsInventory) SetGeneral(v MobileDeviceTvOsGeneral) {
	o.General = &v
}

func (o MobileDeviceTvOsInventory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MobileDeviceTvOsInventory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MobileDeviceId) {
		toSerialize["mobileDeviceId"] = o.MobileDeviceId
	}
	toSerialize["deviceType"] = o.DeviceType
	if !IsNil(o.Hardware) {
		toSerialize["hardware"] = o.Hardware
	}
	if !IsNil(o.UserAndLocation) {
		toSerialize["userAndLocation"] = o.UserAndLocation
	}
	if !IsNil(o.Purchasing) {
		toSerialize["purchasing"] = o.Purchasing
	}
	if !IsNil(o.Applications) {
		toSerialize["applications"] = o.Applications
	}
	if !IsNil(o.Certificates) {
		toSerialize["certificates"] = o.Certificates
	}
	if !IsNil(o.Profiles) {
		toSerialize["profiles"] = o.Profiles
	}
	if !IsNil(o.UserProfiles) {
		toSerialize["userProfiles"] = o.UserProfiles
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extensionAttributes"] = o.ExtensionAttributes
	}
	if !IsNil(o.General) {
		toSerialize["general"] = o.General
	}
	return toSerialize, nil
}

type NullableMobileDeviceTvOsInventory struct {
	value *MobileDeviceTvOsInventory
	isSet bool
}

func (v NullableMobileDeviceTvOsInventory) Get() *MobileDeviceTvOsInventory {
	return v.value
}

func (v *NullableMobileDeviceTvOsInventory) Set(val *MobileDeviceTvOsInventory) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileDeviceTvOsInventory) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileDeviceTvOsInventory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileDeviceTvOsInventory(val *MobileDeviceTvOsInventory) *NullableMobileDeviceTvOsInventory {
	return &NullableMobileDeviceTvOsInventory{value: val, isSet: true}
}

func (v NullableMobileDeviceTvOsInventory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileDeviceTvOsInventory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


