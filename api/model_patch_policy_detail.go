/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PatchPolicyDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchPolicyDetail{}

// PatchPolicyDetail struct for PatchPolicyDetail
type PatchPolicyDetail struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	TargetPatchVersion *string `json:"targetPatchVersion,omitempty"`
	DeploymentMethod *string `json:"deploymentMethod,omitempty"`
	SoftwareTitleId *string `json:"softwareTitleId,omitempty"`
	SoftwareTitleConfigurationId *string `json:"softwareTitleConfigurationId,omitempty"`
	KillAppsDelayMinutes *int32 `json:"killAppsDelayMinutes,omitempty"`
	KillAppsMessage *string `json:"killAppsMessage,omitempty"`
	Downgrade *bool `json:"downgrade,omitempty"`
	PatchUnknownVersion *bool `json:"patchUnknownVersion,omitempty"`
	NotificationHeader *string `json:"notificationHeader,omitempty"`
	SelfServiceEnforceDeadline *bool `json:"selfServiceEnforceDeadline,omitempty"`
	SelfServiceDeadline *int32 `json:"selfServiceDeadline,omitempty"`
	InstallButtonText *string `json:"installButtonText,omitempty"`
	SelfServiceDescription *string `json:"selfServiceDescription,omitempty"`
	IconId *string `json:"iconId,omitempty"`
	ReminderFrequency *int32 `json:"reminderFrequency,omitempty"`
	ReminderEnabled *bool `json:"reminderEnabled,omitempty"`
}

// NewPatchPolicyDetail instantiates a new PatchPolicyDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchPolicyDetail() *PatchPolicyDetail {
	this := PatchPolicyDetail{}
	return &this
}

// NewPatchPolicyDetailWithDefaults instantiates a new PatchPolicyDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchPolicyDetailWithDefaults() *PatchPolicyDetail {
	this := PatchPolicyDetail{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PatchPolicyDetail) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyDetail) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PatchPolicyDetail) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PatchPolicyDetail) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchPolicyDetail) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyDetail) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchPolicyDetail) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchPolicyDetail) SetName(v string) {
	o.Name = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *PatchPolicyDetail) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyDetail) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *PatchPolicyDetail) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *PatchPolicyDetail) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetTargetPatchVersion returns the TargetPatchVersion field value if set, zero value otherwise.
func (o *PatchPolicyDetail) GetTargetPatchVersion() string {
	if o == nil || IsNil(o.TargetPatchVersion) {
		var ret string
		return ret
	}
	return *o.TargetPatchVersion
}

// GetTargetPatchVersionOk returns a tuple with the TargetPatchVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyDetail) GetTargetPatchVersionOk() (*string, bool) {
	if o == nil || IsNil(o.TargetPatchVersion) {
		return nil, false
	}
	return o.TargetPatchVersion, true
}

// HasTargetPatchVersion returns a boolean if a field has been set.
func (o *PatchPolicyDetail) HasTargetPatchVersion() bool {
	if o != nil && !IsNil(o.TargetPatchVersion) {
		return true
	}

	return false
}

// SetTargetPatchVersion gets a reference to the given string and assigns it to the TargetPatchVersion field.
func (o *PatchPolicyDetail) SetTargetPatchVersion(v string) {
	o.TargetPatchVersion = &v
}

// GetDeploymentMethod returns the DeploymentMethod field value if set, zero value otherwise.
func (o *PatchPolicyDetail) GetDeploymentMethod() string {
	if o == nil || IsNil(o.DeploymentMethod) {
		var ret string
		return ret
	}
	return *o.DeploymentMethod
}

// GetDeploymentMethodOk returns a tuple with the DeploymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyDetail) GetDeploymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.DeploymentMethod) {
		return nil, false
	}
	return o.DeploymentMethod, true
}

// HasDeploymentMethod returns a boolean if a field has been set.
func (o *PatchPolicyDetail) HasDeploymentMethod() bool {
	if o != nil && !IsNil(o.DeploymentMethod) {
		return true
	}

	return false
}

// SetDeploymentMethod gets a reference to the given string and assigns it to the DeploymentMethod field.
func (o *PatchPolicyDetail) SetDeploymentMethod(v string) {
	o.DeploymentMethod = &v
}

// GetSoftwareTitleId returns the SoftwareTitleId field value if set, zero value otherwise.
func (o *PatchPolicyDetail) GetSoftwareTitleId() string {
	if o == nil || IsNil(o.SoftwareTitleId) {
		var ret string
		return ret
	}
	return *o.SoftwareTitleId
}

// GetSoftwareTitleIdOk returns a tuple with the SoftwareTitleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyDetail) GetSoftwareTitleIdOk() (*string, bool) {
	if o == nil || IsNil(o.SoftwareTitleId) {
		return nil, false
	}
	return o.SoftwareTitleId, true
}

// HasSoftwareTitleId returns a boolean if a field has been set.
func (o *PatchPolicyDetail) HasSoftwareTitleId() bool {
	if o != nil && !IsNil(o.SoftwareTitleId) {
		return true
	}

	return false
}

// SetSoftwareTitleId gets a reference to the given string and assigns it to the SoftwareTitleId field.
func (o *PatchPolicyDetail) SetSoftwareTitleId(v string) {
	o.SoftwareTitleId = &v
}

// GetSoftwareTitleConfigurationId returns the SoftwareTitleConfigurationId field value if set, zero value otherwise.
func (o *PatchPolicyDetail) GetSoftwareTitleConfigurationId() string {
	if o == nil || IsNil(o.SoftwareTitleConfigurationId) {
		var ret string
		return ret
	}
	return *o.SoftwareTitleConfigurationId
}

// GetSoftwareTitleConfigurationIdOk returns a tuple with the SoftwareTitleConfigurationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyDetail) GetSoftwareTitleConfigurationIdOk() (*string, bool) {
	if o == nil || IsNil(o.SoftwareTitleConfigurationId) {
		return nil, false
	}
	return o.SoftwareTitleConfigurationId, true
}

// HasSoftwareTitleConfigurationId returns a boolean if a field has been set.
func (o *PatchPolicyDetail) HasSoftwareTitleConfigurationId() bool {
	if o != nil && !IsNil(o.SoftwareTitleConfigurationId) {
		return true
	}

	return false
}

// SetSoftwareTitleConfigurationId gets a reference to the given string and assigns it to the SoftwareTitleConfigurationId field.
func (o *PatchPolicyDetail) SetSoftwareTitleConfigurationId(v string) {
	o.SoftwareTitleConfigurationId = &v
}

// GetKillAppsDelayMinutes returns the KillAppsDelayMinutes field value if set, zero value otherwise.
func (o *PatchPolicyDetail) GetKillAppsDelayMinutes() int32 {
	if o == nil || IsNil(o.KillAppsDelayMinutes) {
		var ret int32
		return ret
	}
	return *o.KillAppsDelayMinutes
}

// GetKillAppsDelayMinutesOk returns a tuple with the KillAppsDelayMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyDetail) GetKillAppsDelayMinutesOk() (*int32, bool) {
	if o == nil || IsNil(o.KillAppsDelayMinutes) {
		return nil, false
	}
	return o.KillAppsDelayMinutes, true
}

// HasKillAppsDelayMinutes returns a boolean if a field has been set.
func (o *PatchPolicyDetail) HasKillAppsDelayMinutes() bool {
	if o != nil && !IsNil(o.KillAppsDelayMinutes) {
		return true
	}

	return false
}

// SetKillAppsDelayMinutes gets a reference to the given int32 and assigns it to the KillAppsDelayMinutes field.
func (o *PatchPolicyDetail) SetKillAppsDelayMinutes(v int32) {
	o.KillAppsDelayMinutes = &v
}

// GetKillAppsMessage returns the KillAppsMessage field value if set, zero value otherwise.
func (o *PatchPolicyDetail) GetKillAppsMessage() string {
	if o == nil || IsNil(o.KillAppsMessage) {
		var ret string
		return ret
	}
	return *o.KillAppsMessage
}

// GetKillAppsMessageOk returns a tuple with the KillAppsMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyDetail) GetKillAppsMessageOk() (*string, bool) {
	if o == nil || IsNil(o.KillAppsMessage) {
		return nil, false
	}
	return o.KillAppsMessage, true
}

// HasKillAppsMessage returns a boolean if a field has been set.
func (o *PatchPolicyDetail) HasKillAppsMessage() bool {
	if o != nil && !IsNil(o.KillAppsMessage) {
		return true
	}

	return false
}

// SetKillAppsMessage gets a reference to the given string and assigns it to the KillAppsMessage field.
func (o *PatchPolicyDetail) SetKillAppsMessage(v string) {
	o.KillAppsMessage = &v
}

// GetDowngrade returns the Downgrade field value if set, zero value otherwise.
func (o *PatchPolicyDetail) GetDowngrade() bool {
	if o == nil || IsNil(o.Downgrade) {
		var ret bool
		return ret
	}
	return *o.Downgrade
}

// GetDowngradeOk returns a tuple with the Downgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyDetail) GetDowngradeOk() (*bool, bool) {
	if o == nil || IsNil(o.Downgrade) {
		return nil, false
	}
	return o.Downgrade, true
}

// HasDowngrade returns a boolean if a field has been set.
func (o *PatchPolicyDetail) HasDowngrade() bool {
	if o != nil && !IsNil(o.Downgrade) {
		return true
	}

	return false
}

// SetDowngrade gets a reference to the given bool and assigns it to the Downgrade field.
func (o *PatchPolicyDetail) SetDowngrade(v bool) {
	o.Downgrade = &v
}

// GetPatchUnknownVersion returns the PatchUnknownVersion field value if set, zero value otherwise.
func (o *PatchPolicyDetail) GetPatchUnknownVersion() bool {
	if o == nil || IsNil(o.PatchUnknownVersion) {
		var ret bool
		return ret
	}
	return *o.PatchUnknownVersion
}

// GetPatchUnknownVersionOk returns a tuple with the PatchUnknownVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyDetail) GetPatchUnknownVersionOk() (*bool, bool) {
	if o == nil || IsNil(o.PatchUnknownVersion) {
		return nil, false
	}
	return o.PatchUnknownVersion, true
}

// HasPatchUnknownVersion returns a boolean if a field has been set.
func (o *PatchPolicyDetail) HasPatchUnknownVersion() bool {
	if o != nil && !IsNil(o.PatchUnknownVersion) {
		return true
	}

	return false
}

// SetPatchUnknownVersion gets a reference to the given bool and assigns it to the PatchUnknownVersion field.
func (o *PatchPolicyDetail) SetPatchUnknownVersion(v bool) {
	o.PatchUnknownVersion = &v
}

// GetNotificationHeader returns the NotificationHeader field value if set, zero value otherwise.
func (o *PatchPolicyDetail) GetNotificationHeader() string {
	if o == nil || IsNil(o.NotificationHeader) {
		var ret string
		return ret
	}
	return *o.NotificationHeader
}

// GetNotificationHeaderOk returns a tuple with the NotificationHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyDetail) GetNotificationHeaderOk() (*string, bool) {
	if o == nil || IsNil(o.NotificationHeader) {
		return nil, false
	}
	return o.NotificationHeader, true
}

// HasNotificationHeader returns a boolean if a field has been set.
func (o *PatchPolicyDetail) HasNotificationHeader() bool {
	if o != nil && !IsNil(o.NotificationHeader) {
		return true
	}

	return false
}

// SetNotificationHeader gets a reference to the given string and assigns it to the NotificationHeader field.
func (o *PatchPolicyDetail) SetNotificationHeader(v string) {
	o.NotificationHeader = &v
}

// GetSelfServiceEnforceDeadline returns the SelfServiceEnforceDeadline field value if set, zero value otherwise.
func (o *PatchPolicyDetail) GetSelfServiceEnforceDeadline() bool {
	if o == nil || IsNil(o.SelfServiceEnforceDeadline) {
		var ret bool
		return ret
	}
	return *o.SelfServiceEnforceDeadline
}

// GetSelfServiceEnforceDeadlineOk returns a tuple with the SelfServiceEnforceDeadline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyDetail) GetSelfServiceEnforceDeadlineOk() (*bool, bool) {
	if o == nil || IsNil(o.SelfServiceEnforceDeadline) {
		return nil, false
	}
	return o.SelfServiceEnforceDeadline, true
}

// HasSelfServiceEnforceDeadline returns a boolean if a field has been set.
func (o *PatchPolicyDetail) HasSelfServiceEnforceDeadline() bool {
	if o != nil && !IsNil(o.SelfServiceEnforceDeadline) {
		return true
	}

	return false
}

// SetSelfServiceEnforceDeadline gets a reference to the given bool and assigns it to the SelfServiceEnforceDeadline field.
func (o *PatchPolicyDetail) SetSelfServiceEnforceDeadline(v bool) {
	o.SelfServiceEnforceDeadline = &v
}

// GetSelfServiceDeadline returns the SelfServiceDeadline field value if set, zero value otherwise.
func (o *PatchPolicyDetail) GetSelfServiceDeadline() int32 {
	if o == nil || IsNil(o.SelfServiceDeadline) {
		var ret int32
		return ret
	}
	return *o.SelfServiceDeadline
}

// GetSelfServiceDeadlineOk returns a tuple with the SelfServiceDeadline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyDetail) GetSelfServiceDeadlineOk() (*int32, bool) {
	if o == nil || IsNil(o.SelfServiceDeadline) {
		return nil, false
	}
	return o.SelfServiceDeadline, true
}

// HasSelfServiceDeadline returns a boolean if a field has been set.
func (o *PatchPolicyDetail) HasSelfServiceDeadline() bool {
	if o != nil && !IsNil(o.SelfServiceDeadline) {
		return true
	}

	return false
}

// SetSelfServiceDeadline gets a reference to the given int32 and assigns it to the SelfServiceDeadline field.
func (o *PatchPolicyDetail) SetSelfServiceDeadline(v int32) {
	o.SelfServiceDeadline = &v
}

// GetInstallButtonText returns the InstallButtonText field value if set, zero value otherwise.
func (o *PatchPolicyDetail) GetInstallButtonText() string {
	if o == nil || IsNil(o.InstallButtonText) {
		var ret string
		return ret
	}
	return *o.InstallButtonText
}

// GetInstallButtonTextOk returns a tuple with the InstallButtonText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyDetail) GetInstallButtonTextOk() (*string, bool) {
	if o == nil || IsNil(o.InstallButtonText) {
		return nil, false
	}
	return o.InstallButtonText, true
}

// HasInstallButtonText returns a boolean if a field has been set.
func (o *PatchPolicyDetail) HasInstallButtonText() bool {
	if o != nil && !IsNil(o.InstallButtonText) {
		return true
	}

	return false
}

// SetInstallButtonText gets a reference to the given string and assigns it to the InstallButtonText field.
func (o *PatchPolicyDetail) SetInstallButtonText(v string) {
	o.InstallButtonText = &v
}

// GetSelfServiceDescription returns the SelfServiceDescription field value if set, zero value otherwise.
func (o *PatchPolicyDetail) GetSelfServiceDescription() string {
	if o == nil || IsNil(o.SelfServiceDescription) {
		var ret string
		return ret
	}
	return *o.SelfServiceDescription
}

// GetSelfServiceDescriptionOk returns a tuple with the SelfServiceDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyDetail) GetSelfServiceDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.SelfServiceDescription) {
		return nil, false
	}
	return o.SelfServiceDescription, true
}

// HasSelfServiceDescription returns a boolean if a field has been set.
func (o *PatchPolicyDetail) HasSelfServiceDescription() bool {
	if o != nil && !IsNil(o.SelfServiceDescription) {
		return true
	}

	return false
}

// SetSelfServiceDescription gets a reference to the given string and assigns it to the SelfServiceDescription field.
func (o *PatchPolicyDetail) SetSelfServiceDescription(v string) {
	o.SelfServiceDescription = &v
}

// GetIconId returns the IconId field value if set, zero value otherwise.
func (o *PatchPolicyDetail) GetIconId() string {
	if o == nil || IsNil(o.IconId) {
		var ret string
		return ret
	}
	return *o.IconId
}

// GetIconIdOk returns a tuple with the IconId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyDetail) GetIconIdOk() (*string, bool) {
	if o == nil || IsNil(o.IconId) {
		return nil, false
	}
	return o.IconId, true
}

// HasIconId returns a boolean if a field has been set.
func (o *PatchPolicyDetail) HasIconId() bool {
	if o != nil && !IsNil(o.IconId) {
		return true
	}

	return false
}

// SetIconId gets a reference to the given string and assigns it to the IconId field.
func (o *PatchPolicyDetail) SetIconId(v string) {
	o.IconId = &v
}

// GetReminderFrequency returns the ReminderFrequency field value if set, zero value otherwise.
func (o *PatchPolicyDetail) GetReminderFrequency() int32 {
	if o == nil || IsNil(o.ReminderFrequency) {
		var ret int32
		return ret
	}
	return *o.ReminderFrequency
}

// GetReminderFrequencyOk returns a tuple with the ReminderFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyDetail) GetReminderFrequencyOk() (*int32, bool) {
	if o == nil || IsNil(o.ReminderFrequency) {
		return nil, false
	}
	return o.ReminderFrequency, true
}

// HasReminderFrequency returns a boolean if a field has been set.
func (o *PatchPolicyDetail) HasReminderFrequency() bool {
	if o != nil && !IsNil(o.ReminderFrequency) {
		return true
	}

	return false
}

// SetReminderFrequency gets a reference to the given int32 and assigns it to the ReminderFrequency field.
func (o *PatchPolicyDetail) SetReminderFrequency(v int32) {
	o.ReminderFrequency = &v
}

// GetReminderEnabled returns the ReminderEnabled field value if set, zero value otherwise.
func (o *PatchPolicyDetail) GetReminderEnabled() bool {
	if o == nil || IsNil(o.ReminderEnabled) {
		var ret bool
		return ret
	}
	return *o.ReminderEnabled
}

// GetReminderEnabledOk returns a tuple with the ReminderEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchPolicyDetail) GetReminderEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ReminderEnabled) {
		return nil, false
	}
	return o.ReminderEnabled, true
}

// HasReminderEnabled returns a boolean if a field has been set.
func (o *PatchPolicyDetail) HasReminderEnabled() bool {
	if o != nil && !IsNil(o.ReminderEnabled) {
		return true
	}

	return false
}

// SetReminderEnabled gets a reference to the given bool and assigns it to the ReminderEnabled field.
func (o *PatchPolicyDetail) SetReminderEnabled(v bool) {
	o.ReminderEnabled = &v
}

func (o PatchPolicyDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchPolicyDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.TargetPatchVersion) {
		toSerialize["targetPatchVersion"] = o.TargetPatchVersion
	}
	if !IsNil(o.DeploymentMethod) {
		toSerialize["deploymentMethod"] = o.DeploymentMethod
	}
	if !IsNil(o.SoftwareTitleId) {
		toSerialize["softwareTitleId"] = o.SoftwareTitleId
	}
	if !IsNil(o.SoftwareTitleConfigurationId) {
		toSerialize["softwareTitleConfigurationId"] = o.SoftwareTitleConfigurationId
	}
	if !IsNil(o.KillAppsDelayMinutes) {
		toSerialize["killAppsDelayMinutes"] = o.KillAppsDelayMinutes
	}
	if !IsNil(o.KillAppsMessage) {
		toSerialize["killAppsMessage"] = o.KillAppsMessage
	}
	if !IsNil(o.Downgrade) {
		toSerialize["downgrade"] = o.Downgrade
	}
	if !IsNil(o.PatchUnknownVersion) {
		toSerialize["patchUnknownVersion"] = o.PatchUnknownVersion
	}
	if !IsNil(o.NotificationHeader) {
		toSerialize["notificationHeader"] = o.NotificationHeader
	}
	if !IsNil(o.SelfServiceEnforceDeadline) {
		toSerialize["selfServiceEnforceDeadline"] = o.SelfServiceEnforceDeadline
	}
	if !IsNil(o.SelfServiceDeadline) {
		toSerialize["selfServiceDeadline"] = o.SelfServiceDeadline
	}
	if !IsNil(o.InstallButtonText) {
		toSerialize["installButtonText"] = o.InstallButtonText
	}
	if !IsNil(o.SelfServiceDescription) {
		toSerialize["selfServiceDescription"] = o.SelfServiceDescription
	}
	if !IsNil(o.IconId) {
		toSerialize["iconId"] = o.IconId
	}
	if !IsNil(o.ReminderFrequency) {
		toSerialize["reminderFrequency"] = o.ReminderFrequency
	}
	if !IsNil(o.ReminderEnabled) {
		toSerialize["reminderEnabled"] = o.ReminderEnabled
	}
	return toSerialize, nil
}

type NullablePatchPolicyDetail struct {
	value *PatchPolicyDetail
	isSet bool
}

func (v NullablePatchPolicyDetail) Get() *PatchPolicyDetail {
	return v.value
}

func (v *NullablePatchPolicyDetail) Set(val *PatchPolicyDetail) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchPolicyDetail) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchPolicyDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchPolicyDetail(val *PatchPolicyDetail) *NullablePatchPolicyDetail {
	return &NullablePatchPolicyDetail{value: val, isSet: true}
}

func (v NullablePatchPolicyDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchPolicyDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


