/*
Jamf Pro API

Testing EnrollmentCustomizationPreviewAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package api

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/yohan460/go-jamf-api"
)

func Test_api_EnrollmentCustomizationPreviewAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test EnrollmentCustomizationPreviewAPIService V1EnrollmentCustomizationIdAllGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32

		resp, httpRes, err := apiClient.EnrollmentCustomizationPreviewAPI.V1EnrollmentCustomizationIdAllGet(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EnrollmentCustomizationPreviewAPIService V1EnrollmentCustomizationIdAllPanelIdDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32
		var panelId int32

		httpRes, err := apiClient.EnrollmentCustomizationPreviewAPI.V1EnrollmentCustomizationIdAllPanelIdDelete(context.Background(), id, panelId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EnrollmentCustomizationPreviewAPIService V1EnrollmentCustomizationIdAllPanelIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32
		var panelId int32

		resp, httpRes, err := apiClient.EnrollmentCustomizationPreviewAPI.V1EnrollmentCustomizationIdAllPanelIdGet(context.Background(), id, panelId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EnrollmentCustomizationPreviewAPIService V1EnrollmentCustomizationIdLdapPanelIdDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32
		var panelId int32

		httpRes, err := apiClient.EnrollmentCustomizationPreviewAPI.V1EnrollmentCustomizationIdLdapPanelIdDelete(context.Background(), id, panelId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EnrollmentCustomizationPreviewAPIService V1EnrollmentCustomizationIdLdapPanelIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32
		var panelId int32

		resp, httpRes, err := apiClient.EnrollmentCustomizationPreviewAPI.V1EnrollmentCustomizationIdLdapPanelIdGet(context.Background(), id, panelId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EnrollmentCustomizationPreviewAPIService V1EnrollmentCustomizationIdLdapPanelIdPut", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32
		var panelId int32

		resp, httpRes, err := apiClient.EnrollmentCustomizationPreviewAPI.V1EnrollmentCustomizationIdLdapPanelIdPut(context.Background(), id, panelId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EnrollmentCustomizationPreviewAPIService V1EnrollmentCustomizationIdLdapPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32

		resp, httpRes, err := apiClient.EnrollmentCustomizationPreviewAPI.V1EnrollmentCustomizationIdLdapPost(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EnrollmentCustomizationPreviewAPIService V1EnrollmentCustomizationIdSsoPanelIdDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32
		var panelId int32

		httpRes, err := apiClient.EnrollmentCustomizationPreviewAPI.V1EnrollmentCustomizationIdSsoPanelIdDelete(context.Background(), id, panelId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EnrollmentCustomizationPreviewAPIService V1EnrollmentCustomizationIdSsoPanelIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32
		var panelId int32

		resp, httpRes, err := apiClient.EnrollmentCustomizationPreviewAPI.V1EnrollmentCustomizationIdSsoPanelIdGet(context.Background(), id, panelId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EnrollmentCustomizationPreviewAPIService V1EnrollmentCustomizationIdSsoPanelIdPut", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32
		var panelId int32

		resp, httpRes, err := apiClient.EnrollmentCustomizationPreviewAPI.V1EnrollmentCustomizationIdSsoPanelIdPut(context.Background(), id, panelId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EnrollmentCustomizationPreviewAPIService V1EnrollmentCustomizationIdSsoPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32

		resp, httpRes, err := apiClient.EnrollmentCustomizationPreviewAPI.V1EnrollmentCustomizationIdSsoPost(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EnrollmentCustomizationPreviewAPIService V1EnrollmentCustomizationIdTextPanelIdDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32
		var panelId int32

		httpRes, err := apiClient.EnrollmentCustomizationPreviewAPI.V1EnrollmentCustomizationIdTextPanelIdDelete(context.Background(), id, panelId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EnrollmentCustomizationPreviewAPIService V1EnrollmentCustomizationIdTextPanelIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32
		var panelId int32

		resp, httpRes, err := apiClient.EnrollmentCustomizationPreviewAPI.V1EnrollmentCustomizationIdTextPanelIdGet(context.Background(), id, panelId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EnrollmentCustomizationPreviewAPIService V1EnrollmentCustomizationIdTextPanelIdMarkdownGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32
		var panelId int32

		resp, httpRes, err := apiClient.EnrollmentCustomizationPreviewAPI.V1EnrollmentCustomizationIdTextPanelIdMarkdownGet(context.Background(), id, panelId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EnrollmentCustomizationPreviewAPIService V1EnrollmentCustomizationIdTextPanelIdPut", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32
		var panelId int32

		resp, httpRes, err := apiClient.EnrollmentCustomizationPreviewAPI.V1EnrollmentCustomizationIdTextPanelIdPut(context.Background(), id, panelId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EnrollmentCustomizationPreviewAPIService V1EnrollmentCustomizationIdTextPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32

		resp, httpRes, err := apiClient.EnrollmentCustomizationPreviewAPI.V1EnrollmentCustomizationIdTextPost(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EnrollmentCustomizationPreviewAPIService V1EnrollmentCustomizationParseMarkdownPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.EnrollmentCustomizationPreviewAPI.V1EnrollmentCustomizationParseMarkdownPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
