/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// MdmClientType the model 'MdmClientType'
type MdmClientType string

// List of MdmClientType
const (
	MOBILE_DEVICE MdmClientType = "MOBILE_DEVICE"
	TV MdmClientType = "TV"
	COMPUTER MdmClientType = "COMPUTER"
	COMPUTER_USER MdmClientType = "COMPUTER_USER"
	MOBILE_DEVICE_USER MdmClientType = "MOBILE_DEVICE_USER"
)

// All allowed values of MdmClientType enum
var AllowedMdmClientTypeEnumValues = []MdmClientType{
	"MOBILE_DEVICE",
	"TV",
	"COMPUTER",
	"COMPUTER_USER",
	"MOBILE_DEVICE_USER",
}

func (v *MdmClientType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MdmClientType(value)
	for _, existing := range AllowedMdmClientTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MdmClientType", value)
}

// NewMdmClientTypeFromValue returns a pointer to a valid MdmClientType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMdmClientTypeFromValue(v string) (*MdmClientType, error) {
	ev := MdmClientType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MdmClientType: valid values are %v", v, AllowedMdmClientTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MdmClientType) IsValid() bool {
	for _, existing := range AllowedMdmClientTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MdmClientType value
func (v MdmClientType) Ptr() *MdmClientType {
	return &v
}

type NullableMdmClientType struct {
	value *MdmClientType
	isSet bool
}

func (v NullableMdmClientType) Get() *MdmClientType {
	return v.value
}

func (v *NullableMdmClientType) Set(val *MdmClientType) {
	v.value = val
	v.isSet = true
}

func (v NullableMdmClientType) IsSet() bool {
	return v.isSet
}

func (v *NullableMdmClientType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMdmClientType(val *MdmClientType) *NullableMdmClientType {
	return &NullableMdmClientType{value: val, isSet: true}
}

func (v NullableMdmClientType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMdmClientType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

