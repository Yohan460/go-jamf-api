/*
Jamf Pro API

## Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

API version: production
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// InternalRecipient struct for InternalRecipient
type InternalRecipient struct {
	AccountId string `json:"accountId"`
	Frequency *string `json:"frequency,omitempty"`
}

// NewInternalRecipient instantiates a new InternalRecipient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternalRecipient(accountId string) *InternalRecipient {
	this := InternalRecipient{}
	this.AccountId = accountId
	var frequency string = "DAILY"
	this.Frequency = &frequency
	return &this
}

// NewInternalRecipientWithDefaults instantiates a new InternalRecipient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternalRecipientWithDefaults() *InternalRecipient {
	this := InternalRecipient{}
	var frequency string = "DAILY"
	this.Frequency = &frequency
	return &this
}

// GetAccountId returns the AccountId field value
func (o *InternalRecipient) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *InternalRecipient) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *InternalRecipient) SetAccountId(v string) {
	o.AccountId = v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *InternalRecipient) GetFrequency() string {
	if o == nil || o.Frequency == nil {
		var ret string
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalRecipient) GetFrequencyOk() (*string, bool) {
	if o == nil || o.Frequency == nil {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *InternalRecipient) HasFrequency() bool {
	if o != nil && o.Frequency != nil {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given string and assigns it to the Frequency field.
func (o *InternalRecipient) SetFrequency(v string) {
	o.Frequency = &v
}

func (o InternalRecipient) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if o.Frequency != nil {
		toSerialize["frequency"] = o.Frequency
	}
	return json.Marshal(toSerialize)
}

type NullableInternalRecipient struct {
	value *InternalRecipient
	isSet bool
}

func (v NullableInternalRecipient) Get() *InternalRecipient {
	return v.value
}

func (v *NullableInternalRecipient) Set(val *InternalRecipient) {
	v.value = val
	v.isSet = true
}

func (v NullableInternalRecipient) IsSet() bool {
	return v.isSet
}

func (v *NullableInternalRecipient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternalRecipient(val *InternalRecipient) *NullableInternalRecipient {
	return &NullableInternalRecipient{value: val, isSet: true}
}

func (v NullableInternalRecipient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternalRecipient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


